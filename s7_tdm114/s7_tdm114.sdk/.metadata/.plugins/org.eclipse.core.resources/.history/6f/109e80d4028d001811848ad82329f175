/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xiic.h"
//#include "xil_printf.h"


#define IIC_dev XPAR_AXI_IIC_0_DEVICE_ID
#define IIC_SLAVE_ADDR		0x48
#define PCA9534_IIC_ADDR    0x20

XIic iic;

int PCA9534_CTRL ();

int main()
{
	XIic_Config *iic_conf;
	init_platform();

    printf("Hello World\n\r");

    iic_conf = XIic_LookupConfig(IIC_dev);
    u32  Status =  XIic_CfgInitialize(&iic, iic_conf, iic_conf->BaseAddress);
    if (Status != XST_SUCCESS) {
		 printf("XIic initial is fail \n \r") ;
		return XST_FAILURE;
	}
    XIic_Reset(&iic);
    XIic_Start(&iic);
    PCA9534_CTRL ();

    cleanup_platform();
    return 0;
}

int PCA9534_CTRL ()
{
	s32  Status ;
    u8 SendBuffer [2];
    SendBuffer[0]= 0x03;
    SendBuffer[1]= 0x00;

    XIic_SetAddress(&iic,XII_ADDR_TO_SEND_TYPE,PCA9534_IIC_ADDR);

    while (XIic_IsIicBusy(&iic)) {
    		/* NOP */
    	}

   Status = XIic_MasterSend(&iic, SendBuffer, 2);
	     if (Status != XST_SUCCESS) {
		  return XST_FAILURE;
    	}

	while (XIic_IsIicBusy(&iic)== TRUE) {
		/* NOP */
	}

	     SendBuffer[0]= 0x01;
	     SendBuffer[1]= 0x02;

  Status = XIic_MasterSend(&iic, SendBuffer, 2);
	   	    if (Status != XST_SUCCESS) {
	   		  return XST_FAILURE;
	     	}

	   	while (XIic_IsIicBusy(&iic)) {
	   		/* NOP */
	   	}


  usleep(500000);
  SendBuffer[0]= 0x01;
  SendBuffer[1]= 0x01;

  Status = XIic_MasterSend(&iic, SendBuffer, 2);
	     if (Status != XST_SUCCESS) {
		  return XST_FAILURE;
  	}

	while (XIic_IsIicBusy(&iic)) {
		/* NOP */
	}
	 printf("light LED successfully \n\r");
	 usleep(1000);

 return XST_SUCCESS;
}
