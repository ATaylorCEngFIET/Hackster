// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pixel_pack,hls_ip_2019_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=7.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.747000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1109,HLS_SYN_LUT=1294,HLS_VERSION=2019_1_1}" *)

module pixel_pack (
        ap_clk,
        ap_rst_n,
        stream_in_24_TDATA,
        stream_in_24_TVALID,
        stream_in_24_TREADY,
        stream_in_24_TUSER,
        stream_in_24_TLAST,
        stream_out_32_TDATA,
        stream_out_32_TVALID,
        stream_out_32_TREADY,
        stream_out_32_TUSER,
        stream_out_32_TLAST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        control,
        ap_rst_n_control
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_pp0_stage0 = 19'd4;
parameter    ap_ST_fsm_pp0_stage1 = 19'd8;
parameter    ap_ST_fsm_state6 = 19'd16;
parameter    ap_ST_fsm_pp1_stage0 = 19'd32;
parameter    ap_ST_fsm_pp1_stage1 = 19'd64;
parameter    ap_ST_fsm_pp2_stage0 = 19'd128;
parameter    ap_ST_fsm_pp2_stage1 = 19'd256;
parameter    ap_ST_fsm_pp2_stage2 = 19'd512;
parameter    ap_ST_fsm_pp2_stage3 = 19'd1024;
parameter    ap_ST_fsm_state15 = 19'd2048;
parameter    ap_ST_fsm_pp3_stage0 = 19'd4096;
parameter    ap_ST_fsm_state18 = 19'd8192;
parameter    ap_ST_fsm_pp4_stage0 = 19'd16384;
parameter    ap_ST_fsm_pp4_stage1 = 19'd32768;
parameter    ap_ST_fsm_pp4_stage2 = 19'd65536;
parameter    ap_ST_fsm_pp4_stage3 = 19'd131072;
parameter    ap_ST_fsm_state26 = 19'd262144;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [23:0] stream_in_24_TDATA;
input   stream_in_24_TVALID;
output   stream_in_24_TREADY;
input  [0:0] stream_in_24_TUSER;
input  [0:0] stream_in_24_TLAST;
output  [31:0] stream_out_32_TDATA;
output   stream_out_32_TVALID;
input   stream_out_32_TREADY;
output  [0:0] stream_out_32_TUSER;
output  [0:0] stream_out_32_TLAST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   control;
input   ap_rst_n_control;

 reg    ap_rst_n_inv;
reg   [23:0] stream_in_24_data_V_0_data_out;
wire    stream_in_24_data_V_0_vld_in;
wire    stream_in_24_data_V_0_vld_out;
wire    stream_in_24_data_V_0_ack_in;
reg    stream_in_24_data_V_0_ack_out;
reg   [23:0] stream_in_24_data_V_0_payload_A;
reg   [23:0] stream_in_24_data_V_0_payload_B;
reg    stream_in_24_data_V_0_sel_rd;
reg    stream_in_24_data_V_0_sel_wr;
wire    stream_in_24_data_V_0_sel;
wire    stream_in_24_data_V_0_load_A;
wire    stream_in_24_data_V_0_load_B;
reg   [1:0] stream_in_24_data_V_0_state;
wire    stream_in_24_data_V_0_state_cmp_full;
reg   [0:0] stream_in_24_user_V_0_data_out;
wire    stream_in_24_user_V_0_vld_in;
wire    stream_in_24_user_V_0_vld_out;
wire    stream_in_24_user_V_0_ack_in;
reg    stream_in_24_user_V_0_ack_out;
reg   [0:0] stream_in_24_user_V_0_payload_A;
reg   [0:0] stream_in_24_user_V_0_payload_B;
reg    stream_in_24_user_V_0_sel_rd;
reg    stream_in_24_user_V_0_sel_wr;
wire    stream_in_24_user_V_0_sel;
wire    stream_in_24_user_V_0_load_A;
wire    stream_in_24_user_V_0_load_B;
reg   [1:0] stream_in_24_user_V_0_state;
wire    stream_in_24_user_V_0_state_cmp_full;
reg   [0:0] stream_in_24_last_V_0_data_out;
wire    stream_in_24_last_V_0_vld_in;
wire    stream_in_24_last_V_0_vld_out;
wire    stream_in_24_last_V_0_ack_in;
reg    stream_in_24_last_V_0_ack_out;
reg   [0:0] stream_in_24_last_V_0_payload_A;
reg   [0:0] stream_in_24_last_V_0_payload_B;
reg    stream_in_24_last_V_0_sel_rd;
reg    stream_in_24_last_V_0_sel_wr;
wire    stream_in_24_last_V_0_sel;
wire    stream_in_24_last_V_0_load_A;
wire    stream_in_24_last_V_0_load_B;
reg   [1:0] stream_in_24_last_V_0_state;
wire    stream_in_24_last_V_0_state_cmp_full;
reg   [31:0] stream_out_32_data_V_1_data_in;
reg   [31:0] stream_out_32_data_V_1_data_out;
reg    stream_out_32_data_V_1_vld_in;
wire    stream_out_32_data_V_1_vld_out;
wire    stream_out_32_data_V_1_ack_in;
wire    stream_out_32_data_V_1_ack_out;
reg   [31:0] stream_out_32_data_V_1_payload_A;
reg   [31:0] stream_out_32_data_V_1_payload_B;
reg    stream_out_32_data_V_1_sel_rd;
reg    stream_out_32_data_V_1_sel_wr;
wire    stream_out_32_data_V_1_sel;
wire    stream_out_32_data_V_1_load_A;
wire    stream_out_32_data_V_1_load_B;
reg   [1:0] stream_out_32_data_V_1_state;
wire    stream_out_32_data_V_1_state_cmp_full;
reg   [0:0] stream_out_32_user_V_1_data_in;
reg   [0:0] stream_out_32_user_V_1_data_out;
reg    stream_out_32_user_V_1_vld_in;
wire    stream_out_32_user_V_1_vld_out;
wire    stream_out_32_user_V_1_ack_in;
wire    stream_out_32_user_V_1_ack_out;
reg   [0:0] stream_out_32_user_V_1_payload_A;
reg   [0:0] stream_out_32_user_V_1_payload_B;
reg    stream_out_32_user_V_1_sel_rd;
reg    stream_out_32_user_V_1_sel_wr;
wire    stream_out_32_user_V_1_sel;
wire    stream_out_32_user_V_1_load_A;
wire    stream_out_32_user_V_1_load_B;
reg   [1:0] stream_out_32_user_V_1_state;
wire    stream_out_32_user_V_1_state_cmp_full;
reg   [0:0] stream_out_32_last_V_1_data_in;
reg   [0:0] stream_out_32_last_V_1_data_out;
reg    stream_out_32_last_V_1_vld_in;
wire    stream_out_32_last_V_1_vld_out;
wire    stream_out_32_last_V_1_ack_in;
wire    stream_out_32_last_V_1_ack_out;
reg   [0:0] stream_out_32_last_V_1_payload_A;
reg   [0:0] stream_out_32_last_V_1_payload_B;
reg    stream_out_32_last_V_1_sel_rd;
reg    stream_out_32_last_V_1_sel_wr;
wire    stream_out_32_last_V_1_sel;
wire    stream_out_32_last_V_1_load_A;
wire    stream_out_32_last_V_1_load_B;
reg   [1:0] stream_out_32_last_V_1_state;
wire    stream_out_32_last_V_1_state_cmp_full;
wire   [31:0] mode;
reg   [31:0] mode_0_data_reg;
reg    mode_0_vld_reg;
reg    mode_0_ack_out;
wire   [7:0] alpha_V;
reg   [7:0] alpha_V_0_data_reg;
reg    alpha_V_0_vld_reg;
reg    alpha_V_0_ack_out;
reg    stream_in_24_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_pp4_stage0;
reg   [0:0] ap_phi_mux_delayed_last_0_phi_fu_403_p4;
reg   [0:0] ap_phi_mux_delayed_last_phi_fu_391_p4;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_pp4_stage1;
reg   [0:0] delayed_last_0_reg_399;
reg   [0:0] last_2_0_reg_412;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_pp4_stage2;
reg   [0:0] last_2_1_reg_456;
wire    ap_CS_fsm_pp4_stage3;
wire    ap_block_pp4_stage3;
reg   [0:0] last_2_2_reg_500;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_pp3_stage0;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_pp2_stage0;
reg   [0:0] ap_phi_mux_delayed_last_1_phi_fu_203_p4;
reg   [0:0] ap_phi_mux_delayed_last_2_phi_fu_191_p4;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_pp2_stage1;
reg   [0:0] delayed_last_1_reg_199;
reg   [0:0] last_6_0_reg_212;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_pp2_stage2;
reg   [0:0] last_6_1_reg_246;
wire    ap_CS_fsm_pp2_stage3;
wire    ap_block_pp2_stage3;
reg   [0:0] last_6_2_reg_279;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_pp1_stage1;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    stream_out_32_TDATA_blk_n;
reg   [0:0] delayed_last_reg_387;
reg    ap_enable_reg_pp4_iter1;
reg   [0:0] delayed_last_reg_387_pp4_iter1_reg;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] delayed_last_2_reg_187;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp0_iter1;
reg    ap_rst_n_control_inv;
reg   [31:0] p_0279_0819_reg_175;
reg   [31:0] p_0279_2_3_reg_310;
reg   [0:0] last_6_3_reg_337;
reg   [3:0] p_0147_0817_reg_351;
reg   [3:0] p_0151_0816_reg_363;
reg   [95:0] p_0563_0815_reg_375;
reg    ap_predicate_op182_read_state19;
reg    ap_block_state19_pp4_stage0_iter0;
wire    ap_block_state23_pp4_stage0_iter1;
reg    ap_block_state23_io;
reg    ap_block_pp4_stage0_11001;
reg    ap_predicate_op197_read_state20;
reg    ap_block_state20_pp4_stage1_iter0;
wire    ap_block_state24_pp4_stage1_iter1;
reg    ap_block_state24_io;
reg    ap_block_pp4_stage1_11001;
reg   [3:0] p_0147_2_3_reg_541;
reg   [3:0] p_0151_2_3_reg_553;
reg   [95:0] p_0563_2_3_reg_565;
reg   [0:0] last_2_3_reg_577;
reg   [7:0] alpha_V_read_reg_1051;
wire    ap_CS_fsm_state2;
wire   [31:0] grp_read_fu_146_p2;
reg   [0:0] empty_28_reg_1060_1;
reg    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [7:0] grp_fu_593_p4;
reg   [7:0] p_Result_s_30_reg_1065;
wire   [7:0] grp_fu_603_p4;
reg   [7:0] p_Result_3_reg_1070;
wire   [7:0] trunc_ln647_fu_631_p1;
reg   [7:0] trunc_ln647_reg_1075;
wire   [0:0] grp_fu_613_p1;
reg    ap_block_state4_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] or_ln126_fu_642_p2;
wire   [31:0] p_Result_14_fu_699_p5;
reg   [0:0] empty_25_reg_1095_1;
reg    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [15:0] trunc_ln215_fu_711_p1;
reg   [15:0] trunc_ln215_reg_1100;
reg    ap_block_state8_pp1_stage1_iter0;
reg    ap_block_pp1_stage1_11001;
wire   [0:0] or_ln109_fu_722_p2;
wire   [31:0] p_Result_35_1_fu_733_p3;
reg    ap_predicate_op108_read_state10;
reg    ap_block_state10_pp2_stage0_iter0;
wire    ap_block_state14_pp2_stage0_iter1;
reg    ap_block_state14_io;
reg    ap_block_pp2_stage0_11001;
wire   [31:0] p_Result_12_fu_745_p5;
wire   [0:0] or_ln89_fu_761_p2;
reg    ap_predicate_op121_read_state11;
reg    ap_block_state11_pp2_stage1_iter0;
reg    ap_block_pp2_stage1_11001;
wire   [31:0] p_Result_33_1_fu_771_p5;
wire   [0:0] or_ln89_1_fu_787_p2;
reg    ap_predicate_op133_read_state12;
reg    ap_block_state12_pp2_stage2_iter0;
reg    ap_block_pp2_stage2_11001;
wire   [31:0] p_Result_33_2_fu_797_p5;
reg    ap_block_state16_pp3_stage0_iter0;
wire    ap_block_state17_pp3_stage0_iter1;
reg    ap_block_pp3_stage0_11001;
wire   [31:0] p_Result_13_fu_837_p3;
wire   [95:0] p_Result_9_fu_845_p5;
reg   [3:0] tmp_5_fu_857_p4;
reg   [3:0] tmp_6_fu_867_p4;
wire   [95:0] p_Result_26_1_fu_877_p5;
reg   [3:0] tmp_7_fu_889_p4;
reg   [3:0] tmp_8_fu_899_p4;
wire   [95:0] p_Result_26_2_fu_909_p5;
reg    ap_predicate_op210_read_state21;
reg    ap_block_state21_pp4_stage2_iter0;
wire    ap_block_state25_pp4_stage2_iter1;
reg    ap_block_state25_io;
reg    ap_block_pp4_stage2_11001;
reg   [3:0] tmp_9_fu_921_p4;
reg   [3:0] tmp_10_fu_931_p4;
wire   [31:0] trunc_ln647_6_fu_976_p1;
reg    ap_predicate_op223_read_state22;
reg    ap_block_state22_pp4_stage3_iter0;
reg    ap_predicate_op239_write_state22;
reg    ap_block_state22_io;
reg    ap_block_pp4_stage3_11001;
reg   [31:0] p_Result_29_1_reg_1225;
reg   [0:0] p_Result_10_reg_1230;
reg   [0:0] p_Result_1_1_reg_1235;
reg   [31:0] p_Result_29_2_reg_1240;
reg   [0:0] p_Result_2_reg_1245;
reg   [0:0] p_Result_1_2_reg_1250;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp1_stage1_subdone;
reg    ap_block_pp1_stage0_subdone;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state10;
reg    ap_predicate_op145_read_state13;
reg    ap_block_state13_pp2_stage3_iter0;
reg    ap_predicate_op157_write_state13;
reg    ap_block_state13_io;
reg    ap_block_pp2_stage3_subdone;
reg    ap_block_pp3_stage0_subdone;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state19;
reg    ap_block_pp4_stage3_subdone;
reg    ap_block_pp4_stage2_subdone;
reg   [31:0] ap_phi_mux_p_0279_0819_phi_fu_179_p4;
wire   [0:0] ap_phi_reg_pp2_iter0_last_6_0_reg_212;
reg   [31:0] ap_phi_reg_pp2_iter0_p_0279_2_0_reg_223;
reg   [0:0] ap_phi_reg_pp2_iter0_user_1_0_reg_234;
wire   [0:0] ap_phi_reg_pp2_iter0_last_6_1_reg_246;
reg   [31:0] ap_phi_reg_pp2_iter0_p_0279_2_1_reg_257;
reg   [0:0] ap_phi_reg_pp2_iter0_user_1_1_reg_268;
wire   [0:0] ap_phi_reg_pp2_iter0_last_6_2_reg_279;
reg   [31:0] ap_phi_reg_pp2_iter0_p_0279_2_2_reg_290;
reg    ap_block_pp2_stage3_11001;
reg   [0:0] ap_phi_reg_pp2_iter0_user_1_2_reg_300;
reg   [31:0] ap_phi_mux_p_0279_2_3_phi_fu_315_p4;
wire   [31:0] p_Result_33_3_fu_824_p5;
wire   [31:0] ap_phi_reg_pp2_iter0_p_0279_2_3_reg_310;
reg   [0:0] ap_phi_mux_user_1_3_phi_fu_328_p4;
wire   [0:0] or_ln89_2_fu_813_p2;
wire   [0:0] ap_phi_reg_pp2_iter0_user_1_3_reg_324;
reg   [0:0] ap_phi_mux_last_6_3_phi_fu_342_p4;
wire   [0:0] ap_phi_reg_pp2_iter0_last_6_3_reg_337;
reg   [3:0] ap_phi_mux_p_0147_0817_phi_fu_355_p4;
reg   [3:0] ap_phi_mux_p_0151_0816_phi_fu_367_p4;
reg   [95:0] ap_phi_mux_p_0563_0815_phi_fu_379_p4;
wire   [0:0] ap_phi_reg_pp4_iter0_last_2_0_reg_412;
reg   [3:0] ap_phi_reg_pp4_iter0_p_0147_2_0_reg_423;
reg   [3:0] ap_phi_reg_pp4_iter0_p_0151_2_0_reg_434;
reg   [95:0] ap_phi_reg_pp4_iter0_p_0563_2_0_reg_445;
wire   [0:0] ap_phi_reg_pp4_iter0_last_2_1_reg_456;
reg   [3:0] ap_phi_reg_pp4_iter0_p_0147_2_1_reg_467;
reg   [3:0] ap_phi_reg_pp4_iter0_p_0151_2_1_reg_478;
reg   [95:0] ap_phi_reg_pp4_iter0_p_0563_2_1_reg_489;
wire   [0:0] ap_phi_reg_pp4_iter0_last_2_2_reg_500;
reg   [3:0] ap_phi_reg_pp4_iter0_p_0147_2_2_reg_511;
reg   [3:0] ap_phi_reg_pp4_iter0_p_0151_2_2_reg_521;
reg   [95:0] ap_phi_reg_pp4_iter0_p_0563_2_2_reg_531;
reg   [3:0] ap_phi_mux_p_0147_2_3_phi_fu_545_p4;
reg   [3:0] tmp_11_fu_954_p4;
wire   [3:0] ap_phi_reg_pp4_iter0_p_0147_2_3_reg_541;
reg   [3:0] ap_phi_mux_p_0151_2_3_phi_fu_557_p4;
reg   [3:0] tmp_12_fu_965_p4;
wire   [3:0] ap_phi_reg_pp4_iter0_p_0151_2_3_reg_553;
reg   [95:0] ap_phi_mux_p_0563_2_3_phi_fu_569_p4;
wire   [95:0] p_Result_26_3_fu_941_p5;
wire   [95:0] ap_phi_reg_pp4_iter0_p_0563_2_3_reg_565;
wire   [0:0] ap_phi_reg_pp4_iter0_last_2_3_reg_577;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp1_stage1_01001;
reg    ap_block_pp2_stage3_01001;
reg    ap_block_pp3_stage0_01001;
reg    ap_block_pp4_stage3_01001;
reg    ap_block_pp4_stage0_01001;
reg    ap_block_pp4_stage1_01001;
wire   [8:0] zext_ln364_fu_649_p1;
wire   [8:0] zext_ln364_1_fu_652_p1;
wire   [8:0] zext_ln364_2_fu_662_p1;
wire   [8:0] zext_ln364_3_fu_665_p1;
wire   [8:0] out_c1_V_fu_656_p2;
wire   [8:0] out_c2_V_fu_669_p2;
wire   [7:0] p_Result_8_fu_689_p4;
wire   [7:0] trunc_ln647_1_fu_685_p1;
wire   [7:0] p_Result_6_fu_675_p4;
wire   [15:0] trunc_ln215_1_fu_729_p1;
wire   [7:0] trunc_ln647_2_fu_741_p1;
wire   [7:0] trunc_ln647_3_fu_767_p1;
wire   [7:0] trunc_ln647_4_fu_793_p1;
wire   [7:0] trunc_ln647_5_fu_820_p1;
wire    ap_CS_fsm_state6;
reg    ap_block_state6;
reg   [18:0] ap_NS_fsm;
reg    ap_block_pp2_stage1_subdone;
reg    ap_block_pp2_stage2_subdone;
reg    ap_block_pp4_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_condition_1703;
reg    ap_condition_1708;
reg    ap_condition_1712;
reg    ap_condition_1716;
reg    ap_condition_1720;
reg    ap_condition_1724;
reg    ap_condition_1728;
reg    ap_condition_1732;
reg    ap_condition_1159;
reg    ap_condition_1167;
reg    ap_condition_1181;
reg    ap_condition_1195;
reg    ap_condition_899;
reg    ap_condition_1108;
reg    ap_condition_1120;
reg    ap_condition_1135;

// power-on initialization
initial begin
#0 stream_in_24_data_V_0_sel_rd = 1'b0;
#0 stream_in_24_data_V_0_sel_wr = 1'b0;
#0 stream_in_24_data_V_0_state = 2'd0;
#0 stream_in_24_user_V_0_sel_rd = 1'b0;
#0 stream_in_24_user_V_0_sel_wr = 1'b0;
#0 stream_in_24_user_V_0_state = 2'd0;
#0 stream_in_24_last_V_0_sel_rd = 1'b0;
#0 stream_in_24_last_V_0_sel_wr = 1'b0;
#0 stream_in_24_last_V_0_state = 2'd0;
#0 stream_out_32_data_V_1_sel_rd = 1'b0;
#0 stream_out_32_data_V_1_sel_wr = 1'b0;
#0 stream_out_32_data_V_1_state = 2'd0;
#0 stream_out_32_user_V_1_sel_rd = 1'b0;
#0 stream_out_32_user_V_1_sel_wr = 1'b0;
#0 stream_out_32_user_V_1_state = 2'd0;
#0 stream_out_32_last_V_1_sel_rd = 1'b0;
#0 stream_out_32_last_V_1_sel_wr = 1'b0;
#0 stream_out_32_last_V_1_state = 2'd0;
#0 mode_0_data_reg = 32'd0;
#0 mode_0_vld_reg = 1'b0;
#0 alpha_V_0_data_reg = 8'd0;
#0 alpha_V_0_vld_reg = 1'b0;
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

pixel_pack_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
pixel_pack_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(control),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .mode(mode),
    .alpha_V(alpha_V),
    .clk(ap_clk),
    .rst(ap_rst_n_control_inv)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((grp_fu_613_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_read_fu_146_p2 == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((grp_read_fu_146_p2 == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((grp_fu_613_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((grp_read_fu_146_p2 == 32'd3) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((grp_read_fu_146_p2 == 32'd3) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_read_fu_146_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp2_stage3) & (1'b0 == ap_block_pp2_stage3_subdone)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((grp_read_fu_146_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((grp_fu_613_p1 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((grp_read_fu_146_p2 == 32'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((grp_read_fu_146_p2 == 32'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state19) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((grp_read_fu_146_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_subdone)) | ((1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_subdone)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((grp_read_fu_146_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_24_data_V_0_ack_out == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b1))) begin
            stream_in_24_data_V_0_sel_rd <= ~stream_in_24_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_24_data_V_0_ack_in == 1'b1) & (stream_in_24_data_V_0_vld_in == 1'b1))) begin
            stream_in_24_data_V_0_sel_wr <= ~stream_in_24_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_data_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_24_data_V_0_state == 2'd2) & (stream_in_24_data_V_0_vld_in == 1'b0)) | ((stream_in_24_data_V_0_state == 2'd3) & (stream_in_24_data_V_0_vld_in == 1'b0) & (stream_in_24_data_V_0_ack_out == 1'b1)))) begin
            stream_in_24_data_V_0_state <= 2'd2;
        end else if ((((stream_in_24_data_V_0_state == 2'd1) & (stream_in_24_data_V_0_ack_out == 1'b0)) | ((stream_in_24_data_V_0_state == 2'd3) & (stream_in_24_data_V_0_ack_out == 1'b0) & (stream_in_24_data_V_0_vld_in == 1'b1)))) begin
            stream_in_24_data_V_0_state <= 2'd1;
        end else if (((~((stream_in_24_data_V_0_vld_in == 1'b0) & (stream_in_24_data_V_0_ack_out == 1'b1)) & ~((stream_in_24_data_V_0_ack_out == 1'b0) & (stream_in_24_data_V_0_vld_in == 1'b1)) & (stream_in_24_data_V_0_state == 2'd3)) | ((stream_in_24_data_V_0_state == 2'd1) & (stream_in_24_data_V_0_ack_out == 1'b1)) | ((stream_in_24_data_V_0_state == 2'd2) & (stream_in_24_data_V_0_vld_in == 1'b1)))) begin
            stream_in_24_data_V_0_state <= 2'd3;
        end else begin
            stream_in_24_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_last_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_24_last_V_0_ack_out == 1'b1) & (stream_in_24_last_V_0_vld_out == 1'b1))) begin
            stream_in_24_last_V_0_sel_rd <= ~stream_in_24_last_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_last_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_24_last_V_0_ack_in == 1'b1) & (stream_in_24_last_V_0_vld_in == 1'b1))) begin
            stream_in_24_last_V_0_sel_wr <= ~stream_in_24_last_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_last_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_24_last_V_0_state == 2'd2) & (stream_in_24_last_V_0_vld_in == 1'b0)) | ((stream_in_24_last_V_0_state == 2'd3) & (stream_in_24_last_V_0_vld_in == 1'b0) & (stream_in_24_last_V_0_ack_out == 1'b1)))) begin
            stream_in_24_last_V_0_state <= 2'd2;
        end else if ((((stream_in_24_last_V_0_state == 2'd1) & (stream_in_24_last_V_0_ack_out == 1'b0)) | ((stream_in_24_last_V_0_state == 2'd3) & (stream_in_24_last_V_0_ack_out == 1'b0) & (stream_in_24_last_V_0_vld_in == 1'b1)))) begin
            stream_in_24_last_V_0_state <= 2'd1;
        end else if (((~((stream_in_24_last_V_0_vld_in == 1'b0) & (stream_in_24_last_V_0_ack_out == 1'b1)) & ~((stream_in_24_last_V_0_ack_out == 1'b0) & (stream_in_24_last_V_0_vld_in == 1'b1)) & (stream_in_24_last_V_0_state == 2'd3)) | ((stream_in_24_last_V_0_state == 2'd1) & (stream_in_24_last_V_0_ack_out == 1'b1)) | ((stream_in_24_last_V_0_state == 2'd2) & (stream_in_24_last_V_0_vld_in == 1'b1)))) begin
            stream_in_24_last_V_0_state <= 2'd3;
        end else begin
            stream_in_24_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_user_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_24_user_V_0_ack_out == 1'b1) & (stream_in_24_user_V_0_vld_out == 1'b1))) begin
            stream_in_24_user_V_0_sel_rd <= ~stream_in_24_user_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_user_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_24_user_V_0_vld_in == 1'b1) & (stream_in_24_user_V_0_ack_in == 1'b1))) begin
            stream_in_24_user_V_0_sel_wr <= ~stream_in_24_user_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_in_24_user_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_24_user_V_0_state == 2'd2) & (stream_in_24_user_V_0_vld_in == 1'b0)) | ((stream_in_24_user_V_0_state == 2'd3) & (stream_in_24_user_V_0_vld_in == 1'b0) & (stream_in_24_user_V_0_ack_out == 1'b1)))) begin
            stream_in_24_user_V_0_state <= 2'd2;
        end else if ((((stream_in_24_user_V_0_state == 2'd1) & (stream_in_24_user_V_0_ack_out == 1'b0)) | ((stream_in_24_user_V_0_state == 2'd3) & (stream_in_24_user_V_0_ack_out == 1'b0) & (stream_in_24_user_V_0_vld_in == 1'b1)))) begin
            stream_in_24_user_V_0_state <= 2'd1;
        end else if (((~((stream_in_24_user_V_0_vld_in == 1'b0) & (stream_in_24_user_V_0_ack_out == 1'b1)) & ~((stream_in_24_user_V_0_ack_out == 1'b0) & (stream_in_24_user_V_0_vld_in == 1'b1)) & (stream_in_24_user_V_0_state == 2'd3)) | ((stream_in_24_user_V_0_state == 2'd1) & (stream_in_24_user_V_0_ack_out == 1'b1)) | ((stream_in_24_user_V_0_state == 2'd2) & (stream_in_24_user_V_0_vld_in == 1'b1)))) begin
            stream_in_24_user_V_0_state <= 2'd3;
        end else begin
            stream_in_24_user_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_data_V_1_sel_rd <= 1'b0;
    end else begin
        if (((stream_out_32_data_V_1_ack_out == 1'b1) & (stream_out_32_data_V_1_vld_out == 1'b1))) begin
            stream_out_32_data_V_1_sel_rd <= ~stream_out_32_data_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_data_V_1_sel_wr <= 1'b0;
    end else begin
        if (((stream_out_32_data_V_1_ack_in == 1'b1) & (stream_out_32_data_V_1_vld_in == 1'b1))) begin
            stream_out_32_data_V_1_sel_wr <= ~stream_out_32_data_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_data_V_1_state <= 2'd0;
    end else begin
        if ((((stream_out_32_data_V_1_state == 2'd2) & (stream_out_32_data_V_1_vld_in == 1'b0)) | ((stream_out_32_data_V_1_state == 2'd3) & (stream_out_32_data_V_1_vld_in == 1'b0) & (stream_out_32_data_V_1_ack_out == 1'b1)))) begin
            stream_out_32_data_V_1_state <= 2'd2;
        end else if ((((stream_out_32_data_V_1_state == 2'd1) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_data_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0) & (stream_out_32_data_V_1_vld_in == 1'b1)))) begin
            stream_out_32_data_V_1_state <= 2'd1;
        end else if (((~((stream_out_32_data_V_1_vld_in == 1'b0) & (stream_out_32_data_V_1_ack_out == 1'b1)) & ~((stream_out_32_TREADY == 1'b0) & (stream_out_32_data_V_1_vld_in == 1'b1)) & (stream_out_32_data_V_1_state == 2'd3)) | ((stream_out_32_data_V_1_state == 2'd1) & (stream_out_32_data_V_1_ack_out == 1'b1)) | ((stream_out_32_data_V_1_state == 2'd2) & (stream_out_32_data_V_1_vld_in == 1'b1)))) begin
            stream_out_32_data_V_1_state <= 2'd3;
        end else begin
            stream_out_32_data_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_last_V_1_sel_rd <= 1'b0;
    end else begin
        if (((stream_out_32_last_V_1_ack_out == 1'b1) & (stream_out_32_last_V_1_vld_out == 1'b1))) begin
            stream_out_32_last_V_1_sel_rd <= ~stream_out_32_last_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_last_V_1_sel_wr <= 1'b0;
    end else begin
        if (((stream_out_32_last_V_1_ack_in == 1'b1) & (stream_out_32_last_V_1_vld_in == 1'b1))) begin
            stream_out_32_last_V_1_sel_wr <= ~stream_out_32_last_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_last_V_1_state <= 2'd0;
    end else begin
        if ((((stream_out_32_last_V_1_state == 2'd2) & (stream_out_32_last_V_1_vld_in == 1'b0)) | ((stream_out_32_last_V_1_state == 2'd3) & (stream_out_32_last_V_1_vld_in == 1'b0) & (stream_out_32_last_V_1_ack_out == 1'b1)))) begin
            stream_out_32_last_V_1_state <= 2'd2;
        end else if ((((stream_out_32_last_V_1_state == 2'd1) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_last_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0) & (stream_out_32_last_V_1_vld_in == 1'b1)))) begin
            stream_out_32_last_V_1_state <= 2'd1;
        end else if (((~((stream_out_32_last_V_1_vld_in == 1'b0) & (stream_out_32_last_V_1_ack_out == 1'b1)) & ~((stream_out_32_TREADY == 1'b0) & (stream_out_32_last_V_1_vld_in == 1'b1)) & (stream_out_32_last_V_1_state == 2'd3)) | ((stream_out_32_last_V_1_state == 2'd1) & (stream_out_32_last_V_1_ack_out == 1'b1)) | ((stream_out_32_last_V_1_state == 2'd2) & (stream_out_32_last_V_1_vld_in == 1'b1)))) begin
            stream_out_32_last_V_1_state <= 2'd3;
        end else begin
            stream_out_32_last_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_user_V_1_sel_rd <= 1'b0;
    end else begin
        if (((stream_out_32_user_V_1_ack_out == 1'b1) & (stream_out_32_user_V_1_vld_out == 1'b1))) begin
            stream_out_32_user_V_1_sel_rd <= ~stream_out_32_user_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_user_V_1_sel_wr <= 1'b0;
    end else begin
        if (((stream_out_32_user_V_1_ack_in == 1'b1) & (stream_out_32_user_V_1_vld_in == 1'b1))) begin
            stream_out_32_user_V_1_sel_wr <= ~stream_out_32_user_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        stream_out_32_user_V_1_state <= 2'd0;
    end else begin
        if ((((stream_out_32_user_V_1_state == 2'd2) & (stream_out_32_user_V_1_vld_in == 1'b0)) | ((stream_out_32_user_V_1_state == 2'd3) & (stream_out_32_user_V_1_vld_in == 1'b0) & (stream_out_32_user_V_1_ack_out == 1'b1)))) begin
            stream_out_32_user_V_1_state <= 2'd2;
        end else if ((((stream_out_32_user_V_1_state == 2'd1) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_user_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0) & (stream_out_32_user_V_1_vld_in == 1'b1)))) begin
            stream_out_32_user_V_1_state <= 2'd1;
        end else if (((~((stream_out_32_user_V_1_vld_in == 1'b0) & (stream_out_32_user_V_1_ack_out == 1'b1)) & ~((stream_out_32_TREADY == 1'b0) & (stream_out_32_user_V_1_vld_in == 1'b1)) & (stream_out_32_user_V_1_state == 2'd3)) | ((stream_out_32_user_V_1_state == 2'd1) & (stream_out_32_user_V_1_ack_out == 1'b1)) | ((stream_out_32_user_V_1_state == 2'd2) & (stream_out_32_user_V_1_vld_in == 1'b1)))) begin
            stream_out_32_user_V_1_state <= 2'd3;
        end else begin
            stream_out_32_user_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1712)) begin
        if ((ap_phi_mux_delayed_last_2_phi_fu_191_p4 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_p_0279_2_0_reg_223 <= ap_phi_mux_p_0279_0819_phi_fu_179_p4;
        end else if ((ap_phi_mux_delayed_last_2_phi_fu_191_p4 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_p_0279_2_0_reg_223 <= p_Result_12_fu_745_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1716)) begin
        if ((last_6_0_reg_212 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_p_0279_2_1_reg_257 <= ap_phi_reg_pp2_iter0_p_0279_2_0_reg_223;
        end else if ((last_6_0_reg_212 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_p_0279_2_1_reg_257 <= p_Result_33_1_fu_771_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1720)) begin
        if ((last_6_1_reg_246 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_p_0279_2_2_reg_290 <= ap_phi_reg_pp2_iter0_p_0279_2_1_reg_257;
        end else if ((last_6_1_reg_246 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_p_0279_2_2_reg_290 <= p_Result_33_2_fu_797_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1712)) begin
        if ((ap_phi_mux_delayed_last_2_phi_fu_191_p4 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_user_1_0_reg_234 <= 1'd0;
        end else if ((ap_phi_mux_delayed_last_2_phi_fu_191_p4 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_user_1_0_reg_234 <= stream_in_24_user_V_0_data_out;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1716)) begin
        if ((last_6_0_reg_212 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_user_1_1_reg_268 <= ap_phi_reg_pp2_iter0_user_1_0_reg_234;
        end else if ((last_6_0_reg_212 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_user_1_1_reg_268 <= or_ln89_fu_761_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1720)) begin
        if ((last_6_1_reg_246 == 1'd1)) begin
            ap_phi_reg_pp2_iter0_user_1_2_reg_300 <= ap_phi_reg_pp2_iter0_user_1_1_reg_268;
        end else if ((last_6_1_reg_246 == 1'd0)) begin
            ap_phi_reg_pp2_iter0_user_1_2_reg_300 <= or_ln89_1_fu_787_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1724)) begin
        if ((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_0147_2_0_reg_423 <= ap_phi_mux_p_0147_0817_phi_fu_355_p4;
        end else if ((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_0147_2_0_reg_423 <= tmp_5_fu_857_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1728)) begin
        if ((last_2_0_reg_412 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_0147_2_1_reg_467 <= ap_phi_reg_pp4_iter0_p_0147_2_0_reg_423;
        end else if ((last_2_0_reg_412 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_0147_2_1_reg_467 <= tmp_7_fu_889_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1732)) begin
        if ((last_2_1_reg_456 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_0147_2_2_reg_511 <= ap_phi_reg_pp4_iter0_p_0147_2_1_reg_467;
        end else if ((last_2_1_reg_456 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_0147_2_2_reg_511 <= tmp_9_fu_921_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1724)) begin
        if ((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_0151_2_0_reg_434 <= ap_phi_mux_p_0151_0816_phi_fu_367_p4;
        end else if ((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_0151_2_0_reg_434 <= tmp_6_fu_867_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1728)) begin
        if ((last_2_0_reg_412 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_0151_2_1_reg_478 <= ap_phi_reg_pp4_iter0_p_0151_2_0_reg_434;
        end else if ((last_2_0_reg_412 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_0151_2_1_reg_478 <= tmp_8_fu_899_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1732)) begin
        if ((last_2_1_reg_456 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_0151_2_2_reg_521 <= ap_phi_reg_pp4_iter0_p_0151_2_1_reg_478;
        end else if ((last_2_1_reg_456 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_0151_2_2_reg_521 <= tmp_10_fu_931_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1724)) begin
        if ((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_0563_2_0_reg_445 <= ap_phi_mux_p_0563_0815_phi_fu_379_p4;
        end else if ((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_0563_2_0_reg_445 <= p_Result_9_fu_845_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1728)) begin
        if ((last_2_0_reg_412 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_0563_2_1_reg_489 <= ap_phi_reg_pp4_iter0_p_0563_2_0_reg_445;
        end else if ((last_2_0_reg_412 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_0563_2_1_reg_489 <= p_Result_26_1_fu_877_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1732)) begin
        if ((last_2_1_reg_456 == 1'd1)) begin
            ap_phi_reg_pp4_iter0_p_0563_2_2_reg_531 <= ap_phi_reg_pp4_iter0_p_0563_2_1_reg_489;
        end else if ((last_2_1_reg_456 == 1'd0)) begin
            ap_phi_reg_pp4_iter0_p_0563_2_2_reg_531 <= p_Result_26_2_fu_909_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_0_reg_399 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        delayed_last_0_reg_399 <= delayed_last_reg_387;
    end else if (((grp_read_fu_146_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        delayed_last_0_reg_399 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (delayed_last_1_reg_199 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        delayed_last_1_reg_199 <= delayed_last_2_reg_187;
    end else if (((grp_read_fu_146_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
        delayed_last_1_reg_199 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (delayed_last_1_reg_199 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        delayed_last_2_reg_187 <= last_6_3_reg_337;
    end else if (((grp_read_fu_146_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
        delayed_last_2_reg_187 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_0_reg_399 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        delayed_last_reg_387 <= last_2_3_reg_577;
    end else if (((grp_read_fu_146_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        delayed_last_reg_387 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1159)) begin
        if (((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd1) & (ap_phi_mux_delayed_last_0_phi_fu_403_p4 == 1'd0))) begin
            last_2_0_reg_412 <= ap_phi_mux_delayed_last_phi_fu_391_p4;
        end else if (((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd0) & (ap_phi_mux_delayed_last_0_phi_fu_403_p4 == 1'd0))) begin
            last_2_0_reg_412 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_2_0_reg_412 <= ap_phi_reg_pp4_iter0_last_2_0_reg_412;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1167)) begin
        if (((last_2_0_reg_412 == 1'd1) & (delayed_last_0_reg_399 == 1'd0))) begin
            last_2_1_reg_456 <= last_2_0_reg_412;
        end else if (((last_2_0_reg_412 == 1'd0) & (delayed_last_0_reg_399 == 1'd0))) begin
            last_2_1_reg_456 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_2_1_reg_456 <= ap_phi_reg_pp4_iter0_last_2_1_reg_456;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1181)) begin
        if (((last_2_1_reg_456 == 1'd1) & (delayed_last_0_reg_399 == 1'd0))) begin
            last_2_2_reg_500 <= last_2_1_reg_456;
        end else if (((last_2_1_reg_456 == 1'd0) & (delayed_last_0_reg_399 == 1'd0))) begin
            last_2_2_reg_500 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_2_2_reg_500 <= ap_phi_reg_pp4_iter0_last_2_2_reg_500;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1195)) begin
        if (((last_2_2_reg_500 == 1'd1) & (delayed_last_0_reg_399 == 1'd0))) begin
            last_2_3_reg_577 <= last_2_2_reg_500;
        end else if (((last_2_2_reg_500 == 1'd0) & (delayed_last_0_reg_399 == 1'd0))) begin
            last_2_3_reg_577 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_2_3_reg_577 <= ap_phi_reg_pp4_iter0_last_2_3_reg_577;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_899)) begin
        if (((ap_phi_mux_delayed_last_2_phi_fu_191_p4 == 1'd1) & (ap_phi_mux_delayed_last_1_phi_fu_203_p4 == 1'd0))) begin
            last_6_0_reg_212 <= ap_phi_mux_delayed_last_2_phi_fu_191_p4;
        end else if (((ap_phi_mux_delayed_last_2_phi_fu_191_p4 == 1'd0) & (ap_phi_mux_delayed_last_1_phi_fu_203_p4 == 1'd0))) begin
            last_6_0_reg_212 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_6_0_reg_212 <= ap_phi_reg_pp2_iter0_last_6_0_reg_212;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1108)) begin
        if (((last_6_0_reg_212 == 1'd1) & (delayed_last_1_reg_199 == 1'd0))) begin
            last_6_1_reg_246 <= last_6_0_reg_212;
        end else if (((last_6_0_reg_212 == 1'd0) & (delayed_last_1_reg_199 == 1'd0))) begin
            last_6_1_reg_246 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_6_1_reg_246 <= ap_phi_reg_pp2_iter0_last_6_1_reg_246;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1120)) begin
        if (((last_6_1_reg_246 == 1'd1) & (delayed_last_1_reg_199 == 1'd0))) begin
            last_6_2_reg_279 <= last_6_1_reg_246;
        end else if (((last_6_1_reg_246 == 1'd0) & (delayed_last_1_reg_199 == 1'd0))) begin
            last_6_2_reg_279 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_6_2_reg_279 <= ap_phi_reg_pp2_iter0_last_6_2_reg_279;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1135)) begin
        if (((last_6_2_reg_279 == 1'd1) & (delayed_last_1_reg_199 == 1'd0))) begin
            last_6_3_reg_337 <= last_6_2_reg_279;
        end else if (((last_6_2_reg_279 == 1'd0) & (delayed_last_1_reg_199 == 1'd0))) begin
            last_6_3_reg_337 <= stream_in_24_last_V_0_data_out;
        end else if ((1'b1 == 1'b1)) begin
            last_6_3_reg_337 <= ap_phi_reg_pp2_iter0_last_6_3_reg_337;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1195)) begin
        if (((last_2_2_reg_500 == 1'd1) & (delayed_last_0_reg_399 == 1'd0))) begin
            p_0147_2_3_reg_541 <= ap_phi_reg_pp4_iter0_p_0147_2_2_reg_511;
        end else if (((last_2_2_reg_500 == 1'd0) & (delayed_last_0_reg_399 == 1'd0))) begin
            p_0147_2_3_reg_541 <= tmp_11_fu_954_p4;
        end else if ((1'b1 == 1'b1)) begin
            p_0147_2_3_reg_541 <= ap_phi_reg_pp4_iter0_p_0147_2_3_reg_541;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1195)) begin
        if (((last_2_2_reg_500 == 1'd1) & (delayed_last_0_reg_399 == 1'd0))) begin
            p_0151_2_3_reg_553 <= ap_phi_reg_pp4_iter0_p_0151_2_2_reg_521;
        end else if (((last_2_2_reg_500 == 1'd0) & (delayed_last_0_reg_399 == 1'd0))) begin
            p_0151_2_3_reg_553 <= tmp_12_fu_965_p4;
        end else if ((1'b1 == 1'b1)) begin
            p_0151_2_3_reg_553 <= ap_phi_reg_pp4_iter0_p_0151_2_3_reg_553;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1135)) begin
        if (((last_6_2_reg_279 == 1'd1) & (delayed_last_1_reg_199 == 1'd0))) begin
            p_0279_2_3_reg_310 <= ap_phi_reg_pp2_iter0_p_0279_2_2_reg_290;
        end else if (((last_6_2_reg_279 == 1'd0) & (delayed_last_1_reg_199 == 1'd0))) begin
            p_0279_2_3_reg_310 <= p_Result_33_3_fu_824_p5;
        end else if ((1'b1 == 1'b1)) begin
            p_0279_2_3_reg_310 <= ap_phi_reg_pp2_iter0_p_0279_2_3_reg_310;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1195)) begin
        if (((last_2_2_reg_500 == 1'd1) & (delayed_last_0_reg_399 == 1'd0))) begin
            p_0563_2_3_reg_565 <= ap_phi_reg_pp4_iter0_p_0563_2_2_reg_531;
        end else if (((last_2_2_reg_500 == 1'd0) & (delayed_last_0_reg_399 == 1'd0))) begin
            p_0563_2_3_reg_565 <= p_Result_26_3_fu_941_p5;
        end else if ((1'b1 == 1'b1)) begin
            p_0563_2_3_reg_565 <= ap_phi_reg_pp4_iter0_p_0563_2_3_reg_565;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == alpha_V_0_vld_reg) & (1'b1 == 1'b1)) | ((1'b1 == alpha_V_0_ack_out) & (1'b1 == 1'b1) & (1'b1 == alpha_V_0_vld_reg)))) begin
        alpha_V_0_data_reg <= alpha_V;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        alpha_V_read_reg_1051 <= alpha_V_0_data_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        delayed_last_reg_387_pp4_iter1_reg <= delayed_last_reg_387;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_25_reg_1095_1 <= stream_in_24_user_V_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_28_reg_1060_1 <= stream_in_24_user_V_0_data_out;
        p_Result_3_reg_1070 <= {{stream_in_24_data_V_0_data_out[23:16]}};
        p_Result_s_30_reg_1065 <= {{stream_in_24_data_V_0_data_out[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((((mode_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | ((mode_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (mode_0_vld_reg == 1'b1)))) begin
        mode_0_data_reg <= mode;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_0_reg_399 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_0147_0817_reg_351 <= p_0147_2_3_reg_541;
        p_0151_0816_reg_363 <= p_0151_2_3_reg_553;
        p_0563_0815_reg_375 <= p_0563_2_3_reg_565;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (delayed_last_1_reg_199 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        p_0279_0819_reg_175 <= p_0279_2_3_reg_310;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage3_11001) & (delayed_last_reg_387 == 1'd0) & (delayed_last_0_reg_399 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage3))) begin
        p_Result_10_reg_1230 <= ap_phi_mux_p_0147_2_3_phi_fu_545_p4[4'd1];
        p_Result_1_1_reg_1235 <= ap_phi_mux_p_0151_2_3_phi_fu_557_p4[4'd2];
        p_Result_1_2_reg_1250 <= ap_phi_mux_p_0151_2_3_phi_fu_557_p4[4'd3];
        p_Result_29_1_reg_1225 <= {{ap_phi_mux_p_0563_2_3_phi_fu_569_p4[63:32]}};
        p_Result_29_2_reg_1240 <= {{ap_phi_mux_p_0563_2_3_phi_fu_569_p4[95:64]}};
        p_Result_2_reg_1245 <= ap_phi_mux_p_0147_2_3_phi_fu_545_p4[4'd2];
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_data_V_0_load_A == 1'b1)) begin
        stream_in_24_data_V_0_payload_A <= stream_in_24_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_data_V_0_load_B == 1'b1)) begin
        stream_in_24_data_V_0_payload_B <= stream_in_24_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_last_V_0_load_A == 1'b1)) begin
        stream_in_24_last_V_0_payload_A <= stream_in_24_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_last_V_0_load_B == 1'b1)) begin
        stream_in_24_last_V_0_payload_B <= stream_in_24_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_user_V_0_load_A == 1'b1)) begin
        stream_in_24_user_V_0_payload_A <= stream_in_24_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_24_user_V_0_load_B == 1'b1)) begin
        stream_in_24_user_V_0_payload_B <= stream_in_24_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_data_V_1_load_A == 1'b1)) begin
        stream_out_32_data_V_1_payload_A <= stream_out_32_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_data_V_1_load_B == 1'b1)) begin
        stream_out_32_data_V_1_payload_B <= stream_out_32_data_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_last_V_1_load_A == 1'b1)) begin
        stream_out_32_last_V_1_payload_A <= stream_out_32_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_last_V_1_load_B == 1'b1)) begin
        stream_out_32_last_V_1_payload_B <= stream_out_32_last_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_user_V_1_load_A == 1'b1)) begin
        stream_out_32_user_V_1_payload_A <= stream_out_32_user_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_out_32_user_V_1_load_B == 1'b1)) begin
        stream_out_32_user_V_1_payload_B <= stream_out_32_user_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        trunc_ln215_reg_1100 <= trunc_ln215_fu_711_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln647_reg_1075 <= trunc_ln647_fu_631_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((stream_out_32_last_V_1_state == 2'd1) | (stream_out_32_user_V_1_state == 2'd1) | (stream_out_32_data_V_1_state == 2'd1) | ((stream_out_32_last_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_user_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_data_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state6)))) begin
        alpha_V_0_ack_out = 1'b1;
    end else begin
        alpha_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((ap_phi_mux_delayed_last_1_phi_fu_203_p4 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_phi_mux_delayed_last_0_phi_fu_403_p4 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_delayed_last_0_phi_fu_403_p4 = delayed_last_reg_387;
    end else begin
        ap_phi_mux_delayed_last_0_phi_fu_403_p4 = delayed_last_0_reg_399;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (delayed_last_1_reg_199 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_delayed_last_1_phi_fu_203_p4 = delayed_last_2_reg_187;
    end else begin
        ap_phi_mux_delayed_last_1_phi_fu_203_p4 = delayed_last_1_reg_199;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (delayed_last_1_reg_199 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_delayed_last_2_phi_fu_191_p4 = last_6_3_reg_337;
    end else begin
        ap_phi_mux_delayed_last_2_phi_fu_191_p4 = delayed_last_2_reg_187;
    end
end

always @ (*) begin
    if (((delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_delayed_last_phi_fu_391_p4 = last_2_3_reg_577;
    end else begin
        ap_phi_mux_delayed_last_phi_fu_391_p4 = delayed_last_reg_387;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1703)) begin
        if ((last_6_2_reg_279 == 1'd1)) begin
            ap_phi_mux_last_6_3_phi_fu_342_p4 = last_6_2_reg_279;
        end else if ((last_6_2_reg_279 == 1'd0)) begin
            ap_phi_mux_last_6_3_phi_fu_342_p4 = stream_in_24_last_V_0_data_out;
        end else begin
            ap_phi_mux_last_6_3_phi_fu_342_p4 = ap_phi_reg_pp2_iter0_last_6_3_reg_337;
        end
    end else begin
        ap_phi_mux_last_6_3_phi_fu_342_p4 = ap_phi_reg_pp2_iter0_last_6_3_reg_337;
    end
end

always @ (*) begin
    if (((delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_p_0147_0817_phi_fu_355_p4 = p_0147_2_3_reg_541;
    end else begin
        ap_phi_mux_p_0147_0817_phi_fu_355_p4 = p_0147_0817_reg_351;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1708)) begin
        if ((last_2_2_reg_500 == 1'd1)) begin
            ap_phi_mux_p_0147_2_3_phi_fu_545_p4 = ap_phi_reg_pp4_iter0_p_0147_2_2_reg_511;
        end else if ((last_2_2_reg_500 == 1'd0)) begin
            ap_phi_mux_p_0147_2_3_phi_fu_545_p4 = tmp_11_fu_954_p4;
        end else begin
            ap_phi_mux_p_0147_2_3_phi_fu_545_p4 = ap_phi_reg_pp4_iter0_p_0147_2_3_reg_541;
        end
    end else begin
        ap_phi_mux_p_0147_2_3_phi_fu_545_p4 = ap_phi_reg_pp4_iter0_p_0147_2_3_reg_541;
    end
end

always @ (*) begin
    if (((delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_p_0151_0816_phi_fu_367_p4 = p_0151_2_3_reg_553;
    end else begin
        ap_phi_mux_p_0151_0816_phi_fu_367_p4 = p_0151_0816_reg_363;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1708)) begin
        if ((last_2_2_reg_500 == 1'd1)) begin
            ap_phi_mux_p_0151_2_3_phi_fu_557_p4 = ap_phi_reg_pp4_iter0_p_0151_2_2_reg_521;
        end else if ((last_2_2_reg_500 == 1'd0)) begin
            ap_phi_mux_p_0151_2_3_phi_fu_557_p4 = tmp_12_fu_965_p4;
        end else begin
            ap_phi_mux_p_0151_2_3_phi_fu_557_p4 = ap_phi_reg_pp4_iter0_p_0151_2_3_reg_553;
        end
    end else begin
        ap_phi_mux_p_0151_2_3_phi_fu_557_p4 = ap_phi_reg_pp4_iter0_p_0151_2_3_reg_553;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (delayed_last_1_reg_199 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_p_0279_0819_phi_fu_179_p4 = p_0279_2_3_reg_310;
    end else begin
        ap_phi_mux_p_0279_0819_phi_fu_179_p4 = p_0279_0819_reg_175;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1703)) begin
        if ((last_6_2_reg_279 == 1'd1)) begin
            ap_phi_mux_p_0279_2_3_phi_fu_315_p4 = ap_phi_reg_pp2_iter0_p_0279_2_2_reg_290;
        end else if ((last_6_2_reg_279 == 1'd0)) begin
            ap_phi_mux_p_0279_2_3_phi_fu_315_p4 = p_Result_33_3_fu_824_p5;
        end else begin
            ap_phi_mux_p_0279_2_3_phi_fu_315_p4 = ap_phi_reg_pp2_iter0_p_0279_2_3_reg_310;
        end
    end else begin
        ap_phi_mux_p_0279_2_3_phi_fu_315_p4 = ap_phi_reg_pp2_iter0_p_0279_2_3_reg_310;
    end
end

always @ (*) begin
    if (((delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_p_0563_0815_phi_fu_379_p4 = p_0563_2_3_reg_565;
    end else begin
        ap_phi_mux_p_0563_0815_phi_fu_379_p4 = p_0563_0815_reg_375;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1708)) begin
        if ((last_2_2_reg_500 == 1'd1)) begin
            ap_phi_mux_p_0563_2_3_phi_fu_569_p4 = ap_phi_reg_pp4_iter0_p_0563_2_2_reg_531;
        end else if ((last_2_2_reg_500 == 1'd0)) begin
            ap_phi_mux_p_0563_2_3_phi_fu_569_p4 = p_Result_26_3_fu_941_p5;
        end else begin
            ap_phi_mux_p_0563_2_3_phi_fu_569_p4 = ap_phi_reg_pp4_iter0_p_0563_2_3_reg_565;
        end
    end else begin
        ap_phi_mux_p_0563_2_3_phi_fu_569_p4 = ap_phi_reg_pp4_iter0_p_0563_2_3_reg_565;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1703)) begin
        if ((last_6_2_reg_279 == 1'd1)) begin
            ap_phi_mux_user_1_3_phi_fu_328_p4 = ap_phi_reg_pp2_iter0_user_1_2_reg_300;
        end else if ((last_6_2_reg_279 == 1'd0)) begin
            ap_phi_mux_user_1_3_phi_fu_328_p4 = or_ln89_2_fu_813_p2;
        end else begin
            ap_phi_mux_user_1_3_phi_fu_328_p4 = ap_phi_reg_pp2_iter0_user_1_3_reg_324;
        end
    end else begin
        ap_phi_mux_user_1_3_phi_fu_328_p4 = ap_phi_reg_pp2_iter0_user_1_3_reg_324;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (~((stream_out_32_last_V_1_state == 2'd1) | (stream_out_32_user_V_1_state == 2'd1) | (stream_out_32_data_V_1_state == 2'd1) | ((stream_out_32_last_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_user_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_data_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state6)))) begin
        mode_0_ack_out = 1'b1;
    end else begin
        mode_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp2_stage3) & (last_6_2_reg_279 == 1'd0) & (delayed_last_1_reg_199 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2) & (last_6_1_reg_246 == 1'd0) & (delayed_last_1_reg_199 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1) & (last_6_0_reg_212 == 1'd0) & (delayed_last_1_reg_199 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0) & (ap_phi_mux_delayed_last_2_phi_fu_191_p4 == 1'd0) & (ap_phi_mux_delayed_last_1_phi_fu_203_p4 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((last_2_2_reg_500 == 1'd0) & (delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((last_2_1_reg_456 == 1'd0) & (delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage2) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((last_2_0_reg_412 == 1'd0) & (delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd0) & (ap_phi_mux_delayed_last_0_phi_fu_403_p4 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        stream_in_24_TDATA_blk_n = stream_in_24_data_V_0_state[1'd0];
    end else begin
        stream_in_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op145_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_predicate_op133_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_predicate_op121_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_predicate_op108_read_state10 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_predicate_op223_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_predicate_op210_read_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_predicate_op197_read_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_predicate_op182_read_state19 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        stream_in_24_data_V_0_ack_out = 1'b1;
    end else begin
        stream_in_24_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_24_data_V_0_sel == 1'b1)) begin
        stream_in_24_data_V_0_data_out = stream_in_24_data_V_0_payload_B;
    end else begin
        stream_in_24_data_V_0_data_out = stream_in_24_data_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op145_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_predicate_op133_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_predicate_op121_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_predicate_op108_read_state10 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_predicate_op223_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_predicate_op210_read_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_predicate_op197_read_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_predicate_op182_read_state19 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        stream_in_24_last_V_0_ack_out = 1'b1;
    end else begin
        stream_in_24_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_24_last_V_0_sel == 1'b1)) begin
        stream_in_24_last_V_0_data_out = stream_in_24_last_V_0_payload_B;
    end else begin
        stream_in_24_last_V_0_data_out = stream_in_24_last_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_predicate_op145_read_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp2_stage2_11001) & (ap_predicate_op133_read_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_predicate_op121_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_predicate_op108_read_state10 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_predicate_op223_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_predicate_op210_read_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage1_11001) & (ap_predicate_op197_read_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_predicate_op182_read_state19 == 1'b1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        stream_in_24_user_V_0_ack_out = 1'b1;
    end else begin
        stream_in_24_user_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_24_user_V_0_sel == 1'b1)) begin
        stream_in_24_user_V_0_data_out = stream_in_24_user_V_0_payload_B;
    end else begin
        stream_in_24_user_V_0_data_out = stream_in_24_user_V_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp2_stage3) & (delayed_last_2_reg_187 == 1'd0) & (delayed_last_1_reg_199 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0) & (delayed_last_2_reg_187 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage2) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (1'b0 == ap_block_pp4_stage1) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((delayed_last_reg_387 == 1'd0) & (delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((delayed_last_reg_387 == 1'd0) & (1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        stream_out_32_TDATA_blk_n = stream_out_32_data_V_1_state[1'd1];
    end else begin
        stream_out_32_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_29_2_reg_1240;
    end else if (((delayed_last_reg_387 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_29_1_reg_1225;
    end else if (((ap_predicate_op239_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3_01001))) begin
        stream_out_32_data_V_1_data_in = trunc_ln647_6_fu_976_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_13_fu_837_p3;
    end else if (((ap_predicate_op157_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_01001))) begin
        stream_out_32_data_V_1_data_in = ap_phi_mux_p_0279_2_3_phi_fu_315_p4;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_35_1_fu_733_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
        stream_out_32_data_V_1_data_in = p_Result_14_fu_699_p5;
    end else begin
        stream_out_32_data_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((stream_out_32_data_V_1_sel == 1'b1)) begin
        stream_out_32_data_V_1_data_out = stream_out_32_data_V_1_payload_B;
    end else begin
        stream_out_32_data_V_1_data_out = stream_out_32_data_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op157_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_predicate_op239_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_reg_387 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        stream_out_32_data_V_1_vld_in = 1'b1;
    end else begin
        stream_out_32_data_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_01001))) begin
        stream_out_32_last_V_1_data_in = p_Result_1_2_reg_1250;
    end else if (((delayed_last_reg_387 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_01001))) begin
        stream_out_32_last_V_1_data_in = p_Result_1_1_reg_1235;
    end else if (((ap_predicate_op239_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3_01001))) begin
        stream_out_32_last_V_1_data_in = ap_phi_mux_p_0151_2_3_phi_fu_557_p4[4'd1];
    end else if (((ap_predicate_op157_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_01001))) begin
        stream_out_32_last_V_1_data_in = ap_phi_mux_last_6_3_phi_fu_342_p4;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001)) | ((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_01001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001)))) begin
        stream_out_32_last_V_1_data_in = stream_in_24_last_V_0_data_out;
    end else begin
        stream_out_32_last_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((stream_out_32_last_V_1_sel == 1'b1)) begin
        stream_out_32_last_V_1_data_out = stream_out_32_last_V_1_payload_B;
    end else begin
        stream_out_32_last_V_1_data_out = stream_out_32_last_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op157_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_predicate_op239_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_reg_387 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        stream_out_32_last_V_1_vld_in = 1'b1;
    end else begin
        stream_out_32_last_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_01001))) begin
        stream_out_32_user_V_1_data_in = p_Result_2_reg_1245;
    end else if (((delayed_last_reg_387 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_01001))) begin
        stream_out_32_user_V_1_data_in = p_Result_10_reg_1230;
    end else if (((ap_predicate_op239_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage3_01001))) begin
        stream_out_32_user_V_1_data_in = ap_phi_mux_p_0147_2_3_phi_fu_545_p4[4'd0];
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001))) begin
        stream_out_32_user_V_1_data_in = stream_in_24_user_V_0_data_out;
    end else if (((ap_predicate_op157_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_01001))) begin
        stream_out_32_user_V_1_data_in = ap_phi_mux_user_1_3_phi_fu_328_p4;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_01001))) begin
        stream_out_32_user_V_1_data_in = or_ln109_fu_722_p2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
        stream_out_32_user_V_1_data_in = or_ln126_fu_642_p2;
    end else begin
        stream_out_32_user_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((stream_out_32_user_V_1_sel == 1'b1)) begin
        stream_out_32_user_V_1_data_out = stream_out_32_user_V_1_payload_B;
    end else begin
        stream_out_32_user_V_1_data_out = stream_out_32_user_V_1_payload_A;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_predicate_op157_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage1_11001) & (delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1)) | ((1'b0 == ap_block_pp4_stage3_11001) & (ap_predicate_op239_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (delayed_last_reg_387 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)))) begin
        stream_out_32_user_V_1_vld_in = 1'b1;
    end else begin
        stream_out_32_user_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            if (((grp_read_fu_146_p2 == 32'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((grp_read_fu_146_p2 == 32'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((grp_read_fu_146_p2 == 32'd2) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((grp_read_fu_146_p2 == 32'd3) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((grp_read_fu_146_p2 == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_32_last_V_1_state == 2'd1) | (stream_out_32_user_V_1_state == 2'd1) | (stream_out_32_data_V_1_state == 2'd1) | ((stream_out_32_last_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_user_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_data_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_phi_mux_delayed_last_1_phi_fu_203_p4 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((ap_phi_mux_delayed_last_1_phi_fu_203_p4 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if ((1'b0 == ap_block_pp2_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_phi_mux_delayed_last_0_phi_fu_403_p4 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_phi_mux_delayed_last_0_phi_fu_403_p4 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_subdone)) & (1'b0 == ap_block_pp4_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1)) | ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((ap_enable_reg_pp1_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0)));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((ap_predicate_op108_read_state10 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((ap_predicate_op108_read_state10 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1)));
end

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage1_11001 = ((ap_predicate_op121_read_state11 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage1_subdone = ((ap_predicate_op121_read_state11 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage2_11001 = ((ap_predicate_op133_read_state12 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage2_subdone = ((ap_predicate_op133_read_state12 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

assign ap_block_pp2_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage3_01001 = ((ap_predicate_op145_read_state13 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage3_11001 = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((ap_predicate_op145_read_state13 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0))));
end

always @ (*) begin
    ap_block_pp2_stage3_subdone = ((ap_enable_reg_pp2_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((ap_predicate_op145_read_state13 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0))));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((stream_out_32_data_V_1_ack_in == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & ((stream_in_24_data_V_0_vld_out == 1'b0) | (stream_out_32_data_V_1_ack_in == 1'b0))));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_01001 = ((ap_predicate_op182_read_state19 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage0_11001 = (((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op182_read_state19 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = (((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op182_read_state19 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage1_01001 = ((ap_predicate_op197_read_state20 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage1_11001 = (((1'b1 == ap_block_state24_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op197_read_state20 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp4_stage1_subdone = (((1'b1 == ap_block_state24_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op197_read_state20 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage2_11001 = (((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op210_read_state21 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp4_stage2_subdone = (((1'b1 == ap_block_state25_io) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((ap_predicate_op210_read_state21 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)));
end

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage3_01001 = ((ap_predicate_op223_read_state22 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage3_11001 = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((ap_predicate_op223_read_state22 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0))));
end

always @ (*) begin
    ap_block_pp4_stage3_subdone = ((ap_enable_reg_pp4_iter0 == 1'b1) & ((1'b1 == ap_block_state22_io) | ((ap_predicate_op223_read_state22 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0))));
end

always @ (*) begin
    ap_block_state10_pp2_stage0_iter0 = ((ap_predicate_op108_read_state10 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp2_stage1_iter0 = ((ap_predicate_op121_read_state11 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp2_stage2_iter0 = ((ap_predicate_op133_read_state12 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state13_io = ((ap_predicate_op157_write_state13 == 1'b1) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp2_stage3_iter0 = ((ap_predicate_op145_read_state13 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state14_io = ((delayed_last_2_reg_187 == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

assign ap_block_state14_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp3_stage0_iter0 = (stream_in_24_data_V_0_vld_out == 1'b0);
end

assign ap_block_state17_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp4_stage0_iter0 = ((ap_predicate_op182_read_state19 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp4_stage1_iter0 = ((ap_predicate_op197_read_state20 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp4_stage2_iter0 = ((ap_predicate_op210_read_state21 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state22_io = ((ap_predicate_op239_write_state22 == 1'b1) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp4_stage3_iter0 = ((ap_predicate_op223_read_state22 == 1'b1) & (stream_in_24_data_V_0_vld_out == 1'b0));
end

always @ (*) begin
    ap_block_state23_io = ((delayed_last_reg_387 == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

assign ap_block_state23_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state24_io = ((delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

assign ap_block_state24_pp4_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state25_io = ((delayed_last_reg_387_pp4_iter1_reg == 1'd0) & (stream_out_32_data_V_1_ack_in == 1'b0));
end

assign ap_block_state25_pp4_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0 = (stream_in_24_data_V_0_vld_out == 1'b0);
end

always @ (*) begin
    ap_block_state4_pp0_stage1_iter0 = (stream_in_24_data_V_0_vld_out == 1'b0);
end

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6 = ((stream_out_32_last_V_1_state == 2'd1) | (stream_out_32_user_V_1_state == 2'd1) | (stream_out_32_data_V_1_state == 2'd1) | ((stream_out_32_last_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_user_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0)) | ((stream_out_32_data_V_1_state == 2'd3) & (stream_out_32_TREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state7_pp1_stage0_iter0 = (stream_in_24_data_V_0_vld_out == 1'b0);
end

always @ (*) begin
    ap_block_state8_pp1_stage1_iter0 = (stream_in_24_data_V_0_vld_out == 1'b0);
end

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1108 = ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1120 = ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1135 = ((1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage3_11001));
end

always @ (*) begin
    ap_condition_1159 = ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0));
end

always @ (*) begin
    ap_condition_1167 = ((1'b0 == ap_block_pp4_stage1_11001) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1181 = ((1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1195 = ((1'b0 == ap_block_pp4_stage3_11001) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1703 = ((1'b0 == ap_block_pp2_stage3) & (delayed_last_1_reg_199 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage3) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1708 = ((delayed_last_0_reg_399 == 1'd0) & (1'b0 == ap_block_pp4_stage3) & (1'b1 == ap_CS_fsm_pp4_stage3) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1712 = ((1'b0 == ap_block_pp2_stage0_11001) & (ap_phi_mux_delayed_last_1_phi_fu_203_p4 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0));
end

always @ (*) begin
    ap_condition_1716 = ((1'b0 == ap_block_pp2_stage1_11001) & (delayed_last_1_reg_199 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1720 = ((1'b0 == ap_block_pp2_stage2_11001) & (delayed_last_1_reg_199 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1724 = ((1'b0 == ap_block_pp4_stage0_11001) & (ap_phi_mux_delayed_last_0_phi_fu_403_p4 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0));
end

always @ (*) begin
    ap_condition_1728 = ((1'b0 == ap_block_pp4_stage1_11001) & (delayed_last_0_reg_399 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_1732 = ((1'b0 == ap_block_pp4_stage2_11001) & (delayed_last_0_reg_399 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage2) & (ap_enable_reg_pp4_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_899 = ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_phi_reg_pp2_iter0_last_6_0_reg_212 = 'bx;

assign ap_phi_reg_pp2_iter0_last_6_1_reg_246 = 'bx;

assign ap_phi_reg_pp2_iter0_last_6_2_reg_279 = 'bx;

assign ap_phi_reg_pp2_iter0_last_6_3_reg_337 = 'bx;

assign ap_phi_reg_pp2_iter0_p_0279_2_3_reg_310 = 'bx;

assign ap_phi_reg_pp2_iter0_user_1_3_reg_324 = 'bx;

assign ap_phi_reg_pp4_iter0_last_2_0_reg_412 = 'bx;

assign ap_phi_reg_pp4_iter0_last_2_1_reg_456 = 'bx;

assign ap_phi_reg_pp4_iter0_last_2_2_reg_500 = 'bx;

assign ap_phi_reg_pp4_iter0_last_2_3_reg_577 = 'bx;

assign ap_phi_reg_pp4_iter0_p_0147_2_3_reg_541 = 'bx;

assign ap_phi_reg_pp4_iter0_p_0151_2_3_reg_553 = 'bx;

assign ap_phi_reg_pp4_iter0_p_0563_2_3_reg_565 = 'bx;

always @ (*) begin
    ap_predicate_op108_read_state10 = ((ap_phi_mux_delayed_last_2_phi_fu_191_p4 == 1'd0) & (ap_phi_mux_delayed_last_1_phi_fu_203_p4 == 1'd0));
end

always @ (*) begin
    ap_predicate_op121_read_state11 = ((last_6_0_reg_212 == 1'd0) & (delayed_last_1_reg_199 == 1'd0));
end

always @ (*) begin
    ap_predicate_op133_read_state12 = ((last_6_1_reg_246 == 1'd0) & (delayed_last_1_reg_199 == 1'd0));
end

always @ (*) begin
    ap_predicate_op145_read_state13 = ((last_6_2_reg_279 == 1'd0) & (delayed_last_1_reg_199 == 1'd0));
end

always @ (*) begin
    ap_predicate_op157_write_state13 = ((delayed_last_2_reg_187 == 1'd0) & (delayed_last_1_reg_199 == 1'd0));
end

always @ (*) begin
    ap_predicate_op182_read_state19 = ((ap_phi_mux_delayed_last_phi_fu_391_p4 == 1'd0) & (ap_phi_mux_delayed_last_0_phi_fu_403_p4 == 1'd0));
end

always @ (*) begin
    ap_predicate_op197_read_state20 = ((last_2_0_reg_412 == 1'd0) & (delayed_last_0_reg_399 == 1'd0));
end

always @ (*) begin
    ap_predicate_op210_read_state21 = ((last_2_1_reg_456 == 1'd0) & (delayed_last_0_reg_399 == 1'd0));
end

always @ (*) begin
    ap_predicate_op223_read_state22 = ((last_2_2_reg_500 == 1'd0) & (delayed_last_0_reg_399 == 1'd0));
end

always @ (*) begin
    ap_predicate_op239_write_state22 = ((delayed_last_reg_387 == 1'd0) & (delayed_last_0_reg_399 == 1'd0));
end

always @ (*) begin
    ap_rst_n_control_inv = ~ap_rst_n_control;
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_593_p4 = {{stream_in_24_data_V_0_data_out[15:8]}};

assign grp_fu_603_p4 = {{stream_in_24_data_V_0_data_out[23:16]}};

assign grp_fu_613_p1 = stream_in_24_last_V_0_data_out;

assign grp_read_fu_146_p2 = mode_0_data_reg;

assign or_ln109_fu_722_p2 = (stream_in_24_user_V_0_data_out | empty_25_reg_1095_1);

assign or_ln126_fu_642_p2 = (stream_in_24_user_V_0_data_out | empty_28_reg_1060_1);

assign or_ln89_1_fu_787_p2 = (stream_in_24_user_V_0_data_out | ap_phi_reg_pp2_iter0_user_1_1_reg_268);

assign or_ln89_2_fu_813_p2 = (stream_in_24_user_V_0_data_out | ap_phi_reg_pp2_iter0_user_1_2_reg_300);

assign or_ln89_fu_761_p2 = (stream_in_24_user_V_0_data_out | ap_phi_reg_pp2_iter0_user_1_0_reg_234);

assign out_c1_V_fu_656_p2 = (zext_ln364_fu_649_p1 + zext_ln364_1_fu_652_p1);

assign out_c2_V_fu_669_p2 = (zext_ln364_2_fu_662_p1 + zext_ln364_3_fu_665_p1);

assign p_Result_12_fu_745_p5 = {{ap_phi_mux_p_0279_0819_phi_fu_179_p4[31:8]}, {trunc_ln647_2_fu_741_p1}};

assign p_Result_13_fu_837_p3 = {{alpha_V_read_reg_1051}, {stream_in_24_data_V_0_data_out}};

assign p_Result_14_fu_699_p5 = {{{{p_Result_8_fu_689_p4}, {trunc_ln647_1_fu_685_p1}}, {p_Result_6_fu_675_p4}}, {trunc_ln647_reg_1075}};

assign p_Result_26_1_fu_877_p5 = {{ap_phi_reg_pp4_iter0_p_0563_2_0_reg_445[95:48]}, {stream_in_24_data_V_0_data_out}, {ap_phi_reg_pp4_iter0_p_0563_2_0_reg_445[23:0]}};

assign p_Result_26_2_fu_909_p5 = {{ap_phi_reg_pp4_iter0_p_0563_2_1_reg_489[95:72]}, {stream_in_24_data_V_0_data_out}, {ap_phi_reg_pp4_iter0_p_0563_2_1_reg_489[47:0]}};

assign p_Result_26_3_fu_941_p5 = {{stream_in_24_data_V_0_data_out}, {ap_phi_reg_pp4_iter0_p_0563_2_2_reg_531[71:0]}};

assign p_Result_33_1_fu_771_p5 = {{ap_phi_reg_pp2_iter0_p_0279_2_0_reg_223[31:16]}, {trunc_ln647_3_fu_767_p1}, {ap_phi_reg_pp2_iter0_p_0279_2_0_reg_223[7:0]}};

assign p_Result_33_2_fu_797_p5 = {{ap_phi_reg_pp2_iter0_p_0279_2_1_reg_257[31:24]}, {trunc_ln647_4_fu_793_p1}, {ap_phi_reg_pp2_iter0_p_0279_2_1_reg_257[15:0]}};

assign p_Result_33_3_fu_824_p5 = {{trunc_ln647_5_fu_820_p1}, {ap_phi_reg_pp2_iter0_p_0279_2_2_reg_290[23:0]}};

assign p_Result_35_1_fu_733_p3 = {{trunc_ln215_1_fu_729_p1}, {trunc_ln215_reg_1100}};

assign p_Result_6_fu_675_p4 = {{out_c1_V_fu_656_p2[8:1]}};

assign p_Result_8_fu_689_p4 = {{out_c2_V_fu_669_p2[8:1]}};

assign p_Result_9_fu_845_p5 = {{ap_phi_mux_p_0563_0815_phi_fu_379_p4[95:24]}, {stream_in_24_data_V_0_data_out}};

assign stream_in_24_TREADY = stream_in_24_last_V_0_state[1'd1];

assign stream_in_24_data_V_0_ack_in = stream_in_24_data_V_0_state[1'd1];

assign stream_in_24_data_V_0_load_A = (stream_in_24_data_V_0_state_cmp_full & ~stream_in_24_data_V_0_sel_wr);

assign stream_in_24_data_V_0_load_B = (stream_in_24_data_V_0_state_cmp_full & stream_in_24_data_V_0_sel_wr);

assign stream_in_24_data_V_0_sel = stream_in_24_data_V_0_sel_rd;

assign stream_in_24_data_V_0_state_cmp_full = ((stream_in_24_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_24_data_V_0_vld_in = stream_in_24_TVALID;

assign stream_in_24_data_V_0_vld_out = stream_in_24_data_V_0_state[1'd0];

assign stream_in_24_last_V_0_ack_in = stream_in_24_last_V_0_state[1'd1];

assign stream_in_24_last_V_0_load_A = (stream_in_24_last_V_0_state_cmp_full & ~stream_in_24_last_V_0_sel_wr);

assign stream_in_24_last_V_0_load_B = (stream_in_24_last_V_0_state_cmp_full & stream_in_24_last_V_0_sel_wr);

assign stream_in_24_last_V_0_sel = stream_in_24_last_V_0_sel_rd;

assign stream_in_24_last_V_0_state_cmp_full = ((stream_in_24_last_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_24_last_V_0_vld_in = stream_in_24_TVALID;

assign stream_in_24_last_V_0_vld_out = stream_in_24_last_V_0_state[1'd0];

assign stream_in_24_user_V_0_ack_in = stream_in_24_user_V_0_state[1'd1];

assign stream_in_24_user_V_0_load_A = (stream_in_24_user_V_0_state_cmp_full & ~stream_in_24_user_V_0_sel_wr);

assign stream_in_24_user_V_0_load_B = (stream_in_24_user_V_0_state_cmp_full & stream_in_24_user_V_0_sel_wr);

assign stream_in_24_user_V_0_sel = stream_in_24_user_V_0_sel_rd;

assign stream_in_24_user_V_0_state_cmp_full = ((stream_in_24_user_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_24_user_V_0_vld_in = stream_in_24_TVALID;

assign stream_in_24_user_V_0_vld_out = stream_in_24_user_V_0_state[1'd0];

assign stream_out_32_TDATA = stream_out_32_data_V_1_data_out;

assign stream_out_32_TLAST = stream_out_32_last_V_1_data_out;

assign stream_out_32_TUSER = stream_out_32_user_V_1_data_out;

assign stream_out_32_TVALID = stream_out_32_last_V_1_state[1'd0];

assign stream_out_32_data_V_1_ack_in = stream_out_32_data_V_1_state[1'd1];

assign stream_out_32_data_V_1_ack_out = stream_out_32_TREADY;

assign stream_out_32_data_V_1_load_A = (stream_out_32_data_V_1_state_cmp_full & ~stream_out_32_data_V_1_sel_wr);

assign stream_out_32_data_V_1_load_B = (stream_out_32_data_V_1_state_cmp_full & stream_out_32_data_V_1_sel_wr);

assign stream_out_32_data_V_1_sel = stream_out_32_data_V_1_sel_rd;

assign stream_out_32_data_V_1_state_cmp_full = ((stream_out_32_data_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_out_32_data_V_1_vld_out = stream_out_32_data_V_1_state[1'd0];

assign stream_out_32_last_V_1_ack_in = stream_out_32_last_V_1_state[1'd1];

assign stream_out_32_last_V_1_ack_out = stream_out_32_TREADY;

assign stream_out_32_last_V_1_load_A = (stream_out_32_last_V_1_state_cmp_full & ~stream_out_32_last_V_1_sel_wr);

assign stream_out_32_last_V_1_load_B = (stream_out_32_last_V_1_state_cmp_full & stream_out_32_last_V_1_sel_wr);

assign stream_out_32_last_V_1_sel = stream_out_32_last_V_1_sel_rd;

assign stream_out_32_last_V_1_state_cmp_full = ((stream_out_32_last_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_out_32_last_V_1_vld_out = stream_out_32_last_V_1_state[1'd0];

assign stream_out_32_user_V_1_ack_in = stream_out_32_user_V_1_state[1'd1];

assign stream_out_32_user_V_1_ack_out = stream_out_32_TREADY;

assign stream_out_32_user_V_1_load_A = (stream_out_32_user_V_1_state_cmp_full & ~stream_out_32_user_V_1_sel_wr);

assign stream_out_32_user_V_1_load_B = (stream_out_32_user_V_1_state_cmp_full & stream_out_32_user_V_1_sel_wr);

assign stream_out_32_user_V_1_sel = stream_out_32_user_V_1_sel_rd;

assign stream_out_32_user_V_1_state_cmp_full = ((stream_out_32_user_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_out_32_user_V_1_vld_out = stream_out_32_user_V_1_state[1'd0];

always @ (*) begin
    tmp_10_fu_931_p4 = ap_phi_reg_pp4_iter0_p_0151_2_1_reg_478;
    tmp_10_fu_931_p4[32'd2] = |(stream_in_24_last_V_0_data_out);
end

always @ (*) begin
    tmp_11_fu_954_p4 = ap_phi_reg_pp4_iter0_p_0147_2_2_reg_511;
    tmp_11_fu_954_p4[32'd3] = |(stream_in_24_user_V_0_data_out);
end

always @ (*) begin
    tmp_12_fu_965_p4 = ap_phi_reg_pp4_iter0_p_0151_2_2_reg_521;
    tmp_12_fu_965_p4[32'd3] = |(stream_in_24_last_V_0_data_out);
end

always @ (*) begin
    tmp_5_fu_857_p4 = ap_phi_mux_p_0147_0817_phi_fu_355_p4;
    tmp_5_fu_857_p4[32'd0] = |(stream_in_24_user_V_0_data_out);
end

always @ (*) begin
    tmp_6_fu_867_p4 = ap_phi_mux_p_0151_0816_phi_fu_367_p4;
    tmp_6_fu_867_p4[32'd0] = |(stream_in_24_last_V_0_data_out);
end

always @ (*) begin
    tmp_7_fu_889_p4 = ap_phi_reg_pp4_iter0_p_0147_2_0_reg_423;
    tmp_7_fu_889_p4[32'd1] = |(stream_in_24_user_V_0_data_out);
end

always @ (*) begin
    tmp_8_fu_899_p4 = ap_phi_reg_pp4_iter0_p_0151_2_0_reg_434;
    tmp_8_fu_899_p4[32'd1] = |(stream_in_24_last_V_0_data_out);
end

always @ (*) begin
    tmp_9_fu_921_p4 = ap_phi_reg_pp4_iter0_p_0147_2_1_reg_467;
    tmp_9_fu_921_p4[32'd2] = |(stream_in_24_user_V_0_data_out);
end

assign trunc_ln215_1_fu_729_p1 = stream_in_24_data_V_0_data_out[15:0];

assign trunc_ln215_fu_711_p1 = stream_in_24_data_V_0_data_out[15:0];

assign trunc_ln647_1_fu_685_p1 = stream_in_24_data_V_0_data_out[7:0];

assign trunc_ln647_2_fu_741_p1 = stream_in_24_data_V_0_data_out[7:0];

assign trunc_ln647_3_fu_767_p1 = stream_in_24_data_V_0_data_out[7:0];

assign trunc_ln647_4_fu_793_p1 = stream_in_24_data_V_0_data_out[7:0];

assign trunc_ln647_5_fu_820_p1 = stream_in_24_data_V_0_data_out[7:0];

assign trunc_ln647_6_fu_976_p1 = ap_phi_mux_p_0563_2_3_phi_fu_569_p4[31:0];

assign trunc_ln647_fu_631_p1 = stream_in_24_data_V_0_data_out[7:0];

assign zext_ln364_1_fu_652_p1 = grp_fu_593_p4;

assign zext_ln364_2_fu_662_p1 = p_Result_3_reg_1070;

assign zext_ln364_3_fu_665_p1 = grp_fu_603_p4;

assign zext_ln364_fu_649_p1 = p_Result_s_30_reg_1065;

endmodule //pixel_pack
