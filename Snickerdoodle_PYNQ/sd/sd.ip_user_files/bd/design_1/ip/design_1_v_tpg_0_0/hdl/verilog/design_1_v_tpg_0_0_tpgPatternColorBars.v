// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_1_v_tpg_0_0_tpgPatternColorBars (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        y,
        x,
        width,
        color,
        bck_motion_en,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] y;
input  [15:0] x;
input  [15:0] width;
input  [7:0] color;
input  [15:0] bck_motion_en;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] s;
reg   [7:0] hBarSel_4_0;
wire   [2:0] tpgBarSelRgb_r_address0;
reg    tpgBarSelRgb_r_ce0;
wire   [0:0] tpgBarSelRgb_r_q0;
wire   [2:0] tpgBarSelYuv_y_address0;
reg    tpgBarSelYuv_y_ce0;
wire   [7:0] tpgBarSelYuv_y_q0;
wire   [2:0] tpgBarSelRgb_g_address0;
reg    tpgBarSelRgb_g_ce0;
wire   [0:0] tpgBarSelRgb_g_q0;
wire   [2:0] tpgBarSelYuv_v_address0;
reg    tpgBarSelYuv_v_ce0;
wire   [7:0] tpgBarSelYuv_v_q0;
wire   [2:0] tpgBarSelYuv_u_address0;
reg    tpgBarSelYuv_u_ce0;
wire   [7:0] tpgBarSelYuv_u_q0;
wire   [2:0] tpgBarSelRgb_b_address0;
reg    tpgBarSelRgb_b_ce0;
wire   [0:0] tpgBarSelRgb_b_q0;
reg   [10:0] xBar_V_0;
reg   [31:0] count;
wire   [0:0] icmp_ln1187_fu_273_p2;
wire   [0:0] and_ln1188_1_fu_403_p2;
reg   [0:0] and_ln1188_1_reg_631;
reg    ap_block_pp0_stage0_subdone;
reg   [7:0] ap_phi_mux_hBarSel_4_0_loc_0_phi_fu_189_p6;
wire   [7:0] trunc_ln1174_fu_268_p1;
wire   [7:0] ap_phi_reg_pp0_iter0_hBarSel_4_0_loc_0_reg_186;
wire   [0:0] icmp_ln1172_fu_262_p2;
wire   [0:0] icmp_ln887_fu_302_p2;
wire   [7:0] zext_ln1184_fu_336_p1;
reg   [0:0] ap_phi_mux_s_flag_4_phi_fu_200_p6;
wire   [0:0] icmp_ln1161_fu_222_p2;
wire   [0:0] ap_phi_reg_pp0_iter0_s_flag_4_reg_197;
wire   [0:0] icmp_ln1192_fu_409_p2;
wire   [0:0] or_ln1198_fu_487_p2;
wire   [0:0] icmp_ln1194_fu_421_p2;
reg   [31:0] ap_phi_mux_s_new_4_phi_fu_212_p6;
wire   [31:0] ap_phi_reg_pp0_iter0_s_new_4_reg_209;
wire   [31:0] select_ln1198_fu_494_p3;
wire   [63:0] zext_ln1187_fu_371_p1;
wire   [10:0] add_ln214_1_fu_314_p2;
wire   [10:0] add_ln214_fu_347_p2;
wire   [31:0] select_ln1198_1_fu_503_p3;
wire   [13:0] trunc_ln1168_fu_242_p1;
wire   [13:0] add_ln1168_fu_246_p2;
wire   [31:0] select_ln1161_fu_234_p3;
wire   [10:0] barWidth_V_fu_252_p4;
wire   [11:0] zext_ln1353_fu_292_p1;
wire   [11:0] add_ln1353_fu_296_p2;
wire   [11:0] zext_ln1187_1_fu_279_p1;
wire   [10:0] sub_ln214_fu_308_p2;
wire   [2:0] trunc_ln1184_fu_326_p1;
wire   [2:0] add_ln1184_fu_330_p2;
wire   [0:0] trunc_ln1188_fu_381_p1;
wire   [0:0] xor_ln1187_fu_385_p2;
wire   [0:0] and_ln1188_fu_397_p2;
wire   [0:0] icmp_ln1188_fu_391_p2;
wire   [15:0] or_ln1194_fu_415_p2;
wire   [28:0] tmp_fu_437_p4;
wire   [31:0] add_ln1196_fu_431_p2;
wire   [0:0] icmp_ln1200_fu_453_p2;
wire   [31:0] add_ln1202_fu_459_p2;
wire   [0:0] icmp_ln1198_fu_447_p2;
wire   [0:0] xor_ln1198_fu_481_p2;
wire   [31:0] select_ln1200_fu_465_p3;
wire   [31:0] select_ln1200_1_fu_473_p3;
wire   [7:0] select_ln300_fu_523_p3;
wire   [7:0] select_ln300_5_fu_538_p3;
wire   [7:0] select_ln1187_1_fu_546_p3;
wire   [7:0] select_ln300_6_fu_560_p3;
wire   [7:0] select_ln1187_fu_531_p3;
wire   [7:0] select_ln1188_fu_553_p3;
wire   [7:0] select_ln1187_2_fu_568_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_25;
reg    ap_condition_48;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 s = 32'd0;
#0 hBarSel_4_0 = 8'd0;
#0 xBar_V_0 = 11'd0;
#0 count = 32'd0;
end

design_1_v_tpg_0_0_tpgPatternDPColorcud #(
    .DataWidth( 1 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
tpgBarSelRgb_r_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tpgBarSelRgb_r_address0),
    .ce0(tpgBarSelRgb_r_ce0),
    .q0(tpgBarSelRgb_r_q0)
);

design_1_v_tpg_0_0_tpgPatternCheckerqcK #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
tpgBarSelYuv_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tpgBarSelYuv_y_address0),
    .ce0(tpgBarSelYuv_y_ce0),
    .q0(tpgBarSelYuv_y_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColordEe #(
    .DataWidth( 1 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
tpgBarSelRgb_g_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tpgBarSelRgb_g_address0),
    .ce0(tpgBarSelRgb_g_ce0),
    .q0(tpgBarSelRgb_g_q0)
);

design_1_v_tpg_0_0_tpgPatternCheckersc4 #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
tpgBarSelYuv_v_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tpgBarSelYuv_v_address0),
    .ce0(tpgBarSelYuv_v_ce0),
    .q0(tpgBarSelYuv_v_q0)
);

design_1_v_tpg_0_0_tpgPatternCheckertde #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
tpgBarSelYuv_u_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tpgBarSelYuv_u_address0),
    .ce0(tpgBarSelYuv_u_ce0),
    .q0(tpgBarSelYuv_u_q0)
);

design_1_v_tpg_0_0_tpgPatternDPColoreOg #(
    .DataWidth( 1 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
tpgBarSelRgb_b_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tpgBarSelRgb_b_address0),
    .ce0(tpgBarSelRgb_b_ce0),
    .q0(tpgBarSelRgb_b_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_48)) begin
        if ((icmp_ln1172_fu_262_p2 == 1'd1)) begin
            hBarSel_4_0 <= trunc_ln1174_fu_268_p1;
        end else if (((icmp_ln887_fu_302_p2 == 1'd0) & (icmp_ln1172_fu_262_p2 == 1'd0))) begin
            hBarSel_4_0 <= zext_ln1184_fu_336_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_48)) begin
        if ((icmp_ln1172_fu_262_p2 == 1'd1)) begin
            xBar_V_0 <= 11'd0;
        end else if (((icmp_ln887_fu_302_p2 == 1'd1) & (icmp_ln1172_fu_262_p2 == 1'd0))) begin
            xBar_V_0 <= add_ln214_fu_347_p2;
        end else if (((icmp_ln887_fu_302_p2 == 1'd0) & (icmp_ln1172_fu_262_p2 == 1'd0))) begin
            xBar_V_0 <= add_ln214_1_fu_314_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln1188_1_reg_631 <= and_ln1188_1_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1194_fu_421_p2 == 1'd1) & (icmp_ln1192_fu_409_p2 == 1'd1))) begin
        count <= select_ln1198_1_fu_503_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_s_flag_4_phi_fu_200_p6 == 1'd1))) begin
        s <= ap_phi_mux_s_new_4_phi_fu_212_p6;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_25)) begin
        if (((icmp_ln887_fu_302_p2 == 1'd0) & (icmp_ln1172_fu_262_p2 == 1'd0))) begin
            ap_phi_mux_hBarSel_4_0_loc_0_phi_fu_189_p6 = zext_ln1184_fu_336_p1;
        end else if (((icmp_ln887_fu_302_p2 == 1'd1) & (icmp_ln1172_fu_262_p2 == 1'd0))) begin
            ap_phi_mux_hBarSel_4_0_loc_0_phi_fu_189_p6 = hBarSel_4_0;
        end else if ((icmp_ln1172_fu_262_p2 == 1'd1)) begin
            ap_phi_mux_hBarSel_4_0_loc_0_phi_fu_189_p6 = trunc_ln1174_fu_268_p1;
        end else begin
            ap_phi_mux_hBarSel_4_0_loc_0_phi_fu_189_p6 = ap_phi_reg_pp0_iter0_hBarSel_4_0_loc_0_reg_186;
        end
    end else begin
        ap_phi_mux_hBarSel_4_0_loc_0_phi_fu_189_p6 = ap_phi_reg_pp0_iter0_hBarSel_4_0_loc_0_reg_186;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1194_fu_421_p2 == 1'd1) & (icmp_ln1192_fu_409_p2 == 1'd1))) begin
        ap_phi_mux_s_flag_4_phi_fu_200_p6 = or_ln1198_fu_487_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1194_fu_421_p2 == 1'd0) & (icmp_ln1192_fu_409_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1192_fu_409_p2 == 1'd0)))) begin
        ap_phi_mux_s_flag_4_phi_fu_200_p6 = icmp_ln1161_fu_222_p2;
    end else begin
        ap_phi_mux_s_flag_4_phi_fu_200_p6 = ap_phi_reg_pp0_iter0_s_flag_4_reg_197;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1194_fu_421_p2 == 1'd1) & (icmp_ln1192_fu_409_p2 == 1'd1))) begin
        ap_phi_mux_s_new_4_phi_fu_212_p6 = select_ln1198_fu_494_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1194_fu_421_p2 == 1'd0) & (icmp_ln1192_fu_409_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1192_fu_409_p2 == 1'd0)))) begin
        ap_phi_mux_s_new_4_phi_fu_212_p6 = 32'd0;
    end else begin
        ap_phi_mux_s_new_4_phi_fu_212_p6 = ap_phi_reg_pp0_iter0_s_new_4_reg_209;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgBarSelRgb_b_ce0 = 1'b1;
    end else begin
        tpgBarSelRgb_b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgBarSelRgb_g_ce0 = 1'b1;
    end else begin
        tpgBarSelRgb_g_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgBarSelRgb_r_ce0 = 1'b1;
    end else begin
        tpgBarSelRgb_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgBarSelYuv_u_ce0 = 1'b1;
    end else begin
        tpgBarSelYuv_u_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgBarSelYuv_v_ce0 = 1'b1;
    end else begin
        tpgBarSelYuv_v_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgBarSelYuv_y_ce0 = 1'b1;
    end else begin
        tpgBarSelYuv_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1168_fu_246_p2 = (14'd7 + trunc_ln1168_fu_242_p1);

assign add_ln1184_fu_330_p2 = (3'd1 + trunc_ln1184_fu_326_p1);

assign add_ln1196_fu_431_p2 = (count + 32'd1);

assign add_ln1202_fu_459_p2 = (select_ln1161_fu_234_p3 + 32'd1);

assign add_ln1353_fu_296_p2 = (zext_ln1353_fu_292_p1 + 12'd1);

assign add_ln214_1_fu_314_p2 = (xBar_V_0 + sub_ln214_fu_308_p2);

assign add_ln214_fu_347_p2 = (xBar_V_0 + 11'd1);

assign and_ln1188_1_fu_403_p2 = (icmp_ln1188_fu_391_p2 & and_ln1188_fu_397_p2);

assign and_ln1188_fu_397_p2 = (xor_ln1187_fu_385_p2 & trunc_ln1188_fu_381_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_25 = ((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_48 = ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_hBarSel_4_0_loc_0_reg_186 = 'bx;

assign ap_phi_reg_pp0_iter0_s_flag_4_reg_197 = 'bx;

assign ap_phi_reg_pp0_iter0_s_new_4_reg_209 = 'bx;

assign ap_return_0 = select_ln1187_fu_531_p3;

assign ap_return_1 = select_ln1188_fu_553_p3;

assign ap_return_2 = select_ln1187_2_fu_568_p3;

assign barWidth_V_fu_252_p4 = {{add_ln1168_fu_246_p2[13:3]}};

assign icmp_ln1161_fu_222_p2 = ((bck_motion_en == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1172_fu_262_p2 = ((x == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1187_fu_273_p2 = ((color == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1188_fu_391_p2 = ((color != 8'd1) ? 1'b1 : 1'b0);

assign icmp_ln1192_fu_409_p2 = ((bck_motion_en == 16'd1) ? 1'b1 : 1'b0);

assign icmp_ln1194_fu_421_p2 = ((or_ln1194_fu_415_p2 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1198_fu_447_p2 = (($signed(tmp_fu_437_p4) < $signed(29'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1200_fu_453_p2 = ((add_ln1196_fu_431_p2 == 32'd10) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_302_p2 = ((add_ln1353_fu_296_p2 < zext_ln1187_1_fu_279_p1) ? 1'b1 : 1'b0);

assign or_ln1194_fu_415_p2 = (y | x);

assign or_ln1198_fu_487_p2 = (xor_ln1198_fu_481_p2 | icmp_ln1200_fu_453_p2);

assign select_ln1161_fu_234_p3 = ((icmp_ln1161_fu_222_p2[0:0] === 1'b1) ? 32'd0 : s);

assign select_ln1187_1_fu_546_p3 = ((icmp_ln1187_fu_273_p2[0:0] === 1'b1) ? select_ln300_5_fu_538_p3 : tpgBarSelYuv_u_q0);

assign select_ln1187_2_fu_568_p3 = ((icmp_ln1187_fu_273_p2[0:0] === 1'b1) ? select_ln300_6_fu_560_p3 : tpgBarSelYuv_v_q0);

assign select_ln1187_fu_531_p3 = ((icmp_ln1187_fu_273_p2[0:0] === 1'b1) ? select_ln300_fu_523_p3 : tpgBarSelYuv_y_q0);

assign select_ln1188_fu_553_p3 = ((and_ln1188_1_reg_631[0:0] === 1'b1) ? tpgBarSelYuv_v_q0 : select_ln1187_1_fu_546_p3);

assign select_ln1198_1_fu_503_p3 = ((icmp_ln1198_fu_447_p2[0:0] === 1'b1) ? select_ln1200_1_fu_473_p3 : add_ln1196_fu_431_p2);

assign select_ln1198_fu_494_p3 = ((icmp_ln1198_fu_447_p2[0:0] === 1'b1) ? select_ln1200_fu_465_p3 : 32'd0);

assign select_ln1200_1_fu_473_p3 = ((icmp_ln1200_fu_453_p2[0:0] === 1'b1) ? 32'd0 : add_ln1196_fu_431_p2);

assign select_ln1200_fu_465_p3 = ((icmp_ln1200_fu_453_p2[0:0] === 1'b1) ? add_ln1202_fu_459_p2 : 32'd0);

assign select_ln300_5_fu_538_p3 = ((tpgBarSelRgb_g_q0[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln300_6_fu_560_p3 = ((tpgBarSelRgb_b_q0[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln300_fu_523_p3 = ((tpgBarSelRgb_r_q0[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign sub_ln214_fu_308_p2 = (11'd1 - barWidth_V_fu_252_p4);

assign tmp_fu_437_p4 = {{select_ln1161_fu_234_p3[31:3]}};

assign tpgBarSelRgb_b_address0 = zext_ln1187_fu_371_p1;

assign tpgBarSelRgb_g_address0 = zext_ln1187_fu_371_p1;

assign tpgBarSelRgb_r_address0 = zext_ln1187_fu_371_p1;

assign tpgBarSelYuv_u_address0 = zext_ln1187_fu_371_p1;

assign tpgBarSelYuv_v_address0 = zext_ln1187_fu_371_p1;

assign tpgBarSelYuv_y_address0 = zext_ln1187_fu_371_p1;

assign trunc_ln1168_fu_242_p1 = width[13:0];

assign trunc_ln1174_fu_268_p1 = select_ln1161_fu_234_p3[7:0];

assign trunc_ln1184_fu_326_p1 = hBarSel_4_0[2:0];

assign trunc_ln1188_fu_381_p1 = x[0:0];

assign xor_ln1187_fu_385_p2 = (icmp_ln1187_fu_273_p2 ^ 1'd1);

assign xor_ln1198_fu_481_p2 = (icmp_ln1198_fu_447_p2 ^ 1'd1);

assign zext_ln1184_fu_336_p1 = add_ln1184_fu_330_p2;

assign zext_ln1187_1_fu_279_p1 = barWidth_V_fu_252_p4;

assign zext_ln1187_fu_371_p1 = ap_phi_mux_hBarSel_4_0_loc_0_phi_fu_189_p6;

assign zext_ln1353_fu_292_p1 = xBar_V_0;

endmodule //design_1_v_tpg_0_0_tpgPatternColorBars
