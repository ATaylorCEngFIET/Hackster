// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4_AR70530_AR70530
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_reg_1426;
reg   [0:0] ap_reg_pp0_iter1_exitcond388_i_reg_1426;
reg   [0:0] or_cond_i_i_reg_1435;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_i_reg_1435;
reg   [0:0] icmp_reg_1391;
reg   [0:0] tmp_s_reg_1382;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_1456;
reg   [0:0] ap_reg_pp0_iter4_or_cond_i_reg_1456;
reg   [10:0] t_V_2_reg_329;
wire  signed [9:0] OP2_V_0_1_cast_fu_340_p1;
reg  signed [9:0] OP2_V_0_1_cast_reg_1343;
wire  signed [9:0] OP2_V_0_2_cast_fu_344_p1;
reg  signed [9:0] OP2_V_0_2_cast_reg_1348;
wire  signed [10:0] OP2_V_1_cast_fu_348_p1;
reg  signed [10:0] OP2_V_1_cast_reg_1353;
wire   [11:0] OP2_V_1_2_cast_fu_352_p1;
reg   [11:0] OP2_V_1_2_cast_reg_1358;
wire  signed [9:0] OP2_V_2_cast_fu_356_p1;
reg  signed [9:0] OP2_V_2_cast_reg_1363;
wire   [10:0] OP2_V_2_1_cast_fu_360_p1;
reg   [10:0] OP2_V_2_1_cast_reg_1368;
wire   [0:0] exitcond389_i_fu_368_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_374_p2;
reg   [9:0] i_V_reg_1377;
wire   [0:0] tmp_s_fu_380_p2;
wire   [0:0] tmp_458_not_fu_386_p2;
reg   [0:0] tmp_458_not_reg_1386;
wire   [0:0] icmp_fu_402_p2;
wire   [0:0] tmp_2_fu_408_p2;
reg   [0:0] tmp_2_reg_1396;
wire   [0:0] tmp_502_1_fu_414_p2;
reg   [0:0] tmp_502_1_reg_1400;
wire   [0:0] tmp_3_fu_420_p2;
reg   [0:0] tmp_3_reg_1404;
wire   [1:0] row_assign_s_fu_576_p2;
reg   [1:0] row_assign_s_reg_1411;
wire   [1:0] row_assign_10_1_t_fu_614_p2;
reg   [1:0] row_assign_10_1_t_reg_1416;
wire   [1:0] row_assign_10_2_t_fu_652_p2;
reg   [1:0] row_assign_10_2_t_reg_1421;
wire   [0:0] exitcond388_i_fu_662_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op161_read_state5;
reg    ap_predicate_op172_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter2_exitcond388_i_reg_1426;
wire   [10:0] j_V_fu_668_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_720_p2;
wire   [12:0] x_fu_794_p3;
reg   [12:0] x_reg_1439;
wire   [1:0] tmp_73_fu_802_p1;
reg   [1:0] tmp_73_reg_1444;
reg   [1:0] ap_reg_pp0_iter1_tmp_73_reg_1444;
wire   [0:0] brmerge_fu_806_p2;
reg   [0:0] brmerge_reg_1449;
reg   [0:0] ap_reg_pp0_iter1_brmerge_reg_1449;
wire   [0:0] or_cond_i_fu_811_p2;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_reg_1456;
reg   [0:0] ap_reg_pp0_iter2_or_cond_i_reg_1456;
reg   [0:0] ap_reg_pp0_iter3_or_cond_i_reg_1456;
reg   [10:0] k_buf_0_val_3_addr_reg_1460;
reg   [10:0] k_buf_0_val_4_addr_reg_1466;
reg   [10:0] k_buf_0_val_5_addr_reg_1472;
wire   [7:0] src_kernel_win_0_va_23_fu_953_p3;
reg   [7:0] src_kernel_win_0_va_23_reg_1478;
wire   [7:0] src_kernel_win_0_va_24_fu_971_p3;
reg   [7:0] src_kernel_win_0_va_24_reg_1485;
wire   [7:0] src_kernel_win_0_va_25_fu_989_p3;
reg   [7:0] src_kernel_win_0_va_25_reg_1491;
wire  signed [10:0] grp_fu_1252_p3;
reg  signed [10:0] p_Val2_84_0_1_reg_1496;
wire   [11:0] p_Val2_84_1_1_fu_1068_p2;
reg   [11:0] p_Val2_84_1_1_reg_1501;
wire   [11:0] r_V_8_1_2_fu_1077_p2;
reg   [11:0] r_V_8_1_2_reg_1506;
wire   [7:0] tmp_79_fu_1101_p1;
reg   [7:0] tmp_79_reg_1511;
wire   [10:0] tmp4_fu_1131_p2;
reg   [10:0] tmp4_reg_1516;
wire   [7:0] tmp6_fu_1137_p2;
reg   [7:0] tmp6_reg_1521;
wire   [7:0] tmp8_fu_1143_p2;
reg   [7:0] tmp8_reg_1526;
wire   [7:0] p_Val2_s_fu_1244_p3;
reg   [7:0] p_Val2_s_reg_1531;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter3;
reg    ap_condition_pp0_exit_iter2_state5;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [9:0] t_V_reg_318;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_21_fu_819_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_162;
reg   [7:0] src_kernel_win_0_va_18_fu_166;
reg   [7:0] src_kernel_win_0_va_19_fu_170;
reg   [7:0] src_kernel_win_0_va_20_fu_174;
reg   [7:0] src_kernel_win_0_va_21_fu_178;
reg   [7:0] src_kernel_win_0_va_22_fu_182;
reg   [7:0] right_border_buf_0_s_fu_186;
wire   [7:0] col_buf_0_val_0_0_fu_861_p3;
reg   [7:0] right_border_buf_0_14_fu_190;
reg   [7:0] right_border_buf_0_15_fu_194;
reg   [7:0] right_border_buf_0_16_fu_198;
wire   [7:0] col_buf_0_val_1_0_fu_880_p3;
reg   [7:0] right_border_buf_0_17_fu_202;
reg   [7:0] right_border_buf_0_18_fu_206;
wire   [7:0] col_buf_0_val_2_0_fu_899_p3;
wire   [8:0] tmp_53_fu_392_p4;
wire   [10:0] t_V_cast_fu_364_p1;
wire   [10:0] tmp_6_fu_426_p2;
wire   [0:0] tmp_55_fu_436_p3;
wire   [0:0] tmp_9_fu_450_p2;
wire   [0:0] rev_fu_444_p2;
wire   [0:0] tmp_56_fu_462_p3;
wire   [10:0] p_assign_7_fu_470_p2;
wire   [10:0] p_p2_i425_i_fu_476_p3;
wire   [1:0] tmp_58_fu_488_p1;
wire   [10:0] p_assign_6_1_fu_508_p2;
wire   [10:0] p_assign_6_2_fu_534_p2;
wire   [0:0] tmp_12_fu_492_p2;
wire   [1:0] tmp_57_fu_484_p1;
wire   [1:0] p_assign_8_fu_498_p2;
wire   [0:0] or_cond_i424_i_fu_456_p2;
wire   [1:0] tmp_54_fu_432_p1;
wire   [1:0] p_p2_i425_i_cast_cast_4_fu_560_p3;
wire   [1:0] y_1_fu_568_p3;
wire   [1:0] tmp_59_fu_504_p1;
wire   [1:0] tmp_62_fu_530_p1;
wire   [0:0] tmp_61_fu_522_p3;
wire   [1:0] tmp_66_fu_588_p2;
wire   [1:0] tmp_67_fu_594_p1;
wire   [0:0] tmp_60_fu_514_p3;
wire   [1:0] tmp_36_fu_598_p3;
wire   [1:0] tmp_26_fu_582_p2;
wire   [1:0] tmp_28_fu_606_p3;
wire   [1:0] tmp_65_fu_556_p1;
wire   [0:0] tmp_64_fu_548_p3;
wire   [1:0] tmp_68_fu_626_p2;
wire   [1:0] tmp_69_fu_632_p1;
wire   [0:0] tmp_63_fu_540_p3;
wire   [1:0] tmp_38_fu_636_p3;
wire   [1:0] tmp_30_fu_620_p2;
wire   [1:0] tmp_32_fu_644_p3;
wire   [9:0] tmp_70_fu_674_p4;
wire   [11:0] t_V_3_cast_fu_658_p1;
wire   [11:0] ImagLoc_x_fu_690_p2;
wire   [0:0] tmp_71_fu_700_p3;
wire   [0:0] tmp_17_fu_714_p2;
wire   [0:0] rev2_fu_708_p2;
wire   [0:0] tmp_72_fu_726_p3;
wire   [11:0] p_assign_1_fu_734_p2;
wire   [11:0] p_p2_i_i_fu_740_p3;
wire   [11:0] p_assign_2_fu_758_p2;
wire  signed [12:0] ImagLoc_x_cast_cast_s_fu_696_p1;
wire   [12:0] p_assign_2_cast_fu_764_p1;
wire   [0:0] tmp_17_not_fu_776_p2;
wire   [0:0] tmp_19_fu_752_p2;
wire   [0:0] sel_tmp7_fu_782_p2;
wire   [0:0] sel_tmp8_fu_788_p2;
wire  signed [12:0] p_p2_i_i_cast8_cast_c_fu_748_p1;
wire   [12:0] sel_tmp_fu_768_p3;
wire   [0:0] icmp2_fu_684_p2;
wire  signed [31:0] col_assign_cast7_fu_816_p1;
wire   [1:0] col_assign_3_t_fu_844_p2;
wire   [7:0] tmp_22_fu_849_p5;
wire   [7:0] tmp_23_fu_868_p5;
wire   [7:0] tmp_24_fu_887_p5;
wire   [7:0] tmp_25_fu_942_p5;
wire   [7:0] tmp_29_fu_960_p5;
wire   [7:0] tmp_33_fu_978_p5;
wire   [8:0] OP1_V_0_cast_fu_1002_p1;
wire  signed [8:0] r_V_8_fu_1006_p2;
wire  signed [10:0] grp_fu_1259_p3;
wire  signed [2:0] r_V_8_1_fu_1052_p0;
wire   [7:0] r_V_8_1_fu_1052_p1;
wire   [10:0] r_V_8_1_fu_1052_p2;
wire  signed [11:0] tmp_546_1_cast_cast_fu_1057_p1;
wire  signed [11:0] p_Val2_84_0_2_cast_fu_1045_p1;
wire   [3:0] r_V_8_1_2_fu_1077_p0;
wire   [7:0] r_V_8_1_2_fu_1077_p1;
wire   [7:0] tmp_77_fu_1065_p1;
wire   [7:0] tmp_76_fu_1061_p1;
wire  signed [1:0] r_V_8_2_fu_1096_p0;
wire   [7:0] r_V_8_2_fu_1096_p1;
wire   [9:0] r_V_8_2_fu_1096_p2;
wire   [2:0] r_V_8_2_1_fu_1109_p0;
wire   [7:0] r_V_8_2_1_fu_1109_p1;
wire   [10:0] r_V_8_2_1_fu_1109_p2;
wire   [9:0] tmp_546_2_2_cast_cas_fu_1118_p1;
wire   [9:0] tmp5_fu_1121_p2;
wire  signed [10:0] tmp5_cast_fu_1127_p1;
wire   [7:0] tmp_37_fu_1086_p2;
wire   [7:0] tmp_78_fu_1082_p1;
wire   [7:0] tmp_80_fu_1114_p1;
wire   [11:0] tmp3_fu_1172_p2;
wire  signed [11:0] tmp4_cast_fu_1176_p1;
wire   [11:0] p_Val2_4_fu_1179_p2;
wire   [7:0] tmp7_fu_1193_p2;
wire   [0:0] isneg_fu_1185_p3;
wire   [3:0] tmp_39_fu_1202_p4;
wire   [0:0] not_i_i_i_fu_1218_p2;
wire   [0:0] tmp_i_i_fu_1212_p2;
wire   [0:0] overflow_fu_1224_p2;
wire   [0:0] tmp_i_i_91_fu_1238_p2;
wire   [7:0] p_mux_i_i_cast_fu_1230_p3;
wire   [7:0] p_Val2_2_fu_1197_p2;
wire  signed [1:0] grp_fu_1252_p0;
wire   [7:0] grp_fu_1252_p1;
wire  signed [1:0] grp_fu_1259_p0;
wire   [7:0] grp_fu_1259_p1;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1252_p10;
wire   [9:0] grp_fu_1259_p10;
wire   [11:0] r_V_8_1_2_fu_1077_p10;
wire   [10:0] r_V_8_1_fu_1052_p10;
wire   [10:0] r_V_8_2_1_fu_1109_p10;
wire   [9:0] r_V_8_2_fu_1096_p10;
reg    ap_condition_365;
reg    ap_condition_359;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1460),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1466),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1472),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U52(
    .din0(right_border_buf_0_s_fu_186),
    .din1(right_border_buf_0_14_fu_190),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_844_p2),
    .dout(tmp_22_fu_849_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U53(
    .din0(right_border_buf_0_16_fu_198),
    .din1(right_border_buf_0_17_fu_202),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_844_p2),
    .dout(tmp_23_fu_868_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U54(
    .din0(right_border_buf_0_18_fu_206),
    .din1(right_border_buf_0_15_fu_194),
    .din2(8'd0),
    .din3(col_assign_3_t_fu_844_p2),
    .dout(tmp_24_fu_887_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U55(
    .din0(col_buf_0_val_0_0_fu_861_p3),
    .din1(col_buf_0_val_1_0_fu_880_p3),
    .din2(col_buf_0_val_2_0_fu_899_p3),
    .din3(row_assign_s_reg_1411),
    .dout(tmp_25_fu_942_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U56(
    .din0(col_buf_0_val_0_0_fu_861_p3),
    .din1(col_buf_0_val_1_0_fu_880_p3),
    .din2(col_buf_0_val_2_0_fu_899_p3),
    .din3(row_assign_10_1_t_reg_1416),
    .dout(tmp_29_fu_960_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U57(
    .din0(col_buf_0_val_0_0_fu_861_p3),
    .din1(col_buf_0_val_1_0_fu_880_p3),
    .din2(col_buf_0_val_2_0_fu_899_p3),
    .din3(row_assign_10_2_t_reg_1421),
    .dout(tmp_33_fu_978_p5)
);

image_filter_mac_pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
image_filter_mac_pcA_U58(
    .din0(grp_fu_1252_p0),
    .din1(grp_fu_1252_p1),
    .din2(r_V_8_fu_1006_p2),
    .dout(grp_fu_1252_p3)
);

image_filter_mac_qcK #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
image_filter_mac_qcK_U59(
    .din0(grp_fu_1259_p0),
    .din1(grp_fu_1259_p1),
    .din2(p_Val2_84_0_1_reg_1496),
    .dout(grp_fu_1259_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_fu_662_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state5)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((exitcond389_i_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_662_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_329 <= j_V_fu_668_p2;
    end else if (((exitcond389_i_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_329 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_318 <= i_V_reg_1377;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_318 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        OP2_V_0_1_cast_reg_1343 <= OP2_V_0_1_cast_fu_340_p1;
        OP2_V_0_2_cast_reg_1348 <= OP2_V_0_2_cast_fu_344_p1;
        OP2_V_1_2_cast_reg_1358[3 : 0] <= OP2_V_1_2_cast_fu_352_p1[3 : 0];
        OP2_V_1_cast_reg_1353 <= OP2_V_1_cast_fu_348_p1;
        OP2_V_2_1_cast_reg_1368[2 : 0] <= OP2_V_2_1_cast_fu_360_p1[2 : 0];
        OP2_V_2_cast_reg_1363 <= OP2_V_2_cast_fu_356_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_brmerge_reg_1449 <= brmerge_reg_1449;
        ap_reg_pp0_iter1_exitcond388_i_reg_1426 <= exitcond388_i_reg_1426;
        ap_reg_pp0_iter1_or_cond_i_i_reg_1435 <= or_cond_i_i_reg_1435;
        ap_reg_pp0_iter1_or_cond_i_reg_1456 <= or_cond_i_reg_1456;
        ap_reg_pp0_iter1_tmp_73_reg_1444 <= tmp_73_reg_1444;
        exitcond388_i_reg_1426 <= exitcond388_i_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_exitcond388_i_reg_1426 <= ap_reg_pp0_iter1_exitcond388_i_reg_1426;
        ap_reg_pp0_iter2_or_cond_i_reg_1456 <= ap_reg_pp0_iter1_or_cond_i_reg_1456;
        ap_reg_pp0_iter3_or_cond_i_reg_1456 <= ap_reg_pp0_iter2_or_cond_i_reg_1456;
        ap_reg_pp0_iter4_or_cond_i_reg_1456 <= ap_reg_pp0_iter3_or_cond_i_reg_1456;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_662_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1449 <= brmerge_fu_806_p2;
        or_cond_i_i_reg_1435 <= or_cond_i_i_fu_720_p2;
        or_cond_i_reg_1456 <= or_cond_i_fu_811_p2;
        tmp_73_reg_1444 <= tmp_73_fu_802_p1;
        x_reg_1439 <= x_fu_794_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1377 <= i_V_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_368_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1391 <= icmp_fu_402_p2;
        row_assign_10_1_t_reg_1416 <= row_assign_10_1_t_fu_614_p2;
        row_assign_10_2_t_reg_1421 <= row_assign_10_2_t_fu_652_p2;
        row_assign_s_reg_1411 <= row_assign_s_fu_576_p2;
        tmp_2_reg_1396 <= tmp_2_fu_408_p2;
        tmp_3_reg_1404 <= tmp_3_fu_420_p2;
        tmp_458_not_reg_1386 <= tmp_458_not_fu_386_p2;
        tmp_502_1_reg_1400 <= tmp_502_1_fu_414_p2;
        tmp_s_reg_1382 <= tmp_s_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1426 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_addr_reg_1460 <= tmp_21_fu_819_p1;
        k_buf_0_val_4_addr_reg_1466 <= tmp_21_fu_819_p1;
        k_buf_0_val_5_addr_reg_1472 <= tmp_21_fu_819_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_or_cond_i_reg_1456 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_84_0_1_reg_1496 <= grp_fu_1252_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_or_cond_i_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_84_1_1_reg_1501 <= p_Val2_84_1_1_fu_1068_p2;
        r_V_8_1_2_reg_1506 <= r_V_8_1_2_fu_1077_p2;
        tmp4_reg_1516 <= tmp4_fu_1131_p2;
        tmp6_reg_1521 <= tmp6_fu_1137_p2;
        tmp8_reg_1526 <= tmp8_fu_1143_p2;
        tmp_79_reg_1511 <= tmp_79_fu_1101_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_i_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_1531 <= p_Val2_s_fu_1244_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1))) begin
        right_border_buf_0_14_fu_190 <= right_border_buf_0_s_fu_186;
        right_border_buf_0_15_fu_194 <= right_border_buf_0_18_fu_206;
        right_border_buf_0_16_fu_198 <= col_buf_0_val_1_0_fu_880_p3;
        right_border_buf_0_17_fu_202 <= right_border_buf_0_16_fu_198;
        right_border_buf_0_18_fu_206 <= col_buf_0_val_2_0_fu_899_p3;
        right_border_buf_0_s_fu_186 <= col_buf_0_val_0_0_fu_861_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond388_i_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_18_fu_166 <= src_kernel_win_0_va_fu_162;
        src_kernel_win_0_va_19_fu_170 <= src_kernel_win_0_va_24_reg_1485;
        src_kernel_win_0_va_20_fu_174 <= src_kernel_win_0_va_19_fu_170;
        src_kernel_win_0_va_fu_162 <= src_kernel_win_0_va_23_reg_1478;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_21_fu_178 <= src_kernel_win_0_va_25_fu_989_p3;
        src_kernel_win_0_va_22_fu_182 <= src_kernel_win_0_va_21_fu_178;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_23_reg_1478 <= src_kernel_win_0_va_23_fu_953_p3;
        src_kernel_win_0_va_24_reg_1485 <= src_kernel_win_0_va_24_fu_971_p3;
        src_kernel_win_0_va_25_reg_1491 <= src_kernel_win_0_va_25_fu_989_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond389_i_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1396 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1396 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_502_1_reg_1400 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op172_read_state5 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_365)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_502_1_reg_1400 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1396 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op172_read_state5 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_359)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1396 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter4_or_cond_i_reg_1456 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter4_or_cond_i_reg_1456 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1382 == 1'd1) & (icmp_reg_1391 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op172_read_state5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op161_read_state5 == 1'b1)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_fu_368_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_cast_s_fu_696_p1 = $signed(ImagLoc_x_fu_690_p2);

assign ImagLoc_x_fu_690_p2 = ($signed(12'd4095) + $signed(t_V_3_cast_fu_658_p1));

assign OP1_V_0_cast_fu_1002_p1 = src_kernel_win_0_va_22_fu_182;

assign OP2_V_0_1_cast_fu_340_p1 = $signed(p_kernel_val_0_V_1_read);

assign OP2_V_0_2_cast_fu_344_p1 = $signed(p_kernel_val_0_V_2_read);

assign OP2_V_1_2_cast_fu_352_p1 = p_kernel_val_1_V_2_read;

assign OP2_V_1_cast_fu_348_p1 = $signed(p_kernel_val_1_V_0_read);

assign OP2_V_2_1_cast_fu_360_p1 = p_kernel_val_2_V_1_read;

assign OP2_V_2_cast_fu_356_p1 = $signed(p_kernel_val_2_V_0_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter4_or_cond_i_reg_1456 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op172_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op161_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter4_or_cond_i_reg_1456 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op172_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op161_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter4_or_cond_i_reg_1456 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op172_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op161_read_state5 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op172_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op161_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((ap_reg_pp0_iter4_or_cond_i_reg_1456 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_359 = ((tmp_2_reg_1396 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0));
end

always @ (*) begin
    ap_condition_365 = ((tmp_502_1_reg_1400 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op161_read_state5 = ((ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (icmp_reg_1391 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0));
end

always @ (*) begin
    ap_predicate_op172_read_state5 = ((tmp_s_reg_1382 == 1'd1) & (icmp_reg_1391 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1426 == 1'd0));
end

assign brmerge_fu_806_p2 = (tmp_458_not_reg_1386 | tmp_17_fu_714_p2);

assign col_assign_3_t_fu_844_p2 = (ap_reg_pp0_iter1_tmp_73_reg_1444 ^ 2'd3);

assign col_assign_cast7_fu_816_p1 = $signed(x_reg_1439);

assign col_buf_0_val_0_0_fu_861_p3 = ((ap_reg_pp0_iter1_brmerge_reg_1449[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_22_fu_849_p5);

assign col_buf_0_val_1_0_fu_880_p3 = ((ap_reg_pp0_iter1_brmerge_reg_1449[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_23_fu_868_p5);

assign col_buf_0_val_2_0_fu_899_p3 = ((ap_reg_pp0_iter1_brmerge_reg_1449[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_24_fu_887_p5);

assign exitcond388_i_fu_662_p2 = ((t_V_2_reg_329 == 11'd1282) ? 1'b1 : 1'b0);

assign exitcond389_i_fu_368_p2 = ((t_V_reg_318 == 10'd722) ? 1'b1 : 1'b0);

assign grp_fu_1252_p0 = OP2_V_0_1_cast_reg_1343;

assign grp_fu_1252_p1 = grp_fu_1252_p10;

assign grp_fu_1252_p10 = src_kernel_win_0_va_21_fu_178;

assign grp_fu_1259_p0 = OP2_V_0_2_cast_reg_1348;

assign grp_fu_1259_p1 = grp_fu_1259_p10;

assign grp_fu_1259_p10 = src_kernel_win_0_va_25_reg_1491;

assign i_V_fu_374_p2 = (t_V_reg_318 + 10'd1);

assign icmp2_fu_684_p2 = ((tmp_70_fu_674_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_402_p2 = ((tmp_53_fu_392_p4 != 9'd0) ? 1'b1 : 1'b0);

assign isneg_fu_1185_p3 = p_Val2_4_fu_1179_p2[32'd11];

assign j_V_fu_668_p2 = (t_V_2_reg_329 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_21_fu_819_p1;

assign k_buf_0_val_4_address0 = tmp_21_fu_819_p1;

assign k_buf_0_val_5_address0 = tmp_21_fu_819_p1;

assign not_i_i_i_fu_1218_p2 = ((tmp_39_fu_1202_p4 != 4'd0) ? 1'b1 : 1'b0);

assign or_cond_i424_i_fu_456_p2 = (tmp_9_fu_450_p2 & rev_fu_444_p2);

assign or_cond_i_fu_811_p2 = (icmp_reg_1391 & icmp2_fu_684_p2);

assign or_cond_i_i_fu_720_p2 = (tmp_17_fu_714_p2 & rev2_fu_708_p2);

assign overflow_fu_1224_p2 = (tmp_i_i_fu_1212_p2 & not_i_i_i_fu_1218_p2);

assign p_Val2_2_fu_1197_p2 = (tmp6_reg_1521 + tmp7_fu_1193_p2);

assign p_Val2_4_fu_1179_p2 = ($signed(tmp3_fu_1172_p2) + $signed(tmp4_cast_fu_1176_p1));

assign p_Val2_84_0_2_cast_fu_1045_p1 = grp_fu_1259_p3;

assign p_Val2_84_1_1_fu_1068_p2 = ($signed(tmp_546_1_cast_cast_fu_1057_p1) + $signed(p_Val2_84_0_2_cast_fu_1045_p1));

assign p_Val2_s_fu_1244_p3 = ((tmp_i_i_91_fu_1238_p2[0:0] === 1'b1) ? p_mux_i_i_cast_fu_1230_p3 : p_Val2_2_fu_1197_p2);

assign p_assign_1_fu_734_p2 = (12'd1 - t_V_3_cast_fu_658_p1);

assign p_assign_2_cast_fu_764_p1 = p_assign_2_fu_758_p2;

assign p_assign_2_fu_758_p2 = ($signed(12'd2558) - $signed(p_p2_i_i_fu_740_p3));

assign p_assign_6_1_fu_508_p2 = ($signed(11'd2046) + $signed(t_V_cast_fu_364_p1));

assign p_assign_6_2_fu_534_p2 = ($signed(11'd2045) + $signed(t_V_cast_fu_364_p1));

assign p_assign_7_fu_470_p2 = (11'd1 - t_V_cast_fu_364_p1);

assign p_assign_8_fu_498_p2 = ($signed(2'd2) - $signed(tmp_58_fu_488_p1));

assign p_dst_data_stream_V_din = p_Val2_s_reg_1531;

assign p_mux_i_i_cast_fu_1230_p3 = ((tmp_i_i_fu_1212_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_p2_i425_i_cast_cast_4_fu_560_p3 = ((tmp_12_fu_492_p2[0:0] === 1'b1) ? tmp_57_fu_484_p1 : p_assign_8_fu_498_p2);

assign p_p2_i425_i_fu_476_p3 = ((tmp_56_fu_462_p3[0:0] === 1'b1) ? p_assign_7_fu_470_p2 : tmp_6_fu_426_p2);

assign p_p2_i_i_cast8_cast_c_fu_748_p1 = $signed(p_p2_i_i_fu_740_p3);

assign p_p2_i_i_fu_740_p3 = ((tmp_72_fu_726_p3[0:0] === 1'b1) ? p_assign_1_fu_734_p2 : ImagLoc_x_fu_690_p2);

assign r_V_8_1_2_fu_1077_p0 = OP2_V_1_2_cast_reg_1358;

assign r_V_8_1_2_fu_1077_p1 = r_V_8_1_2_fu_1077_p10;

assign r_V_8_1_2_fu_1077_p10 = src_kernel_win_0_va_24_reg_1485;

assign r_V_8_1_2_fu_1077_p2 = (r_V_8_1_2_fu_1077_p0 * r_V_8_1_2_fu_1077_p1);

assign r_V_8_1_fu_1052_p0 = OP2_V_1_cast_reg_1353;

assign r_V_8_1_fu_1052_p1 = r_V_8_1_fu_1052_p10;

assign r_V_8_1_fu_1052_p10 = src_kernel_win_0_va_20_fu_174;

assign r_V_8_1_fu_1052_p2 = ($signed(r_V_8_1_fu_1052_p0) * $signed({{1'b0}, {r_V_8_1_fu_1052_p1}}));

assign r_V_8_2_1_fu_1109_p0 = OP2_V_2_1_cast_reg_1368;

assign r_V_8_2_1_fu_1109_p1 = r_V_8_2_1_fu_1109_p10;

assign r_V_8_2_1_fu_1109_p10 = src_kernel_win_0_va_fu_162;

assign r_V_8_2_1_fu_1109_p2 = (r_V_8_2_1_fu_1109_p0 * r_V_8_2_1_fu_1109_p1);

assign r_V_8_2_fu_1096_p0 = OP2_V_2_cast_reg_1363;

assign r_V_8_2_fu_1096_p1 = r_V_8_2_fu_1096_p10;

assign r_V_8_2_fu_1096_p10 = src_kernel_win_0_va_18_fu_166;

assign r_V_8_2_fu_1096_p2 = ($signed(r_V_8_2_fu_1096_p0) * $signed({{1'b0}, {r_V_8_2_fu_1096_p1}}));

assign r_V_8_fu_1006_p2 = (9'd0 - OP1_V_0_cast_fu_1002_p1);

assign rev2_fu_708_p2 = (tmp_71_fu_700_p3 ^ 1'd1);

assign rev_fu_444_p2 = (tmp_55_fu_436_p3 ^ 1'd1);

assign row_assign_10_1_t_fu_614_p2 = (tmp_28_fu_606_p3 ^ 2'd3);

assign row_assign_10_2_t_fu_652_p2 = (tmp_32_fu_644_p3 ^ 2'd3);

assign row_assign_s_fu_576_p2 = (y_1_fu_568_p3 ^ 2'd3);

assign sel_tmp7_fu_782_p2 = (tmp_71_fu_700_p3 | tmp_17_not_fu_776_p2);

assign sel_tmp8_fu_788_p2 = (tmp_19_fu_752_p2 & sel_tmp7_fu_782_p2);

assign sel_tmp_fu_768_p3 = ((or_cond_i_i_fu_720_p2[0:0] === 1'b1) ? ImagLoc_x_cast_cast_s_fu_696_p1 : p_assign_2_cast_fu_764_p1);

assign src_kernel_win_0_va_23_fu_953_p3 = ((tmp_3_reg_1404[0:0] === 1'b1) ? tmp_25_fu_942_p5 : col_buf_0_val_0_0_fu_861_p3);

assign src_kernel_win_0_va_24_fu_971_p3 = ((tmp_3_reg_1404[0:0] === 1'b1) ? tmp_29_fu_960_p5 : col_buf_0_val_1_0_fu_880_p3);

assign src_kernel_win_0_va_25_fu_989_p3 = ((tmp_3_reg_1404[0:0] === 1'b1) ? tmp_33_fu_978_p5 : col_buf_0_val_2_0_fu_899_p3);

assign t_V_3_cast_fu_658_p1 = t_V_2_reg_329;

assign t_V_cast_fu_364_p1 = t_V_reg_318;

assign tmp3_fu_1172_p2 = (r_V_8_1_2_reg_1506 + p_Val2_84_1_1_reg_1501);

assign tmp4_cast_fu_1176_p1 = $signed(tmp4_reg_1516);

assign tmp4_fu_1131_p2 = ($signed(r_V_8_2_1_fu_1109_p2) + $signed(tmp5_cast_fu_1127_p1));

assign tmp5_cast_fu_1127_p1 = $signed(tmp5_fu_1121_p2);

assign tmp5_fu_1121_p2 = (tmp_546_2_2_cast_cas_fu_1118_p1 + r_V_8_2_fu_1096_p2);

assign tmp6_fu_1137_p2 = (tmp_37_fu_1086_p2 + tmp_78_fu_1082_p1);

assign tmp7_fu_1193_p2 = (tmp_79_reg_1511 + tmp8_reg_1526);

assign tmp8_fu_1143_p2 = (src_kernel_win_0_va_23_reg_1478 + tmp_80_fu_1114_p1);

assign tmp_12_fu_492_p2 = (($signed(p_p2_i425_i_fu_476_p3) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_17_fu_714_p2 = (($signed(ImagLoc_x_fu_690_p2) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_17_not_fu_776_p2 = (tmp_17_fu_714_p2 ^ 1'd1);

assign tmp_19_fu_752_p2 = (($signed(p_p2_i_i_fu_740_p3) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_21_fu_819_p1 = $unsigned(col_assign_cast7_fu_816_p1);

assign tmp_26_fu_582_p2 = (tmp_59_fu_504_p1 ^ 2'd2);

assign tmp_28_fu_606_p3 = ((tmp_60_fu_514_p3[0:0] === 1'b1) ? tmp_36_fu_598_p3 : tmp_26_fu_582_p2);

assign tmp_2_fu_408_p2 = ((t_V_reg_318 == 10'd1) ? 1'b1 : 1'b0);

assign tmp_30_fu_620_p2 = (2'd1 + tmp_59_fu_504_p1);

assign tmp_32_fu_644_p3 = ((tmp_63_fu_540_p3[0:0] === 1'b1) ? tmp_38_fu_636_p3 : tmp_30_fu_620_p2);

assign tmp_36_fu_598_p3 = ((tmp_61_fu_522_p3[0:0] === 1'b1) ? tmp_66_fu_588_p2 : tmp_67_fu_594_p1);

assign tmp_37_fu_1086_p2 = (tmp_77_fu_1065_p1 + tmp_76_fu_1061_p1);

assign tmp_38_fu_636_p3 = ((tmp_64_fu_548_p3[0:0] === 1'b1) ? tmp_68_fu_626_p2 : tmp_69_fu_632_p1);

assign tmp_39_fu_1202_p4 = {{p_Val2_4_fu_1179_p2[11:8]}};

assign tmp_3_fu_420_p2 = ((t_V_reg_318 > 10'd720) ? 1'b1 : 1'b0);

assign tmp_458_not_fu_386_p2 = ((t_V_reg_318 > 10'd719) ? 1'b1 : 1'b0);

assign tmp_502_1_fu_414_p2 = ((t_V_reg_318 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_53_fu_392_p4 = {{t_V_reg_318[9:1]}};

assign tmp_546_1_cast_cast_fu_1057_p1 = $signed(r_V_8_1_fu_1052_p2);

assign tmp_546_2_2_cast_cas_fu_1118_p1 = src_kernel_win_0_va_23_reg_1478;

assign tmp_54_fu_432_p1 = tmp_6_fu_426_p2[1:0];

assign tmp_55_fu_436_p3 = tmp_6_fu_426_p2[32'd10];

assign tmp_56_fu_462_p3 = tmp_6_fu_426_p2[32'd10];

assign tmp_57_fu_484_p1 = p_p2_i425_i_fu_476_p3[1:0];

assign tmp_58_fu_488_p1 = p_p2_i425_i_fu_476_p3[1:0];

assign tmp_59_fu_504_p1 = t_V_reg_318[1:0];

assign tmp_60_fu_514_p3 = p_assign_6_1_fu_508_p2[32'd10];

assign tmp_61_fu_522_p3 = p_assign_6_1_fu_508_p2[32'd10];

assign tmp_62_fu_530_p1 = t_V_reg_318[1:0];

assign tmp_63_fu_540_p3 = p_assign_6_2_fu_534_p2[32'd10];

assign tmp_64_fu_548_p3 = p_assign_6_2_fu_534_p2[32'd10];

assign tmp_65_fu_556_p1 = t_V_reg_318[1:0];

assign tmp_66_fu_588_p2 = ($signed(2'd2) - $signed(tmp_62_fu_530_p1));

assign tmp_67_fu_594_p1 = p_assign_6_1_fu_508_p2[1:0];

assign tmp_68_fu_626_p2 = (tmp_65_fu_556_p1 ^ 2'd3);

assign tmp_69_fu_632_p1 = p_assign_6_2_fu_534_p2[1:0];

assign tmp_6_fu_426_p2 = ($signed(11'd2047) + $signed(t_V_cast_fu_364_p1));

assign tmp_70_fu_674_p4 = {{t_V_2_reg_329[10:1]}};

assign tmp_71_fu_700_p3 = ImagLoc_x_fu_690_p2[32'd11];

assign tmp_72_fu_726_p3 = ImagLoc_x_fu_690_p2[32'd11];

assign tmp_73_fu_802_p1 = x_fu_794_p3[1:0];

assign tmp_76_fu_1061_p1 = r_V_8_1_fu_1052_p2[7:0];

assign tmp_77_fu_1065_p1 = grp_fu_1259_p3[7:0];

assign tmp_78_fu_1082_p1 = r_V_8_1_2_fu_1077_p2[7:0];

assign tmp_79_fu_1101_p1 = r_V_8_2_fu_1096_p2[7:0];

assign tmp_80_fu_1114_p1 = r_V_8_2_1_fu_1109_p2[7:0];

assign tmp_9_fu_450_p2 = (($signed(tmp_6_fu_426_p2) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_i_i_91_fu_1238_p2 = (overflow_fu_1224_p2 | isneg_fu_1185_p3);

assign tmp_i_i_fu_1212_p2 = (isneg_fu_1185_p3 ^ 1'd1);

assign tmp_s_fu_380_p2 = ((t_V_reg_318 < 10'd720) ? 1'b1 : 1'b0);

assign x_fu_794_p3 = ((sel_tmp8_fu_788_p2[0:0] === 1'b1) ? p_p2_i_i_cast8_cast_c_fu_748_p1 : sel_tmp_fu_768_p3);

assign y_1_fu_568_p3 = ((or_cond_i424_i_fu_456_p2[0:0] === 1'b1) ? tmp_54_fu_432_p1 : p_p2_i425_i_cast_cast_4_fu_560_p3);

always @ (posedge ap_clk) begin
    OP2_V_1_2_cast_reg_1358[11:4] <= 8'b00000000;
    OP2_V_2_1_cast_reg_1368[10:3] <= 8'b00000000;
end

endmodule //Filter2D
