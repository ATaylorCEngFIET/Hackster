// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4_AR70530_AR70530
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state9 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [7:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_reg_1446;
reg   [0:0] ap_reg_pp0_iter1_exitcond388_i_reg_1446;
reg   [0:0] or_cond_i_i_reg_1455;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_i_reg_1455;
reg   [0:0] icmp_reg_1411;
reg   [0:0] tmp_s_reg_1402;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] or_cond_i_reg_1476;
reg   [0:0] ap_reg_pp0_iter4_or_cond_i_reg_1476;
reg   [10:0] t_V_2_reg_299;
wire   [0:0] exitcond389_i_fu_314_p2;
wire    ap_CS_fsm_state2;
wire   [9:0] i_V_fu_320_p2;
reg   [9:0] i_V_reg_1397;
wire   [0:0] tmp_s_fu_326_p2;
wire   [0:0] tmp_601_not_fu_332_p2;
reg   [0:0] tmp_601_not_reg_1406;
wire   [0:0] icmp_fu_348_p2;
wire   [0:0] tmp_2_fu_354_p2;
reg   [0:0] tmp_2_reg_1416;
wire   [0:0] tmp_645_1_fu_360_p2;
reg   [0:0] tmp_645_1_reg_1420;
wire   [0:0] tmp_3_fu_366_p2;
reg   [0:0] tmp_3_reg_1424;
wire   [1:0] row_assign_s_fu_522_p2;
reg   [1:0] row_assign_s_reg_1431;
wire   [1:0] row_assign_13_1_t_fu_560_p2;
reg   [1:0] row_assign_13_1_t_reg_1436;
wire   [1:0] row_assign_13_2_t_fu_598_p2;
reg   [1:0] row_assign_13_2_t_reg_1441;
wire   [0:0] exitcond388_i_fu_608_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op149_read_state5;
reg    ap_predicate_op160_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_state8_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter2_exitcond388_i_reg_1446;
wire   [10:0] j_V_fu_614_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] or_cond_i_i_fu_666_p2;
wire   [12:0] x_fu_740_p3;
reg   [12:0] x_reg_1459;
wire   [1:0] tmp_45_fu_748_p1;
reg   [1:0] tmp_45_reg_1464;
reg   [1:0] ap_reg_pp0_iter1_tmp_45_reg_1464;
wire   [0:0] brmerge_fu_752_p2;
reg   [0:0] brmerge_reg_1469;
reg   [0:0] ap_reg_pp0_iter1_brmerge_reg_1469;
wire   [0:0] or_cond_i_fu_757_p2;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_reg_1476;
reg   [0:0] ap_reg_pp0_iter2_or_cond_i_reg_1476;
reg   [0:0] ap_reg_pp0_iter3_or_cond_i_reg_1476;
reg   [10:0] k_buf_0_val_3_addr_reg_1480;
reg   [10:0] k_buf_0_val_4_addr_reg_1486;
reg   [10:0] k_buf_0_val_5_addr_reg_1492;
wire   [7:0] src_kernel_win_0_va_6_fu_899_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1498;
reg   [7:0] ap_reg_pp0_iter3_src_kernel_win_0_va_6_reg_1498;
wire   [7:0] src_kernel_win_0_va_7_fu_917_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1504;
wire   [7:0] src_kernel_win_0_va_8_fu_935_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1510;
wire   [20:0] r_V_10_1_1_fu_1283_p2;
reg   [20:0] r_V_10_1_1_reg_1516;
reg   [7:0] src_kernel_win_0_va_16_reg_1521;
reg   [7:0] src_kernel_win_0_va_9_reg_1526;
reg   [7:0] src_kernel_win_0_va_12_reg_1532;
wire   [24:0] grp_fu_1289_p4;
reg   [24:0] p_Val2_86_0_2_reg_1538;
reg    ap_enable_reg_pp0_iter3;
wire   [24:0] tmp3_fu_1060_p2;
reg   [24:0] tmp3_reg_1543;
wire   [26:0] p_Val2_1_fu_1194_p2;
reg   [26:0] p_Val2_1_reg_1548;
reg   [7:0] p_Val2_2_reg_1553;
reg   [0:0] tmp_48_reg_1558;
reg   [4:0] tmp_35_reg_1563;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_condition_pp0_exit_iter2_state5;
reg    ap_enable_reg_pp0_iter4;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
wire   [7:0] k_buf_0_val_3_q0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
wire   [7:0] k_buf_0_val_4_q0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [9:0] t_V_reg_288;
wire    ap_CS_fsm_state9;
wire   [63:0] tmp_26_fu_765_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_168;
reg   [7:0] src_kernel_win_0_va_1_fu_172;
reg   [7:0] src_kernel_win_0_va_2_fu_176;
reg   [7:0] src_kernel_win_0_va_3_fu_180;
reg   [7:0] src_kernel_win_0_va_4_fu_184;
reg   [7:0] src_kernel_win_0_va_5_fu_188;
reg   [7:0] right_border_buf_0_s_fu_192;
wire   [7:0] col_buf_0_val_0_0_fu_807_p3;
reg   [7:0] right_border_buf_0_1_fu_196;
reg   [7:0] right_border_buf_0_2_fu_200;
reg   [7:0] right_border_buf_0_3_fu_204;
wire   [7:0] col_buf_0_val_1_0_fu_826_p3;
reg   [7:0] right_border_buf_0_4_fu_208;
reg   [7:0] right_border_buf_0_5_fu_212;
wire   [7:0] col_buf_0_val_2_0_fu_845_p3;
wire   [8:0] tmp_7_fu_338_p4;
wire   [10:0] t_V_cast_fu_310_p1;
wire   [10:0] tmp_4_fu_372_p2;
wire   [0:0] tmp_10_fu_382_p3;
wire   [0:0] tmp_6_fu_396_p2;
wire   [0:0] rev_fu_390_p2;
wire   [0:0] tmp_11_fu_408_p3;
wire   [10:0] p_assign_s_fu_416_p2;
wire   [10:0] p_p2_i425_i_fu_422_p3;
wire   [1:0] tmp_14_fu_434_p1;
wire   [10:0] p_assign_14_1_fu_454_p2;
wire   [10:0] p_assign_14_2_fu_480_p2;
wire   [0:0] tmp_8_fu_438_p2;
wire   [1:0] tmp_12_fu_430_p1;
wire   [1:0] p_assign_1_fu_444_p2;
wire   [0:0] or_cond_i424_i_fu_402_p2;
wire   [1:0] tmp_9_fu_378_p1;
wire   [1:0] p_p2_i425_i_cast_cast_2_fu_506_p3;
wire   [1:0] y_2_fu_514_p3;
wire   [1:0] tmp_15_fu_450_p1;
wire   [1:0] tmp_24_fu_476_p1;
wire   [0:0] tmp_21_fu_468_p3;
wire   [1:0] tmp_38_fu_534_p2;
wire   [1:0] tmp_39_fu_540_p1;
wire   [0:0] tmp_20_fu_460_p3;
wire   [1:0] tmp_5_fu_544_p3;
wire   [1:0] tmp_1_fu_528_p2;
wire   [1:0] tmp_13_fu_552_p3;
wire   [1:0] tmp_29_fu_502_p1;
wire   [0:0] tmp_27_fu_494_p3;
wire   [1:0] tmp_40_fu_572_p2;
wire   [1:0] tmp_41_fu_578_p1;
wire   [0:0] tmp_25_fu_486_p3;
wire   [1:0] tmp_17_fu_582_p3;
wire   [1:0] tmp_16_fu_566_p2;
wire   [1:0] tmp_18_fu_590_p3;
wire   [9:0] tmp_42_fu_620_p4;
wire   [11:0] t_V_4_cast_fu_604_p1;
wire   [11:0] ImagLoc_x_fu_636_p2;
wire   [0:0] tmp_43_fu_646_p3;
wire   [0:0] tmp_22_fu_660_p2;
wire   [0:0] rev1_fu_654_p2;
wire   [0:0] tmp_44_fu_672_p3;
wire   [11:0] p_assign_3_fu_680_p2;
wire   [11:0] p_p2_i_i_fu_686_p3;
wire   [11:0] p_assign_4_fu_704_p2;
wire  signed [12:0] ImagLoc_x_cast_cast_s_fu_642_p1;
wire   [12:0] p_assign_4_cast_fu_710_p1;
wire   [0:0] tmp_26_not_fu_722_p2;
wire   [0:0] tmp_23_fu_698_p2;
wire   [0:0] sel_tmp7_fu_728_p2;
wire   [0:0] sel_tmp8_fu_734_p2;
wire  signed [12:0] p_p2_i_i_cast34_cast_s_fu_694_p1;
wire   [12:0] sel_tmp_fu_714_p3;
wire   [0:0] icmp1_fu_630_p2;
wire  signed [31:0] col_assign_cast_fu_762_p1;
wire   [1:0] col_assign_6_t_fu_790_p2;
wire   [7:0] tmp_28_fu_795_p5;
wire   [7:0] tmp_30_fu_814_p5;
wire   [7:0] tmp_31_fu_833_p5;
wire   [7:0] tmp_32_fu_888_p5;
wire   [7:0] tmp_33_fu_906_p5;
wire   [7:0] tmp_34_fu_924_p5;
wire   [18:0] p_shl1_fu_976_p3;
wire   [9:0] p_shl2_fu_988_p3;
wire   [19:0] p_shl1_cast_fu_984_p1;
wire   [19:0] p_shl2_cast_fu_996_p1;
wire   [19:0] r_V_10_0_1_fu_1000_p2;
wire  signed [23:0] r_V_10_0_1_cast_fu_1006_p1;
wire   [18:0] p_shl5_fu_1017_p3;
wire   [9:0] p_shl6_fu_1028_p3;
wire   [19:0] p_shl5_cast_fu_1024_p1;
wire   [19:0] p_shl6_cast_fu_1035_p1;
wire   [19:0] r_V_10_1_2_fu_1039_p2;
wire  signed [23:0] r_V_10_1_2_cast_fu_1045_p1;
wire   [20:0] grp_fu_1299_p3;
wire   [24:0] tmp4_cast_fu_1057_p1;
wire   [24:0] tmp_689_1_2_cast_cas_fu_1049_p1;
wire   [18:0] p_shl3_fu_1097_p3;
wire   [9:0] p_shl4_fu_1108_p3;
wire   [19:0] p_shl3_cast_fu_1104_p1;
wire   [19:0] p_shl4_cast_fu_1115_p1;
wire   [19:0] r_V_10_1_fu_1119_p2;
wire  signed [23:0] r_V_10_1_cast_fu_1125_p1;
wire   [25:0] p_Val2_86_0_2_cast_fu_1094_p1;
wire   [25:0] tmp_689_1_cast_fu_1129_p1;
wire   [25:0] tmp3_cast_fu_1139_p1;
wire   [25:0] tmp2_fu_1133_p2;
wire   [25:0] p_Val2_86_2_fu_1142_p2;
wire   [18:0] p_shl_fu_1152_p3;
wire   [9:0] p_shl7_fu_1163_p3;
wire   [19:0] p_shl_cast_fu_1159_p1;
wire   [19:0] p_shl7_cast_fu_1170_p1;
wire   [19:0] r_V_10_2_1_fu_1174_p2;
wire  signed [23:0] r_V_10_2_1_cast_fu_1180_p1;
wire   [24:0] grp_fu_1307_p3;
wire   [26:0] tmp5_cast_fu_1191_p1;
wire   [26:0] p_Val2_86_2_cast_fu_1148_p1;
wire   [7:0] tmp_1_i_i_fu_1228_p1;
wire   [7:0] p_Val2_3_fu_1238_p2;
wire   [0:0] tmp_49_fu_1231_p3;
wire   [0:0] tmp_50_fu_1243_p3;
wire   [0:0] not_Result_9_i_i_fu_1251_p2;
wire   [0:0] Range1_all_zeros_fu_1263_p2;
wire   [0:0] carry_fu_1257_p2;
wire   [0:0] brmerge_i_i_not_i_i_fu_1268_p2;
wire   [7:0] r_V_10_1_1_fu_1283_p0;
wire   [13:0] r_V_10_1_1_fu_1283_p1;
wire   [7:0] grp_fu_1289_p0;
wire   [7:0] grp_fu_1289_p1;
wire   [10:0] grp_fu_1289_p2;
wire   [23:0] grp_fu_1289_p3;
wire   [7:0] grp_fu_1299_p0;
wire   [10:0] grp_fu_1299_p1;
wire   [7:0] grp_fu_1307_p0;
wire   [10:0] grp_fu_1307_p1;
wire   [23:0] grp_fu_1307_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [8:0] grp_fu_1289_p00;
wire   [8:0] grp_fu_1289_p10;
wire   [24:0] grp_fu_1289_p30;
wire   [18:0] grp_fu_1299_p00;
wire   [18:0] grp_fu_1307_p00;
wire   [24:0] grp_fu_1307_p20;
wire   [20:0] r_V_10_1_1_fu_1283_p00;
reg    ap_condition_348;
reg    ap_condition_342;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1480),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(p_src_data_stream_V_dout)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(k_buf_0_val_4_addr_reg_1486),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_1_k_buf_eOg #(
    .DataWidth( 8 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(k_buf_0_val_5_addr_reg_1492),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U29(
    .din0(right_border_buf_0_s_fu_192),
    .din1(right_border_buf_0_1_fu_196),
    .din2(8'd0),
    .din3(col_assign_6_t_fu_790_p2),
    .dout(tmp_28_fu_795_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U30(
    .din0(right_border_buf_0_3_fu_204),
    .din1(right_border_buf_0_4_fu_208),
    .din2(8'd0),
    .din3(col_assign_6_t_fu_790_p2),
    .dout(tmp_30_fu_814_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U31(
    .din0(right_border_buf_0_5_fu_212),
    .din1(right_border_buf_0_2_fu_200),
    .din2(8'd0),
    .din3(col_assign_6_t_fu_790_p2),
    .dout(tmp_31_fu_833_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U32(
    .din0(col_buf_0_val_0_0_fu_807_p3),
    .din1(col_buf_0_val_1_0_fu_826_p3),
    .din2(col_buf_0_val_2_0_fu_845_p3),
    .din3(row_assign_s_reg_1431),
    .dout(tmp_32_fu_888_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U33(
    .din0(col_buf_0_val_0_0_fu_807_p3),
    .din1(col_buf_0_val_1_0_fu_826_p3),
    .din2(col_buf_0_val_2_0_fu_845_p3),
    .din3(row_assign_13_1_t_reg_1436),
    .dout(tmp_33_fu_906_p5)
);

image_filter_mux_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
image_filter_mux_hbi_U34(
    .din0(col_buf_0_val_0_0_fu_807_p3),
    .din1(col_buf_0_val_1_0_fu_826_p3),
    .din2(col_buf_0_val_2_0_fu_845_p3),
    .din3(row_assign_13_2_t_reg_1441),
    .dout(tmp_34_fu_924_p5)
);

image_filter_mul_ibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 21 ))
image_filter_mul_ibs_U35(
    .din0(r_V_10_1_1_fu_1283_p0),
    .din1(r_V_10_1_1_fu_1283_p1),
    .dout(r_V_10_1_1_fu_1283_p2)
);

image_filter_ama_jbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 11 ),
    .din3_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
image_filter_ama_jbC_U36(
    .din0(grp_fu_1289_p0),
    .din1(grp_fu_1289_p1),
    .din2(grp_fu_1289_p2),
    .din3(grp_fu_1289_p3),
    .dout(grp_fu_1289_p4)
);

image_filter_mac_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 21 ),
    .dout_WIDTH( 21 ))
image_filter_mac_kbM_U37(
    .din0(grp_fu_1299_p0),
    .din1(grp_fu_1299_p1),
    .din2(r_V_10_1_1_reg_1516),
    .dout(grp_fu_1299_p3)
);

image_filter_mac_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
image_filter_mac_lbW_U38(
    .din0(grp_fu_1307_p0),
    .din1(grp_fu_1307_p1),
    .din2(grp_fu_1307_p2),
    .dout(grp_fu_1307_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_fu_608_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond389_i_fu_314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter2_state5)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if (((exitcond389_i_fu_314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_608_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_2_reg_299 <= j_V_fu_614_p2;
    end else if (((exitcond389_i_fu_314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        t_V_2_reg_299 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        t_V_reg_288 <= i_V_reg_1397;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_288 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_brmerge_reg_1469 <= brmerge_reg_1469;
        ap_reg_pp0_iter1_exitcond388_i_reg_1446 <= exitcond388_i_reg_1446;
        ap_reg_pp0_iter1_or_cond_i_i_reg_1455 <= or_cond_i_i_reg_1455;
        ap_reg_pp0_iter1_or_cond_i_reg_1476 <= or_cond_i_reg_1476;
        ap_reg_pp0_iter1_tmp_45_reg_1464 <= tmp_45_reg_1464;
        exitcond388_i_reg_1446 <= exitcond388_i_fu_608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_exitcond388_i_reg_1446 <= ap_reg_pp0_iter1_exitcond388_i_reg_1446;
        ap_reg_pp0_iter2_or_cond_i_reg_1476 <= ap_reg_pp0_iter1_or_cond_i_reg_1476;
        ap_reg_pp0_iter3_or_cond_i_reg_1476 <= ap_reg_pp0_iter2_or_cond_i_reg_1476;
        ap_reg_pp0_iter3_src_kernel_win_0_va_6_reg_1498 <= src_kernel_win_0_va_6_reg_1498;
        ap_reg_pp0_iter4_or_cond_i_reg_1476 <= ap_reg_pp0_iter3_or_cond_i_reg_1476;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_608_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1469 <= brmerge_fu_752_p2;
        or_cond_i_i_reg_1455 <= or_cond_i_i_fu_666_p2;
        or_cond_i_reg_1476 <= or_cond_i_fu_757_p2;
        tmp_45_reg_1464 <= tmp_45_fu_748_p1;
        x_reg_1459 <= x_fu_740_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1397 <= i_V_fu_320_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1411 <= icmp_fu_348_p2;
        row_assign_13_1_t_reg_1436 <= row_assign_13_1_t_fu_560_p2;
        row_assign_13_2_t_reg_1441 <= row_assign_13_2_t_fu_598_p2;
        row_assign_s_reg_1431 <= row_assign_s_fu_522_p2;
        tmp_2_reg_1416 <= tmp_2_fu_354_p2;
        tmp_3_reg_1424 <= tmp_3_fu_366_p2;
        tmp_601_not_reg_1406 <= tmp_601_not_fu_332_p2;
        tmp_645_1_reg_1420 <= tmp_645_1_fu_360_p2;
        tmp_s_reg_1402 <= tmp_s_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1446 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_addr_reg_1480 <= tmp_26_fu_765_p1;
        k_buf_0_val_4_addr_reg_1486 <= tmp_26_fu_765_p1;
        k_buf_0_val_5_addr_reg_1492 <= tmp_26_fu_765_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_or_cond_i_reg_1476 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_1_reg_1548 <= p_Val2_1_fu_1194_p2;
        p_Val2_2_reg_1553 <= {{p_Val2_1_fu_1194_p2[21:14]}};
        tmp_35_reg_1563 <= {{p_Val2_1_fu_1194_p2[26:22]}};
        tmp_48_reg_1558 <= p_Val2_1_fu_1194_p2[32'd13];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_or_cond_i_reg_1476 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_86_0_2_reg_1538 <= grp_fu_1289_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_or_cond_i_reg_1476 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_10_1_1_reg_1516 <= r_V_10_1_1_fu_1283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_196 <= right_border_buf_0_s_fu_192;
        right_border_buf_0_2_fu_200 <= right_border_buf_0_5_fu_212;
        right_border_buf_0_3_fu_204 <= col_buf_0_val_1_0_fu_826_p3;
        right_border_buf_0_4_fu_208 <= right_border_buf_0_3_fu_204;
        right_border_buf_0_5_fu_212 <= col_buf_0_val_2_0_fu_845_p3;
        right_border_buf_0_s_fu_192 <= col_buf_0_val_0_0_fu_807_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_or_cond_i_reg_1476 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_12_reg_1532 <= src_kernel_win_0_va_3_fu_180;
        src_kernel_win_0_va_9_reg_1526 <= src_kernel_win_0_va_fu_168;
        tmp3_reg_1543 <= tmp3_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_16_reg_1521 <= src_kernel_win_0_va_2_fu_176;
        src_kernel_win_0_va_6_reg_1498 <= src_kernel_win_0_va_6_fu_899_p3;
        src_kernel_win_0_va_7_reg_1504 <= src_kernel_win_0_va_7_fu_917_p3;
        src_kernel_win_0_va_8_reg_1510 <= src_kernel_win_0_va_8_fu_935_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond388_i_reg_1446 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_172 <= src_kernel_win_0_va_fu_168;
        src_kernel_win_0_va_3_fu_180 <= src_kernel_win_0_va_16_reg_1521;
        src_kernel_win_0_va_4_fu_184 <= src_kernel_win_0_va_8_reg_1510;
        src_kernel_win_0_va_5_fu_188 <= src_kernel_win_0_va_4_fu_184;
        src_kernel_win_0_va_fu_168 <= src_kernel_win_0_va_6_reg_1498;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_2_fu_176 <= src_kernel_win_0_va_7_fu_917_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_condition_pp0_exit_iter2_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter2_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond389_i_fu_314_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_314_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1416 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1416 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_645_1_reg_1420 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op160_read_state5 == 1'b1)) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_q0;
        end else if ((1'b1 == ap_condition_348)) begin
            k_buf_0_val_4_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_645_1_reg_1420 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1416 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op160_read_state5 == 1'b1)) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_q0;
        end else if ((1'b1 == ap_condition_342)) begin
            k_buf_0_val_5_d1 = p_src_data_stream_V_dout;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_2_reg_1416 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter4_or_cond_i_reg_1476 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter4_or_cond_i_reg_1476 == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_s_reg_1402 == 1'd1) & (icmp_reg_1411 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op160_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op149_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_fu_314_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_cast_s_fu_642_p1 = $signed(ImagLoc_x_fu_636_p2);

assign ImagLoc_x_fu_636_p2 = ($signed(12'd4095) + $signed(t_V_4_cast_fu_604_p1));

assign Range1_all_zeros_fu_1263_p2 = ((tmp_35_reg_1563 == 5'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter4_or_cond_i_reg_1476 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op160_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op149_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter4_or_cond_i_reg_1476 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op160_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op149_read_state5 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter4_or_cond_i_reg_1476 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op160_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op149_read_state5 == 1'b1)))));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op160_read_state5 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op149_read_state5 == 1'b1)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter5 = ((ap_reg_pp0_iter4_or_cond_i_reg_1476 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_342 = ((tmp_2_reg_1416 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0));
end

always @ (*) begin
    ap_condition_348 = ((tmp_645_1_reg_1420 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op149_read_state5 = ((ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (icmp_reg_1411 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0));
end

always @ (*) begin
    ap_predicate_op160_read_state5 = ((tmp_s_reg_1402 == 1'd1) & (icmp_reg_1411 == 1'd1) & (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1446 == 1'd0));
end

assign brmerge_fu_752_p2 = (tmp_601_not_reg_1406 | tmp_22_fu_660_p2);

assign brmerge_i_i_not_i_i_fu_1268_p2 = (carry_fu_1257_p2 & Range1_all_zeros_fu_1263_p2);

assign carry_fu_1257_p2 = (tmp_50_fu_1243_p3 | not_Result_9_i_i_fu_1251_p2);

assign col_assign_6_t_fu_790_p2 = (ap_reg_pp0_iter1_tmp_45_reg_1464 ^ 2'd3);

assign col_assign_cast_fu_762_p1 = $signed(x_reg_1459);

assign col_buf_0_val_0_0_fu_807_p3 = ((ap_reg_pp0_iter1_brmerge_reg_1469[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_28_fu_795_p5);

assign col_buf_0_val_1_0_fu_826_p3 = ((ap_reg_pp0_iter1_brmerge_reg_1469[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_30_fu_814_p5);

assign col_buf_0_val_2_0_fu_845_p3 = ((ap_reg_pp0_iter1_brmerge_reg_1469[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_31_fu_833_p5);

assign exitcond388_i_fu_608_p2 = ((t_V_2_reg_299 == 11'd1282) ? 1'b1 : 1'b0);

assign exitcond389_i_fu_314_p2 = ((t_V_reg_288 == 10'd722) ? 1'b1 : 1'b0);

assign grp_fu_1289_p0 = grp_fu_1289_p00;

assign grp_fu_1289_p00 = src_kernel_win_0_va_5_fu_188;

assign grp_fu_1289_p1 = grp_fu_1289_p10;

assign grp_fu_1289_p10 = src_kernel_win_0_va_8_reg_1510;

assign grp_fu_1289_p2 = 19'd936;

assign grp_fu_1289_p3 = grp_fu_1289_p30;

assign grp_fu_1289_p30 = $unsigned(r_V_10_0_1_cast_fu_1006_p1);

assign grp_fu_1299_p0 = grp_fu_1299_p00;

assign grp_fu_1299_p00 = src_kernel_win_0_va_1_fu_172;

assign grp_fu_1299_p1 = 19'd936;

assign grp_fu_1307_p0 = grp_fu_1307_p00;

assign grp_fu_1307_p00 = ap_reg_pp0_iter3_src_kernel_win_0_va_6_reg_1498;

assign grp_fu_1307_p1 = 19'd936;

assign grp_fu_1307_p2 = grp_fu_1307_p20;

assign grp_fu_1307_p20 = $unsigned(r_V_10_2_1_cast_fu_1180_p1);

assign i_V_fu_320_p2 = (t_V_reg_288 + 10'd1);

assign icmp1_fu_630_p2 = ((tmp_42_fu_620_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_348_p2 = ((tmp_7_fu_338_p4 != 9'd0) ? 1'b1 : 1'b0);

assign j_V_fu_614_p2 = (t_V_2_reg_299 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_26_fu_765_p1;

assign k_buf_0_val_4_address0 = tmp_26_fu_765_p1;

assign k_buf_0_val_5_address0 = tmp_26_fu_765_p1;

assign not_Result_9_i_i_fu_1251_p2 = (tmp_49_fu_1231_p3 ^ 1'd1);

assign or_cond_i424_i_fu_402_p2 = (tmp_6_fu_396_p2 & rev_fu_390_p2);

assign or_cond_i_fu_757_p2 = (icmp_reg_1411 & icmp1_fu_630_p2);

assign or_cond_i_i_fu_666_p2 = (tmp_22_fu_660_p2 & rev1_fu_654_p2);

assign p_Val2_1_fu_1194_p2 = (tmp5_cast_fu_1191_p1 + p_Val2_86_2_cast_fu_1148_p1);

assign p_Val2_3_fu_1238_p2 = (p_Val2_2_reg_1553 + tmp_1_i_i_fu_1228_p1);

assign p_Val2_86_0_2_cast_fu_1094_p1 = p_Val2_86_0_2_reg_1538;

assign p_Val2_86_2_cast_fu_1148_p1 = p_Val2_86_2_fu_1142_p2;

assign p_Val2_86_2_fu_1142_p2 = (tmp3_cast_fu_1139_p1 + tmp2_fu_1133_p2);

assign p_assign_14_1_fu_454_p2 = ($signed(11'd2046) + $signed(t_V_cast_fu_310_p1));

assign p_assign_14_2_fu_480_p2 = ($signed(11'd2045) + $signed(t_V_cast_fu_310_p1));

assign p_assign_1_fu_444_p2 = ($signed(2'd2) - $signed(tmp_14_fu_434_p1));

assign p_assign_3_fu_680_p2 = (12'd1 - t_V_4_cast_fu_604_p1);

assign p_assign_4_cast_fu_710_p1 = p_assign_4_fu_704_p2;

assign p_assign_4_fu_704_p2 = ($signed(12'd2558) - $signed(p_p2_i_i_fu_686_p3));

assign p_assign_s_fu_416_p2 = (11'd1 - t_V_cast_fu_310_p1);

assign p_dst_data_stream_V_din = ((brmerge_i_i_not_i_i_fu_1268_p2[0:0] === 1'b1) ? p_Val2_3_fu_1238_p2 : 8'd255);

assign p_p2_i425_i_cast_cast_2_fu_506_p3 = ((tmp_8_fu_438_p2[0:0] === 1'b1) ? tmp_12_fu_430_p1 : p_assign_1_fu_444_p2);

assign p_p2_i425_i_fu_422_p3 = ((tmp_11_fu_408_p3[0:0] === 1'b1) ? p_assign_s_fu_416_p2 : tmp_4_fu_372_p2);

assign p_p2_i_i_cast34_cast_s_fu_694_p1 = $signed(p_p2_i_i_fu_686_p3);

assign p_p2_i_i_fu_686_p3 = ((tmp_44_fu_672_p3[0:0] === 1'b1) ? p_assign_3_fu_680_p2 : ImagLoc_x_fu_636_p2);

assign p_shl1_cast_fu_984_p1 = p_shl1_fu_976_p3;

assign p_shl1_fu_976_p3 = {{src_kernel_win_0_va_4_fu_184}, {11'd0}};

assign p_shl2_cast_fu_996_p1 = p_shl2_fu_988_p3;

assign p_shl2_fu_988_p3 = {{src_kernel_win_0_va_4_fu_184}, {2'd0}};

assign p_shl3_cast_fu_1104_p1 = p_shl3_fu_1097_p3;

assign p_shl3_fu_1097_p3 = {{src_kernel_win_0_va_12_reg_1532}, {11'd0}};

assign p_shl4_cast_fu_1115_p1 = p_shl4_fu_1108_p3;

assign p_shl4_fu_1108_p3 = {{src_kernel_win_0_va_12_reg_1532}, {2'd0}};

assign p_shl5_cast_fu_1024_p1 = p_shl5_fu_1017_p3;

assign p_shl5_fu_1017_p3 = {{src_kernel_win_0_va_7_reg_1504}, {11'd0}};

assign p_shl6_cast_fu_1035_p1 = p_shl6_fu_1028_p3;

assign p_shl6_fu_1028_p3 = {{src_kernel_win_0_va_7_reg_1504}, {2'd0}};

assign p_shl7_cast_fu_1170_p1 = p_shl7_fu_1163_p3;

assign p_shl7_fu_1163_p3 = {{src_kernel_win_0_va_9_reg_1526}, {2'd0}};

assign p_shl_cast_fu_1159_p1 = p_shl_fu_1152_p3;

assign p_shl_fu_1152_p3 = {{src_kernel_win_0_va_9_reg_1526}, {11'd0}};

assign r_V_10_0_1_cast_fu_1006_p1 = $signed(r_V_10_0_1_fu_1000_p2);

assign r_V_10_0_1_fu_1000_p2 = (p_shl1_cast_fu_984_p1 - p_shl2_cast_fu_996_p1);

assign r_V_10_1_1_fu_1283_p0 = r_V_10_1_1_fu_1283_p00;

assign r_V_10_1_1_fu_1283_p00 = src_kernel_win_0_va_2_fu_176;

assign r_V_10_1_1_fu_1283_p1 = 21'd4465;

assign r_V_10_1_2_cast_fu_1045_p1 = $signed(r_V_10_1_2_fu_1039_p2);

assign r_V_10_1_2_fu_1039_p2 = (p_shl5_cast_fu_1024_p1 - p_shl6_cast_fu_1035_p1);

assign r_V_10_1_cast_fu_1125_p1 = $signed(r_V_10_1_fu_1119_p2);

assign r_V_10_1_fu_1119_p2 = (p_shl3_cast_fu_1104_p1 - p_shl4_cast_fu_1115_p1);

assign r_V_10_2_1_cast_fu_1180_p1 = $signed(r_V_10_2_1_fu_1174_p2);

assign r_V_10_2_1_fu_1174_p2 = (p_shl_cast_fu_1159_p1 - p_shl7_cast_fu_1170_p1);

assign rev1_fu_654_p2 = (tmp_43_fu_646_p3 ^ 1'd1);

assign rev_fu_390_p2 = (tmp_10_fu_382_p3 ^ 1'd1);

assign row_assign_13_1_t_fu_560_p2 = (tmp_13_fu_552_p3 ^ 2'd3);

assign row_assign_13_2_t_fu_598_p2 = (tmp_18_fu_590_p3 ^ 2'd3);

assign row_assign_s_fu_522_p2 = (y_2_fu_514_p3 ^ 2'd3);

assign sel_tmp7_fu_728_p2 = (tmp_43_fu_646_p3 | tmp_26_not_fu_722_p2);

assign sel_tmp8_fu_734_p2 = (tmp_23_fu_698_p2 & sel_tmp7_fu_728_p2);

assign sel_tmp_fu_714_p3 = ((or_cond_i_i_fu_666_p2[0:0] === 1'b1) ? ImagLoc_x_cast_cast_s_fu_642_p1 : p_assign_4_cast_fu_710_p1);

assign src_kernel_win_0_va_6_fu_899_p3 = ((tmp_3_reg_1424[0:0] === 1'b1) ? tmp_32_fu_888_p5 : col_buf_0_val_0_0_fu_807_p3);

assign src_kernel_win_0_va_7_fu_917_p3 = ((tmp_3_reg_1424[0:0] === 1'b1) ? tmp_33_fu_906_p5 : col_buf_0_val_1_0_fu_826_p3);

assign src_kernel_win_0_va_8_fu_935_p3 = ((tmp_3_reg_1424[0:0] === 1'b1) ? tmp_34_fu_924_p5 : col_buf_0_val_2_0_fu_845_p3);

assign t_V_4_cast_fu_604_p1 = t_V_2_reg_299;

assign t_V_cast_fu_310_p1 = t_V_reg_288;

assign tmp2_fu_1133_p2 = (p_Val2_86_0_2_cast_fu_1094_p1 + tmp_689_1_cast_fu_1129_p1);

assign tmp3_cast_fu_1139_p1 = tmp3_reg_1543;

assign tmp3_fu_1060_p2 = (tmp4_cast_fu_1057_p1 + tmp_689_1_2_cast_cas_fu_1049_p1);

assign tmp4_cast_fu_1057_p1 = grp_fu_1299_p3;

assign tmp5_cast_fu_1191_p1 = grp_fu_1307_p3;

assign tmp_10_fu_382_p3 = tmp_4_fu_372_p2[32'd10];

assign tmp_11_fu_408_p3 = tmp_4_fu_372_p2[32'd10];

assign tmp_12_fu_430_p1 = p_p2_i425_i_fu_422_p3[1:0];

assign tmp_13_fu_552_p3 = ((tmp_20_fu_460_p3[0:0] === 1'b1) ? tmp_5_fu_544_p3 : tmp_1_fu_528_p2);

assign tmp_14_fu_434_p1 = p_p2_i425_i_fu_422_p3[1:0];

assign tmp_15_fu_450_p1 = t_V_reg_288[1:0];

assign tmp_16_fu_566_p2 = (2'd1 + tmp_15_fu_450_p1);

assign tmp_17_fu_582_p3 = ((tmp_27_fu_494_p3[0:0] === 1'b1) ? tmp_40_fu_572_p2 : tmp_41_fu_578_p1);

assign tmp_18_fu_590_p3 = ((tmp_25_fu_486_p3[0:0] === 1'b1) ? tmp_17_fu_582_p3 : tmp_16_fu_566_p2);

assign tmp_1_fu_528_p2 = (tmp_15_fu_450_p1 ^ 2'd2);

assign tmp_1_i_i_fu_1228_p1 = tmp_48_reg_1558;

assign tmp_20_fu_460_p3 = p_assign_14_1_fu_454_p2[32'd10];

assign tmp_21_fu_468_p3 = p_assign_14_1_fu_454_p2[32'd10];

assign tmp_22_fu_660_p2 = (($signed(ImagLoc_x_fu_636_p2) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_23_fu_698_p2 = (($signed(p_p2_i_i_fu_686_p3) < $signed(12'd1280)) ? 1'b1 : 1'b0);

assign tmp_24_fu_476_p1 = t_V_reg_288[1:0];

assign tmp_25_fu_486_p3 = p_assign_14_2_fu_480_p2[32'd10];

assign tmp_26_fu_765_p1 = $unsigned(col_assign_cast_fu_762_p1);

assign tmp_26_not_fu_722_p2 = (tmp_22_fu_660_p2 ^ 1'd1);

assign tmp_27_fu_494_p3 = p_assign_14_2_fu_480_p2[32'd10];

assign tmp_29_fu_502_p1 = t_V_reg_288[1:0];

assign tmp_2_fu_354_p2 = ((t_V_reg_288 == 10'd1) ? 1'b1 : 1'b0);

assign tmp_38_fu_534_p2 = ($signed(2'd2) - $signed(tmp_24_fu_476_p1));

assign tmp_39_fu_540_p1 = p_assign_14_1_fu_454_p2[1:0];

assign tmp_3_fu_366_p2 = ((t_V_reg_288 > 10'd720) ? 1'b1 : 1'b0);

assign tmp_40_fu_572_p2 = (tmp_29_fu_502_p1 ^ 2'd3);

assign tmp_41_fu_578_p1 = p_assign_14_2_fu_480_p2[1:0];

assign tmp_42_fu_620_p4 = {{t_V_2_reg_299[10:1]}};

assign tmp_43_fu_646_p3 = ImagLoc_x_fu_636_p2[32'd11];

assign tmp_44_fu_672_p3 = ImagLoc_x_fu_636_p2[32'd11];

assign tmp_45_fu_748_p1 = x_fu_740_p3[1:0];

assign tmp_49_fu_1231_p3 = p_Val2_1_reg_1548[32'd21];

assign tmp_4_fu_372_p2 = ($signed(11'd2047) + $signed(t_V_cast_fu_310_p1));

assign tmp_50_fu_1243_p3 = p_Val2_3_fu_1238_p2[32'd7];

assign tmp_5_fu_544_p3 = ((tmp_21_fu_468_p3[0:0] === 1'b1) ? tmp_38_fu_534_p2 : tmp_39_fu_540_p1);

assign tmp_601_not_fu_332_p2 = ((t_V_reg_288 > 10'd719) ? 1'b1 : 1'b0);

assign tmp_645_1_fu_360_p2 = ((t_V_reg_288 == 10'd0) ? 1'b1 : 1'b0);

assign tmp_689_1_2_cast_cas_fu_1049_p1 = $unsigned(r_V_10_1_2_cast_fu_1045_p1);

assign tmp_689_1_cast_fu_1129_p1 = $unsigned(r_V_10_1_cast_fu_1125_p1);

assign tmp_6_fu_396_p2 = (($signed(tmp_4_fu_372_p2) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_7_fu_338_p4 = {{t_V_reg_288[9:1]}};

assign tmp_8_fu_438_p2 = (($signed(p_p2_i425_i_fu_422_p3) < $signed(11'd720)) ? 1'b1 : 1'b0);

assign tmp_9_fu_378_p1 = tmp_4_fu_372_p2[1:0];

assign tmp_s_fu_326_p2 = ((t_V_reg_288 < 10'd720) ? 1'b1 : 1'b0);

assign x_fu_740_p3 = ((sel_tmp8_fu_734_p2[0:0] === 1'b1) ? p_p2_i_i_cast34_cast_s_fu_694_p1 : sel_tmp_fu_714_p3);

assign y_2_fu_514_p3 = ((or_cond_i424_i_fu_402_p2[0:0] === 1'b1) ? tmp_9_fu_378_p1 : p_p2_i425_i_cast_cast_2_fu_506_p3);

endmodule //Filter2D_1
