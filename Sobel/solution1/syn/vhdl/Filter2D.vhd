-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4_AR70530_AR70530
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC;
    p_kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (2 downto 0);
    p_kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (3 downto 0);
    p_kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (1 downto 0);
    p_kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_2D2 : STD_LOGIC_VECTOR (9 downto 0) := "1011010010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv10_2CF : STD_LOGIC_VECTOR (9 downto 0) := "1011001111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_2D0 : STD_LOGIC_VECTOR (10 downto 0) := "01011010000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_502 : STD_LOGIC_VECTOR (10 downto 0) := "10100000010";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_500 : STD_LOGIC_VECTOR (11 downto 0) := "010100000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_9FE : STD_LOGIC_VECTOR (11 downto 0) := "100111111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_reg_1426 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond388_i_reg_1426 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1435 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_i_reg_1435 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1391 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1382 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal or_cond_i_reg_1456 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_or_cond_i_reg_1456 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_329 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_0_1_cast_fu_340_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_1_cast_reg_1343 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_fu_344_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_0_2_cast_reg_1348 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_1_cast_fu_348_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_cast_reg_1353 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_1_2_cast_fu_352_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_1_2_cast_reg_1358 : STD_LOGIC_VECTOR (11 downto 0);
    signal OP2_V_2_cast_fu_356_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_cast_reg_1363 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP2_V_2_1_cast_fu_360_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal OP2_V_2_1_cast_reg_1368 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond389_i_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_374_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_reg_1377 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_458_not_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_458_not_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1396 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_502_1_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_502_1_reg_1400 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1404 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_assign_s_fu_576_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_s_reg_1411 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_fu_614_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_1_t_reg_1416 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_fu_652_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_10_2_t_reg_1421 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_fu_662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op161_read_state5 : BOOLEAN;
    signal ap_predicate_op172_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter2_exitcond388_i_reg_1426 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_668_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_794_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1439 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_73_fu_802_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_reg_1444 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter1_tmp_73_reg_1444 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1449 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_brmerge_reg_1449 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_reg_1456 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_reg_1456 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_reg_1456 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1460 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_addr_reg_1466 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1472 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_23_fu_953_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_23_reg_1478 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_fu_971_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_24_reg_1485 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_fu_989_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_25_reg_1491 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1252_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_84_0_1_reg_1496 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_84_1_1_fu_1068_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_84_1_1_reg_1501 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_2_fu_1077_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_2_reg_1506 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_79_fu_1101_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_79_reg_1511 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp4_fu_1131_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp4_reg_1516 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp6_fu_1137_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp6_reg_1521 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_fu_1143_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp8_reg_1526 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_1244_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1531 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_318 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_21_fu_819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_18_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_19_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_20_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_21_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_22_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_861_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_14_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_15_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_16_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_880_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_17_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_18_fu_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_899_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_392_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_cast_fu_364_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_fu_426_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_55_fu_436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_462_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_470_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_p2_i425_i_fu_476_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_58_fu_488_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_6_1_fu_508_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_assign_6_2_fu_534_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_fu_492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_484_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_8_fu_498_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_432_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_p2_i425_i_cast_cast_4_fu_560_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_1_fu_568_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_fu_504_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_62_fu_530_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_588_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_67_fu_594_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_fu_514_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_598_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_582_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_fu_606_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_65_fu_556_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_64_fu_548_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_626_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_69_fu_632_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_63_fu_540_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_636_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_620_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_32_fu_644_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_70_fu_674_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_3_cast_fu_658_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_690_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_71_fu_700_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_726_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_734_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_fu_740_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_2_fu_758_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_cast_cast_s_fu_696_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_2_cast_fu_764_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_17_not_fu_776_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast8_cast_c_fu_748_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sel_tmp_fu_768_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp2_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_cast7_fu_816_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_3_t_fu_844_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_22_fu_849_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_868_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_887_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_fu_942_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_960_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_978_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal OP1_V_0_cast_fu_1002_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_8_fu_1006_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1259_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_1_fu_1052_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_8_1_fu_1052_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_1_fu_1052_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_546_1_cast_cast_fu_1057_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_84_0_2_cast_fu_1045_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_2_fu_1077_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_8_1_2_fu_1077_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_77_fu_1065_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_76_fu_1061_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_2_fu_1096_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_8_2_fu_1096_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_2_fu_1096_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_8_2_1_fu_1109_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_8_2_1_fu_1109_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_2_1_fu_1109_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_546_2_2_cast_cas_fu_1118_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp5_fu_1121_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp5_cast_fu_1127_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_37_fu_1086_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_78_fu_1082_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_80_fu_1114_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_1172_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp4_cast_fu_1176_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Val2_4_fu_1179_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp7_fu_1193_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isneg_fu_1185_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1202_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal not_i_i_i_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_1224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_91_fu_1238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_fu_1230_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_2_fu_1197_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1252_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1252_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1259_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1259_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1252_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1259_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_V_8_1_2_fu_1077_p10 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_8_1_fu_1052_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_2_1_fu_1109_p10 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_8_2_fu_1096_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_condition_365 : BOOLEAN;
    signal ap_condition_359 : BOOLEAN;

    component image_filter_mux_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component image_filter_mac_pcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component image_filter_mac_qcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component Filter2D_1_k_buf_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1460,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_addr_reg_1466,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_1472,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    image_filter_mux_hbi_U52 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_186,
        din1 => right_border_buf_0_14_fu_190,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_844_p2,
        dout => tmp_22_fu_849_p5);

    image_filter_mux_hbi_U53 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_16_fu_198,
        din1 => right_border_buf_0_17_fu_202,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_844_p2,
        dout => tmp_23_fu_868_p5);

    image_filter_mux_hbi_U54 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_18_fu_206,
        din1 => right_border_buf_0_15_fu_194,
        din2 => ap_const_lv8_0,
        din3 => col_assign_3_t_fu_844_p2,
        dout => tmp_24_fu_887_p5);

    image_filter_mux_hbi_U55 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_861_p3,
        din1 => col_buf_0_val_1_0_fu_880_p3,
        din2 => col_buf_0_val_2_0_fu_899_p3,
        din3 => row_assign_s_reg_1411,
        dout => tmp_25_fu_942_p5);

    image_filter_mux_hbi_U56 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_861_p3,
        din1 => col_buf_0_val_1_0_fu_880_p3,
        din2 => col_buf_0_val_2_0_fu_899_p3,
        din3 => row_assign_10_1_t_reg_1416,
        dout => tmp_29_fu_960_p5);

    image_filter_mux_hbi_U57 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_861_p3,
        din1 => col_buf_0_val_1_0_fu_880_p3,
        din2 => col_buf_0_val_2_0_fu_899_p3,
        din3 => row_assign_10_2_t_reg_1421,
        dout => tmp_33_fu_978_p5);

    image_filter_mac_pcA_U58 : component image_filter_mac_pcA
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 9,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1252_p0,
        din1 => grp_fu_1252_p1,
        din2 => r_V_8_fu_1006_p2,
        dout => grp_fu_1252_p3);

    image_filter_mac_qcK_U59 : component image_filter_mac_qcK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        dout_WIDTH => 11)
    port map (
        din0 => grp_fu_1259_p0,
        din1 => grp_fu_1259_p1,
        din2 => p_Val2_84_0_1_reg_1496,
        dout => grp_fu_1259_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_fu_662_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond389_i_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state5)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((exitcond389_i_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_662_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_329 <= j_V_fu_668_p2;
            elsif (((exitcond389_i_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_329 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_318 <= i_V_reg_1377;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_318 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                OP2_V_0_1_cast_reg_1343 <= OP2_V_0_1_cast_fu_340_p1;
                OP2_V_0_2_cast_reg_1348 <= OP2_V_0_2_cast_fu_344_p1;
                    OP2_V_1_2_cast_reg_1358(3 downto 0) <= OP2_V_1_2_cast_fu_352_p1(3 downto 0);
                OP2_V_1_cast_reg_1353 <= OP2_V_1_cast_fu_348_p1;
                    OP2_V_2_1_cast_reg_1368(2 downto 0) <= OP2_V_2_1_cast_fu_360_p1(2 downto 0);
                OP2_V_2_cast_reg_1363 <= OP2_V_2_cast_fu_356_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_brmerge_reg_1449 <= brmerge_reg_1449;
                ap_reg_pp0_iter1_exitcond388_i_reg_1426 <= exitcond388_i_reg_1426;
                ap_reg_pp0_iter1_or_cond_i_i_reg_1435 <= or_cond_i_i_reg_1435;
                ap_reg_pp0_iter1_or_cond_i_reg_1456 <= or_cond_i_reg_1456;
                ap_reg_pp0_iter1_tmp_73_reg_1444 <= tmp_73_reg_1444;
                exitcond388_i_reg_1426 <= exitcond388_i_fu_662_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_exitcond388_i_reg_1426 <= ap_reg_pp0_iter1_exitcond388_i_reg_1426;
                ap_reg_pp0_iter2_or_cond_i_reg_1456 <= ap_reg_pp0_iter1_or_cond_i_reg_1456;
                ap_reg_pp0_iter3_or_cond_i_reg_1456 <= ap_reg_pp0_iter2_or_cond_i_reg_1456;
                ap_reg_pp0_iter4_or_cond_i_reg_1456 <= ap_reg_pp0_iter3_or_cond_i_reg_1456;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_662_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1449 <= brmerge_fu_806_p2;
                or_cond_i_i_reg_1435 <= or_cond_i_i_fu_720_p2;
                or_cond_i_reg_1456 <= or_cond_i_fu_811_p2;
                tmp_73_reg_1444 <= tmp_73_fu_802_p1;
                x_reg_1439 <= x_fu_794_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1377 <= i_V_fu_374_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_fu_368_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1391 <= icmp_fu_402_p2;
                row_assign_10_1_t_reg_1416 <= row_assign_10_1_t_fu_614_p2;
                row_assign_10_2_t_reg_1421 <= row_assign_10_2_t_fu_652_p2;
                row_assign_s_reg_1411 <= row_assign_s_fu_576_p2;
                tmp_2_reg_1396 <= tmp_2_fu_408_p2;
                tmp_3_reg_1404 <= tmp_3_fu_420_p2;
                tmp_458_not_reg_1386 <= tmp_458_not_fu_386_p2;
                tmp_502_1_reg_1400 <= tmp_502_1_fu_414_p2;
                tmp_s_reg_1382 <= tmp_s_fu_380_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_addr_reg_1460 <= tmp_21_fu_819_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1466 <= tmp_21_fu_819_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1472 <= tmp_21_fu_819_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_or_cond_i_reg_1456 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_84_0_1_reg_1496 <= grp_fu_1252_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_or_cond_i_reg_1456 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_84_1_1_reg_1501 <= p_Val2_84_1_1_fu_1068_p2;
                r_V_8_1_2_reg_1506 <= r_V_8_1_2_fu_1077_p2;
                tmp4_reg_1516 <= tmp4_fu_1131_p2;
                tmp6_reg_1521 <= tmp6_fu_1137_p2;
                tmp8_reg_1526 <= tmp8_fu_1143_p2;
                tmp_79_reg_1511 <= tmp_79_fu_1101_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_or_cond_i_reg_1456 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_s_reg_1531 <= p_Val2_s_fu_1244_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1))) then
                right_border_buf_0_14_fu_190 <= right_border_buf_0_s_fu_186;
                right_border_buf_0_15_fu_194 <= right_border_buf_0_18_fu_206;
                right_border_buf_0_16_fu_198 <= col_buf_0_val_1_0_fu_880_p3;
                right_border_buf_0_17_fu_202 <= right_border_buf_0_16_fu_198;
                right_border_buf_0_18_fu_206 <= col_buf_0_val_2_0_fu_899_p3;
                right_border_buf_0_s_fu_186 <= col_buf_0_val_0_0_fu_861_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_18_fu_166 <= src_kernel_win_0_va_fu_162;
                src_kernel_win_0_va_19_fu_170 <= src_kernel_win_0_va_24_reg_1485;
                src_kernel_win_0_va_20_fu_174 <= src_kernel_win_0_va_19_fu_170;
                src_kernel_win_0_va_fu_162 <= src_kernel_win_0_va_23_reg_1478;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_21_fu_178 <= src_kernel_win_0_va_25_fu_989_p3;
                src_kernel_win_0_va_22_fu_182 <= src_kernel_win_0_va_21_fu_178;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_23_reg_1478 <= src_kernel_win_0_va_23_fu_953_p3;
                src_kernel_win_0_va_24_reg_1485 <= src_kernel_win_0_va_24_fu_971_p3;
                src_kernel_win_0_va_25_reg_1491 <= src_kernel_win_0_va_25_fu_989_p3;
            end if;
        end if;
    end process;
    OP2_V_1_2_cast_reg_1358(11 downto 4) <= "00000000";
    OP2_V_2_1_cast_reg_1368(10 downto 3) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, exitcond389_i_fu_368_p2, ap_CS_fsm_state2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_fu_368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        ImagLoc_x_cast_cast_s_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_fu_690_p2),13));

    ImagLoc_x_fu_690_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_3_cast_fu_658_p1));
    OP1_V_0_cast_fu_1002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_22_fu_182),9));
        OP2_V_0_1_cast_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_1_read),10));

        OP2_V_0_2_cast_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_0_V_2_read),10));

    OP2_V_1_2_cast_fu_352_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_1_V_2_read),12));
        OP2_V_1_cast_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_1_V_0_read),11));

    OP2_V_2_1_cast_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_kernel_val_2_V_1_read),11));
        OP2_V_2_cast_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_kernel_val_2_V_0_read),10));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1456, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter4_or_cond_i_reg_1456 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1456, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter4_or_cond_i_reg_1456 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1456, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter4_or_cond_i_reg_1456 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_pp0_iter4_or_cond_i_reg_1456)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((ap_reg_pp0_iter4_or_cond_i_reg_1456 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_359_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_2_reg_1396)
    begin
                ap_condition_359 <= ((tmp_2_reg_1396 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0));
    end process;


    ap_condition_365_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_502_1_reg_1400)
    begin
                ap_condition_365 <= ((tmp_502_1_reg_1400 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter2_state5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond389_i_fu_368_p2, ap_CS_fsm_state2)
    begin
        if ((((exitcond389_i_fu_368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op161_read_state5_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391)
    begin
                ap_predicate_op161_read_state5 <= ((ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0));
    end process;


    ap_predicate_op172_read_state5_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_s_reg_1382)
    begin
                ap_predicate_op172_read_state5 <= ((tmp_s_reg_1382 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond389_i_fu_368_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_fu_368_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_806_p2 <= (tmp_458_not_reg_1386 or tmp_17_fu_714_p2);
    col_assign_3_t_fu_844_p2 <= (ap_reg_pp0_iter1_tmp_73_reg_1444 xor ap_const_lv2_3);
        col_assign_cast7_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1439),32));

    col_buf_0_val_0_0_fu_861_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_pp0_iter1_brmerge_reg_1449(0) = '1') else 
        tmp_22_fu_849_p5;
    col_buf_0_val_1_0_fu_880_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_pp0_iter1_brmerge_reg_1449(0) = '1') else 
        tmp_23_fu_868_p5;
    col_buf_0_val_2_0_fu_899_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_pp0_iter1_brmerge_reg_1449(0) = '1') else 
        tmp_24_fu_887_p5;
    exitcond388_i_fu_662_p2 <= "1" when (t_V_2_reg_329 = ap_const_lv11_502) else "0";
    exitcond389_i_fu_368_p2 <= "1" when (t_V_reg_318 = ap_const_lv10_2D2) else "0";
    grp_fu_1252_p0 <= OP2_V_0_1_cast_reg_1343(2 - 1 downto 0);
    grp_fu_1252_p1 <= grp_fu_1252_p10(8 - 1 downto 0);
    grp_fu_1252_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_21_fu_178),10));
    grp_fu_1259_p0 <= OP2_V_0_2_cast_reg_1348(2 - 1 downto 0);
    grp_fu_1259_p1 <= grp_fu_1259_p10(8 - 1 downto 0);
    grp_fu_1259_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_25_reg_1491),10));
    i_V_fu_374_p2 <= std_logic_vector(unsigned(t_V_reg_318) + unsigned(ap_const_lv10_1));
    icmp2_fu_684_p2 <= "0" when (tmp_70_fu_674_p4 = ap_const_lv10_0) else "1";
    icmp_fu_402_p2 <= "0" when (tmp_53_fu_392_p4 = ap_const_lv9_0) else "1";
    isneg_fu_1185_p3 <= p_Val2_4_fu_1179_p2(11 downto 11);
    j_V_fu_668_p2 <= std_logic_vector(unsigned(t_V_2_reg_329) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_21_fu_819_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_2_reg_1396, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1396 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_2_reg_1396, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1396 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_21_fu_819_p1(11 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_502_1_reg_1400, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_502_1_reg_1400 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op172_read_state5, k_buf_0_val_3_q0, ap_condition_365)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op172_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif ((ap_const_boolean_1 = ap_condition_365)) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_502_1_reg_1400, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_502_1_reg_1400 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_21_fu_819_p1(11 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_2_reg_1396, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1396 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op172_read_state5, k_buf_0_val_4_q0, ap_condition_359)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op172_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif ((ap_const_boolean_1 = ap_condition_359)) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_2_reg_1396, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1396 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_i_fu_1218_p2 <= "0" when (tmp_39_fu_1202_p4 = ap_const_lv4_0) else "1";
    or_cond_i424_i_fu_456_p2 <= (tmp_9_fu_450_p2 and rev_fu_444_p2);
    or_cond_i_fu_811_p2 <= (icmp_reg_1391 and icmp2_fu_684_p2);
    or_cond_i_i_fu_720_p2 <= (tmp_17_fu_714_p2 and rev2_fu_708_p2);
    overflow_fu_1224_p2 <= (tmp_i_i_fu_1212_p2 and not_i_i_i_fu_1218_p2);
    p_Val2_2_fu_1197_p2 <= std_logic_vector(unsigned(tmp6_reg_1521) + unsigned(tmp7_fu_1193_p2));
    p_Val2_4_fu_1179_p2 <= std_logic_vector(unsigned(tmp3_fu_1172_p2) + unsigned(tmp4_cast_fu_1176_p1));
        p_Val2_84_0_2_cast_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1259_p3),12));

    p_Val2_84_1_1_fu_1068_p2 <= std_logic_vector(signed(tmp_546_1_cast_cast_fu_1057_p1) + signed(p_Val2_84_0_2_cast_fu_1045_p1));
    p_Val2_s_fu_1244_p3 <= 
        p_mux_i_i_cast_fu_1230_p3 when (tmp_i_i_91_fu_1238_p2(0) = '1') else 
        p_Val2_2_fu_1197_p2;
    p_assign_1_fu_734_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_3_cast_fu_658_p1));
    p_assign_2_cast_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_assign_2_fu_758_p2),13));
    p_assign_2_fu_758_p2 <= std_logic_vector(signed(ap_const_lv12_9FE) - signed(p_p2_i_i_fu_740_p3));
    p_assign_6_1_fu_508_p2 <= std_logic_vector(signed(ap_const_lv11_7FE) + signed(t_V_cast_fu_364_p1));
    p_assign_6_2_fu_534_p2 <= std_logic_vector(signed(ap_const_lv11_7FD) + signed(t_V_cast_fu_364_p1));
    p_assign_7_fu_470_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(t_V_cast_fu_364_p1));
    p_assign_8_fu_498_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_58_fu_488_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1456)
    begin
        if (((ap_reg_pp0_iter4_or_cond_i_reg_1456 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= p_Val2_s_reg_1531;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1456, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter4_or_cond_i_reg_1456 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_fu_1230_p3 <= 
        ap_const_lv8_FF when (tmp_i_i_fu_1212_p2(0) = '1') else 
        ap_const_lv8_0;
    p_p2_i425_i_cast_cast_4_fu_560_p3 <= 
        tmp_57_fu_484_p1 when (tmp_12_fu_492_p2(0) = '1') else 
        p_assign_8_fu_498_p2;
    p_p2_i425_i_fu_476_p3 <= 
        p_assign_7_fu_470_p2 when (tmp_56_fu_462_p3(0) = '1') else 
        tmp_6_fu_426_p2;
        p_p2_i_i_cast8_cast_c_fu_748_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_740_p3),13));

    p_p2_i_i_fu_740_p3 <= 
        p_assign_1_fu_734_p2 when (tmp_72_fu_726_p3(0) = '1') else 
        ImagLoc_x_fu_690_p2;

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_reg_pp0_iter1_exitcond388_i_reg_1426, ap_reg_pp0_iter1_or_cond_i_i_reg_1435, icmp_reg_1391, tmp_s_reg_1382)
    begin
        if ((((tmp_s_reg_1382 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_reg_pp0_iter1_or_cond_i_i_reg_1435 = ap_const_lv1_1) and (icmp_reg_1391 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1426 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op161_read_state5, ap_predicate_op172_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op172_read_state5 = ap_const_boolean_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op161_read_state5 = ap_const_boolean_1)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    r_V_8_1_2_fu_1077_p0 <= OP2_V_1_2_cast_reg_1358(4 - 1 downto 0);
    r_V_8_1_2_fu_1077_p1 <= r_V_8_1_2_fu_1077_p10(8 - 1 downto 0);
    r_V_8_1_2_fu_1077_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_24_reg_1485),12));
    r_V_8_1_2_fu_1077_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_1_2_fu_1077_p0) * unsigned(r_V_8_1_2_fu_1077_p1), 12));
    r_V_8_1_fu_1052_p0 <= OP2_V_1_cast_reg_1353(3 - 1 downto 0);
    r_V_8_1_fu_1052_p1 <= r_V_8_1_fu_1052_p10(8 - 1 downto 0);
    r_V_8_1_fu_1052_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_20_fu_174),11));
    r_V_8_1_fu_1052_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_1_fu_1052_p0) * signed('0' &r_V_8_1_fu_1052_p1))), 11));
    r_V_8_2_1_fu_1109_p0 <= OP2_V_2_1_cast_reg_1368(3 - 1 downto 0);
    r_V_8_2_1_fu_1109_p1 <= r_V_8_2_1_fu_1109_p10(8 - 1 downto 0);
    r_V_8_2_1_fu_1109_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_fu_162),11));
    r_V_8_2_1_fu_1109_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_2_1_fu_1109_p0) * unsigned(r_V_8_2_1_fu_1109_p1), 11));
    r_V_8_2_fu_1096_p0 <= OP2_V_2_cast_reg_1363(2 - 1 downto 0);
    r_V_8_2_fu_1096_p1 <= r_V_8_2_fu_1096_p10(8 - 1 downto 0);
    r_V_8_2_fu_1096_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_18_fu_166),10));
    r_V_8_2_fu_1096_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_8_2_fu_1096_p0) * signed('0' &r_V_8_2_fu_1096_p1))), 10));
    r_V_8_fu_1006_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(OP1_V_0_cast_fu_1002_p1));
    rev2_fu_708_p2 <= (tmp_71_fu_700_p3 xor ap_const_lv1_1);
    rev_fu_444_p2 <= (tmp_55_fu_436_p3 xor ap_const_lv1_1);
    row_assign_10_1_t_fu_614_p2 <= (tmp_28_fu_606_p3 xor ap_const_lv2_3);
    row_assign_10_2_t_fu_652_p2 <= (tmp_32_fu_644_p3 xor ap_const_lv2_3);
    row_assign_s_fu_576_p2 <= (y_1_fu_568_p3 xor ap_const_lv2_3);
    sel_tmp7_fu_782_p2 <= (tmp_71_fu_700_p3 or tmp_17_not_fu_776_p2);
    sel_tmp8_fu_788_p2 <= (tmp_19_fu_752_p2 and sel_tmp7_fu_782_p2);
    sel_tmp_fu_768_p3 <= 
        ImagLoc_x_cast_cast_s_fu_696_p1 when (or_cond_i_i_fu_720_p2(0) = '1') else 
        p_assign_2_cast_fu_764_p1;
    src_kernel_win_0_va_23_fu_953_p3 <= 
        tmp_25_fu_942_p5 when (tmp_3_reg_1404(0) = '1') else 
        col_buf_0_val_0_0_fu_861_p3;
    src_kernel_win_0_va_24_fu_971_p3 <= 
        tmp_29_fu_960_p5 when (tmp_3_reg_1404(0) = '1') else 
        col_buf_0_val_1_0_fu_880_p3;
    src_kernel_win_0_va_25_fu_989_p3 <= 
        tmp_33_fu_978_p5 when (tmp_3_reg_1404(0) = '1') else 
        col_buf_0_val_2_0_fu_899_p3;
    t_V_3_cast_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_329),12));
    t_V_cast_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_318),11));
    tmp3_fu_1172_p2 <= std_logic_vector(unsigned(r_V_8_1_2_reg_1506) + unsigned(p_Val2_84_1_1_reg_1501));
        tmp4_cast_fu_1176_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp4_reg_1516),12));

    tmp4_fu_1131_p2 <= std_logic_vector(unsigned(r_V_8_2_1_fu_1109_p2) + unsigned(tmp5_cast_fu_1127_p1));
        tmp5_cast_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp5_fu_1121_p2),11));

    tmp5_fu_1121_p2 <= std_logic_vector(unsigned(tmp_546_2_2_cast_cas_fu_1118_p1) + unsigned(r_V_8_2_fu_1096_p2));
    tmp6_fu_1137_p2 <= std_logic_vector(unsigned(tmp_37_fu_1086_p2) + unsigned(tmp_78_fu_1082_p1));
    tmp7_fu_1193_p2 <= std_logic_vector(unsigned(tmp_79_reg_1511) + unsigned(tmp8_reg_1526));
    tmp8_fu_1143_p2 <= std_logic_vector(unsigned(src_kernel_win_0_va_23_reg_1478) + unsigned(tmp_80_fu_1114_p1));
    tmp_12_fu_492_p2 <= "1" when (signed(p_p2_i425_i_fu_476_p3) < signed(ap_const_lv11_2D0)) else "0";
    tmp_17_fu_714_p2 <= "1" when (signed(ImagLoc_x_fu_690_p2) < signed(ap_const_lv12_500)) else "0";
    tmp_17_not_fu_776_p2 <= (tmp_17_fu_714_p2 xor ap_const_lv1_1);
    tmp_19_fu_752_p2 <= "1" when (signed(p_p2_i_i_fu_740_p3) < signed(ap_const_lv12_500)) else "0";
    tmp_21_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast7_fu_816_p1),64));
    tmp_26_fu_582_p2 <= (tmp_59_fu_504_p1 xor ap_const_lv2_2);
    tmp_28_fu_606_p3 <= 
        tmp_36_fu_598_p3 when (tmp_60_fu_514_p3(0) = '1') else 
        tmp_26_fu_582_p2;
    tmp_2_fu_408_p2 <= "1" when (t_V_reg_318 = ap_const_lv10_1) else "0";
    tmp_30_fu_620_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_59_fu_504_p1));
    tmp_32_fu_644_p3 <= 
        tmp_38_fu_636_p3 when (tmp_63_fu_540_p3(0) = '1') else 
        tmp_30_fu_620_p2;
    tmp_36_fu_598_p3 <= 
        tmp_66_fu_588_p2 when (tmp_61_fu_522_p3(0) = '1') else 
        tmp_67_fu_594_p1;
    tmp_37_fu_1086_p2 <= std_logic_vector(unsigned(tmp_77_fu_1065_p1) + unsigned(tmp_76_fu_1061_p1));
    tmp_38_fu_636_p3 <= 
        tmp_68_fu_626_p2 when (tmp_64_fu_548_p3(0) = '1') else 
        tmp_69_fu_632_p1;
    tmp_39_fu_1202_p4 <= p_Val2_4_fu_1179_p2(11 downto 8);
    tmp_3_fu_420_p2 <= "1" when (unsigned(t_V_reg_318) > unsigned(ap_const_lv10_2D0)) else "0";
    tmp_458_not_fu_386_p2 <= "1" when (unsigned(t_V_reg_318) > unsigned(ap_const_lv10_2CF)) else "0";
    tmp_502_1_fu_414_p2 <= "1" when (t_V_reg_318 = ap_const_lv10_0) else "0";
    tmp_53_fu_392_p4 <= t_V_reg_318(9 downto 1);
        tmp_546_1_cast_cast_fu_1057_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_8_1_fu_1052_p2),12));

    tmp_546_2_2_cast_cas_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_23_reg_1478),10));
    tmp_54_fu_432_p1 <= tmp_6_fu_426_p2(2 - 1 downto 0);
    tmp_55_fu_436_p3 <= tmp_6_fu_426_p2(10 downto 10);
    tmp_56_fu_462_p3 <= tmp_6_fu_426_p2(10 downto 10);
    tmp_57_fu_484_p1 <= p_p2_i425_i_fu_476_p3(2 - 1 downto 0);
    tmp_58_fu_488_p1 <= p_p2_i425_i_fu_476_p3(2 - 1 downto 0);
    tmp_59_fu_504_p1 <= t_V_reg_318(2 - 1 downto 0);
    tmp_60_fu_514_p3 <= p_assign_6_1_fu_508_p2(10 downto 10);
    tmp_61_fu_522_p3 <= p_assign_6_1_fu_508_p2(10 downto 10);
    tmp_62_fu_530_p1 <= t_V_reg_318(2 - 1 downto 0);
    tmp_63_fu_540_p3 <= p_assign_6_2_fu_534_p2(10 downto 10);
    tmp_64_fu_548_p3 <= p_assign_6_2_fu_534_p2(10 downto 10);
    tmp_65_fu_556_p1 <= t_V_reg_318(2 - 1 downto 0);
    tmp_66_fu_588_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_62_fu_530_p1));
    tmp_67_fu_594_p1 <= p_assign_6_1_fu_508_p2(2 - 1 downto 0);
    tmp_68_fu_626_p2 <= (tmp_65_fu_556_p1 xor ap_const_lv2_3);
    tmp_69_fu_632_p1 <= p_assign_6_2_fu_534_p2(2 - 1 downto 0);
    tmp_6_fu_426_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(t_V_cast_fu_364_p1));
    tmp_70_fu_674_p4 <= t_V_2_reg_329(10 downto 1);
    tmp_71_fu_700_p3 <= ImagLoc_x_fu_690_p2(11 downto 11);
    tmp_72_fu_726_p3 <= ImagLoc_x_fu_690_p2(11 downto 11);
    tmp_73_fu_802_p1 <= x_fu_794_p3(2 - 1 downto 0);
    tmp_76_fu_1061_p1 <= r_V_8_1_fu_1052_p2(8 - 1 downto 0);
    tmp_77_fu_1065_p1 <= grp_fu_1259_p3(8 - 1 downto 0);
    tmp_78_fu_1082_p1 <= r_V_8_1_2_fu_1077_p2(8 - 1 downto 0);
    tmp_79_fu_1101_p1 <= r_V_8_2_fu_1096_p2(8 - 1 downto 0);
    tmp_80_fu_1114_p1 <= r_V_8_2_1_fu_1109_p2(8 - 1 downto 0);
    tmp_9_fu_450_p2 <= "1" when (signed(tmp_6_fu_426_p2) < signed(ap_const_lv11_2D0)) else "0";
    tmp_i_i_91_fu_1238_p2 <= (overflow_fu_1224_p2 or isneg_fu_1185_p3);
    tmp_i_i_fu_1212_p2 <= (isneg_fu_1185_p3 xor ap_const_lv1_1);
    tmp_s_fu_380_p2 <= "1" when (unsigned(t_V_reg_318) < unsigned(ap_const_lv10_2D0)) else "0";
    x_fu_794_p3 <= 
        p_p2_i_i_cast8_cast_c_fu_748_p1 when (sel_tmp8_fu_788_p2(0) = '1') else 
        sel_tmp_fu_768_p3;
    y_1_fu_568_p3 <= 
        tmp_54_fu_432_p1 when (or_cond_i424_i_fu_456_p2(0) = '1') else 
        p_p2_i425_i_cast_cast_4_fu_560_p3;
end behav;
