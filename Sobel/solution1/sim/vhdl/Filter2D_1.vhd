-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4_AR70530_AR70530
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of Filter2D_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_2D2 : STD_LOGIC_VECTOR (9 downto 0) := "1011010010";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv10_2CF : STD_LOGIC_VECTOR (9 downto 0) := "1011001111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_2D0 : STD_LOGIC_VECTOR (10 downto 0) := "01011010000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_7FE : STD_LOGIC_VECTOR (10 downto 0) := "11111111110";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_502 : STD_LOGIC_VECTOR (10 downto 0) := "10100000010";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_500 : STD_LOGIC_VECTOR (11 downto 0) := "010100000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_9FE : STD_LOGIC_VECTOR (11 downto 0) := "100111111110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv21_1171 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000101110001";
    constant ap_const_lv19_3A8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001110101000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond388_i_reg_1446 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_exitcond388_i_reg_1446 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_i_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1411 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1402 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dst_data_stream_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal or_cond_i_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_or_cond_i_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_2_reg_299 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond389_i_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_V_fu_320_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_reg_1397 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_601_not_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_601_not_reg_1406 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_645_1_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_645_1_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1424 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_assign_s_fu_522_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_s_reg_1431 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_1_t_fu_560_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_1_t_reg_1436 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_2_t_fu_598_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_13_2_t_reg_1441 : STD_LOGIC_VECTOR (1 downto 0);
    signal exitcond388_i_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op149_read_state5 : BOOLEAN;
    signal ap_predicate_op160_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter2_exitcond388_i_reg_1446 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_614_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal or_cond_i_i_fu_666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_740_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_reg_1459 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_45_fu_748_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_reg_1464 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_pp0_iter1_tmp_45_reg_1464 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1469 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_brmerge_reg_1469 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_or_cond_i_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_or_cond_i_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_or_cond_i_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_buf_0_val_3_addr_reg_1480 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_addr_reg_1486 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_addr_reg_1492 : STD_LOGIC_VECTOR (10 downto 0);
    signal src_kernel_win_0_va_6_fu_899_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_6_reg_1498 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_src_kernel_win_0_va_6_reg_1498 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_fu_917_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_7_reg_1504 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_fu_935_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_8_reg_1510 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_10_1_1_fu_1283_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal r_V_10_1_1_reg_1516 : STD_LOGIC_VECTOR (20 downto 0);
    signal src_kernel_win_0_va_16_reg_1521 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_9_reg_1526 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_12_reg_1532 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1289_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_86_0_2_reg_1538 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal tmp3_fu_1060_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp3_reg_1543 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_Val2_1_fu_1194_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_1_reg_1548 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_2_reg_1553 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_reg_1558 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_1563 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter2_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_288 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal tmp_26_fu_765_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal src_kernel_win_0_va_fu_168 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_1_fu_172 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_2_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_3_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_4_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_va_5_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_s_fu_192 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_807_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_1_fu_196 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_2_fu_200 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_3_fu_204 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_826_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_4_fu_208 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_5_fu_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_845_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_338_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_cast_fu_310_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_4_fu_372_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_10_fu_382_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_408_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_s_fu_416_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_p2_i425_i_fu_422_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_14_fu_434_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_14_1_fu_454_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_assign_14_2_fu_480_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_430_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_assign_1_fu_444_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_cond_i424_i_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_378_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_p2_i425_i_cast_cast_2_fu_506_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_2_fu_514_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_450_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_24_fu_476_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_fu_468_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_534_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_39_fu_540_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_460_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_544_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_528_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_552_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_29_fu_502_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_494_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_572_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_41_fu_578_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_25_fu_486_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_582_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_16_fu_566_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_18_fu_590_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_fu_620_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal t_V_4_cast_fu_604_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_636_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_43_fu_646_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_3_fu_680_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_p2_i_i_fu_686_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_assign_4_fu_704_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_cast_cast_s_fu_642_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_4_cast_fu_710_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_26_not_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast34_cast_s_fu_694_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sel_tmp_fu_714_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp1_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_assign_cast_fu_762_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal col_assign_6_t_fu_790_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_fu_795_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_814_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_833_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_888_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_906_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_924_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl1_fu_976_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl2_fu_988_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_cast_fu_984_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl2_cast_fu_996_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_0_1_fu_1000_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_0_1_cast_fu_1006_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl5_fu_1017_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl6_fu_1028_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl5_cast_fu_1024_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl6_cast_fu_1035_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_1_2_fu_1039_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_1_2_cast_fu_1045_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1299_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp4_cast_fu_1057_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_689_1_2_cast_cas_fu_1049_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_shl3_fu_1097_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl4_fu_1108_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_1104_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl4_cast_fu_1115_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_1_fu_1119_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_1_cast_fu_1125_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_86_0_2_cast_fu_1094_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_689_1_cast_fu_1129_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp3_cast_fu_1139_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp2_fu_1133_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_Val2_86_2_fu_1142_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_shl_fu_1152_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_shl7_fu_1163_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl_cast_fu_1159_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl7_cast_fu_1170_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_2_1_fu_1174_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal r_V_10_2_1_cast_fu_1180_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1307_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp5_cast_fu_1191_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_Val2_86_2_cast_fu_1148_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_1_i_i_fu_1228_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_3_fu_1238_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_1231_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1243_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_Result_9_i_i_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_1257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_i_i_not_i_i_fu_1268_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_10_1_1_fu_1283_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_10_1_1_fu_1283_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1289_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1289_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1289_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1289_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1299_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1299_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1307_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1307_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1307_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1289_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1289_p10 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1289_p30 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_1299_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1307_p00 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1307_p20 : STD_LOGIC_VECTOR (24 downto 0);
    signal r_V_10_1_1_fu_1283_p00 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_condition_348 : BOOLEAN;
    signal ap_condition_342 : BOOLEAN;

    component image_filter_mux_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component image_filter_mul_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component image_filter_ama_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (10 downto 0);
        din3 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component image_filter_mac_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component image_filter_mac_lbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component Filter2D_1_k_buf_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_addr_reg_1480,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => p_src_data_stream_V_dout);

    k_buf_0_val_4_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_addr_reg_1486,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component Filter2D_1_k_buf_eOg
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_addr_reg_1492,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    image_filter_mux_hbi_U29 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_s_fu_192,
        din1 => right_border_buf_0_1_fu_196,
        din2 => ap_const_lv8_0,
        din3 => col_assign_6_t_fu_790_p2,
        dout => tmp_28_fu_795_p5);

    image_filter_mux_hbi_U30 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_3_fu_204,
        din1 => right_border_buf_0_4_fu_208,
        din2 => ap_const_lv8_0,
        din3 => col_assign_6_t_fu_790_p2,
        dout => tmp_30_fu_814_p5);

    image_filter_mux_hbi_U31 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => right_border_buf_0_5_fu_212,
        din1 => right_border_buf_0_2_fu_200,
        din2 => ap_const_lv8_0,
        din3 => col_assign_6_t_fu_790_p2,
        dout => tmp_31_fu_833_p5);

    image_filter_mux_hbi_U32 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_807_p3,
        din1 => col_buf_0_val_1_0_fu_826_p3,
        din2 => col_buf_0_val_2_0_fu_845_p3,
        din3 => row_assign_s_reg_1431,
        dout => tmp_32_fu_888_p5);

    image_filter_mux_hbi_U33 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_807_p3,
        din1 => col_buf_0_val_1_0_fu_826_p3,
        din2 => col_buf_0_val_2_0_fu_845_p3,
        din3 => row_assign_13_1_t_reg_1436,
        dout => tmp_33_fu_906_p5);

    image_filter_mux_hbi_U34 : component image_filter_mux_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => col_buf_0_val_0_0_fu_807_p3,
        din1 => col_buf_0_val_1_0_fu_826_p3,
        din2 => col_buf_0_val_2_0_fu_845_p3,
        din3 => row_assign_13_2_t_reg_1441,
        dout => tmp_34_fu_924_p5);

    image_filter_mul_ibs_U35 : component image_filter_mul_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 14,
        dout_WIDTH => 21)
    port map (
        din0 => r_V_10_1_1_fu_1283_p0,
        din1 => r_V_10_1_1_fu_1283_p1,
        dout => r_V_10_1_1_fu_1283_p2);

    image_filter_ama_jbC_U36 : component image_filter_ama_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 11,
        din3_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1289_p0,
        din1 => grp_fu_1289_p1,
        din2 => grp_fu_1289_p2,
        din3 => grp_fu_1289_p3,
        dout => grp_fu_1289_p4);

    image_filter_mac_kbM_U37 : component image_filter_mac_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        din2_WIDTH => 21,
        dout_WIDTH => 21)
    port map (
        din0 => grp_fu_1299_p0,
        din1 => grp_fu_1299_p1,
        din2 => r_V_10_1_1_reg_1516,
        dout => grp_fu_1299_p3);

    image_filter_mac_lbW_U38 : component image_filter_mac_lbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 11,
        din2_WIDTH => 24,
        dout_WIDTH => 25)
    port map (
        din0 => grp_fu_1307_p0,
        din1 => grp_fu_1307_p1,
        din2 => grp_fu_1307_p2,
        dout => grp_fu_1307_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond388_i_fu_608_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((exitcond389_i_fu_314_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter2_state5)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif (((exitcond389_i_fu_314_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_2_reg_299_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_608_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_2_reg_299 <= j_V_fu_614_p2;
            elsif (((exitcond389_i_fu_314_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                t_V_2_reg_299 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    t_V_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                t_V_reg_288 <= i_V_reg_1397;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_288 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_reg_pp0_iter1_brmerge_reg_1469 <= brmerge_reg_1469;
                ap_reg_pp0_iter1_exitcond388_i_reg_1446 <= exitcond388_i_reg_1446;
                ap_reg_pp0_iter1_or_cond_i_i_reg_1455 <= or_cond_i_i_reg_1455;
                ap_reg_pp0_iter1_or_cond_i_reg_1476 <= or_cond_i_reg_1476;
                ap_reg_pp0_iter1_tmp_45_reg_1464 <= tmp_45_reg_1464;
                exitcond388_i_reg_1446 <= exitcond388_i_fu_608_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_reg_pp0_iter2_exitcond388_i_reg_1446 <= ap_reg_pp0_iter1_exitcond388_i_reg_1446;
                ap_reg_pp0_iter2_or_cond_i_reg_1476 <= ap_reg_pp0_iter1_or_cond_i_reg_1476;
                ap_reg_pp0_iter3_or_cond_i_reg_1476 <= ap_reg_pp0_iter2_or_cond_i_reg_1476;
                ap_reg_pp0_iter3_src_kernel_win_0_va_6_reg_1498 <= src_kernel_win_0_va_6_reg_1498;
                ap_reg_pp0_iter4_or_cond_i_reg_1476 <= ap_reg_pp0_iter3_or_cond_i_reg_1476;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_fu_608_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                brmerge_reg_1469 <= brmerge_fu_752_p2;
                or_cond_i_i_reg_1455 <= or_cond_i_i_fu_666_p2;
                or_cond_i_reg_1476 <= or_cond_i_fu_757_p2;
                tmp_45_reg_1464 <= tmp_45_fu_748_p1;
                x_reg_1459 <= x_fu_740_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1397 <= i_V_fu_320_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond389_i_fu_314_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_reg_1411 <= icmp_fu_348_p2;
                row_assign_13_1_t_reg_1436 <= row_assign_13_1_t_fu_560_p2;
                row_assign_13_2_t_reg_1441 <= row_assign_13_2_t_fu_598_p2;
                row_assign_s_reg_1431 <= row_assign_s_fu_522_p2;
                tmp_2_reg_1416 <= tmp_2_fu_354_p2;
                tmp_3_reg_1424 <= tmp_3_fu_366_p2;
                tmp_601_not_reg_1406 <= tmp_601_not_fu_332_p2;
                tmp_645_1_reg_1420 <= tmp_645_1_fu_360_p2;
                tmp_s_reg_1402 <= tmp_s_fu_326_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                k_buf_0_val_3_addr_reg_1480 <= tmp_26_fu_765_p1(11 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1486 <= tmp_26_fu_765_p1(11 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1492 <= tmp_26_fu_765_p1(11 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter3_or_cond_i_reg_1476 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_1_reg_1548 <= p_Val2_1_fu_1194_p2;
                p_Val2_2_reg_1553 <= p_Val2_1_fu_1194_p2(21 downto 14);
                tmp_35_reg_1563 <= p_Val2_1_fu_1194_p2(26 downto 22);
                tmp_48_reg_1558 <= p_Val2_1_fu_1194_p2(13 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_or_cond_i_reg_1476 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_86_0_2_reg_1538 <= grp_fu_1289_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_or_cond_i_reg_1476 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_10_1_1_reg_1516 <= r_V_10_1_1_fu_1283_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op160_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                right_border_buf_0_1_fu_196 <= right_border_buf_0_s_fu_192;
                right_border_buf_0_2_fu_200 <= right_border_buf_0_5_fu_212;
                right_border_buf_0_3_fu_204 <= col_buf_0_val_1_0_fu_826_p3;
                right_border_buf_0_4_fu_208 <= right_border_buf_0_3_fu_204;
                right_border_buf_0_5_fu_212 <= col_buf_0_val_2_0_fu_845_p3;
                right_border_buf_0_s_fu_192 <= col_buf_0_val_0_0_fu_807_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_or_cond_i_reg_1476 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_12_reg_1532 <= src_kernel_win_0_va_3_fu_180;
                src_kernel_win_0_va_9_reg_1526 <= src_kernel_win_0_va_fu_168;
                tmp3_reg_1543 <= tmp3_fu_1060_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_16_reg_1521 <= src_kernel_win_0_va_2_fu_176;
                src_kernel_win_0_va_6_reg_1498 <= src_kernel_win_0_va_6_fu_899_p3;
                src_kernel_win_0_va_7_reg_1504 <= src_kernel_win_0_va_7_fu_917_p3;
                src_kernel_win_0_va_8_reg_1510 <= src_kernel_win_0_va_8_fu_935_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter2_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_1_fu_172 <= src_kernel_win_0_va_fu_168;
                src_kernel_win_0_va_3_fu_180 <= src_kernel_win_0_va_16_reg_1521;
                src_kernel_win_0_va_4_fu_184 <= src_kernel_win_0_va_8_reg_1510;
                src_kernel_win_0_va_5_fu_188 <= src_kernel_win_0_va_4_fu_184;
                src_kernel_win_0_va_fu_168 <= src_kernel_win_0_va_6_reg_1498;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                src_kernel_win_0_va_2_fu_176 <= src_kernel_win_0_va_7_fu_917_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, exitcond389_i_fu_314_p2, ap_CS_fsm_state2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((exitcond389_i_fu_314_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
        ImagLoc_x_cast_cast_s_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ImagLoc_x_fu_636_p2),13));

    ImagLoc_x_fu_636_p2 <= std_logic_vector(signed(ap_const_lv12_FFF) + signed(t_V_4_cast_fu_604_p1));
    Range1_all_zeros_fu_1263_p2 <= "1" when (tmp_35_reg_1563 = ap_const_lv5_0) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state9 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1476, ap_predicate_op149_read_state5, ap_predicate_op160_read_state5)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_reg_pp0_iter4_or_cond_i_reg_1476 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op149_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1476, ap_predicate_op149_read_state5, ap_predicate_op160_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_reg_pp0_iter4_or_cond_i_reg_1476 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op149_read_state5 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_src_data_stream_V_empty_n, p_dst_data_stream_V_full_n, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1476, ap_predicate_op149_read_state5, ap_predicate_op160_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_reg_pp0_iter4_or_cond_i_reg_1476 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op149_read_state5 = ap_const_boolean_1)))));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter2_assign_proc : process(p_src_data_stream_V_empty_n, ap_predicate_op149_read_state5, ap_predicate_op160_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter2 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op160_read_state5 = ap_const_boolean_1)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and (ap_predicate_op149_read_state5 = ap_const_boolean_1)));
    end process;

        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp0_stage0_iter5_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_pp0_iter4_or_cond_i_reg_1476)
    begin
                ap_block_state8_pp0_stage0_iter5 <= ((ap_reg_pp0_iter4_or_cond_i_reg_1476 = ap_const_lv1_1) and (p_dst_data_stream_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_342_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_2_reg_1416)
    begin
                ap_condition_342 <= ((tmp_2_reg_1416 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0));
    end process;


    ap_condition_348_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_645_1_reg_1420)
    begin
                ap_condition_348 <= ((tmp_645_1_reg_1420 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter2_state5_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter2_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, exitcond389_i_fu_314_p2, ap_CS_fsm_state2)
    begin
        if ((((exitcond389_i_fu_314_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op149_read_state5_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411)
    begin
                ap_predicate_op149_read_state5 <= ((ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0));
    end process;


    ap_predicate_op160_read_state5_assign_proc : process(ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_s_reg_1402)
    begin
                ap_predicate_op160_read_state5 <= ((tmp_s_reg_1402 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(exitcond389_i_fu_314_p2, ap_CS_fsm_state2)
    begin
        if (((exitcond389_i_fu_314_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_752_p2 <= (tmp_601_not_reg_1406 or tmp_22_fu_660_p2);
    brmerge_i_i_not_i_i_fu_1268_p2 <= (carry_fu_1257_p2 and Range1_all_zeros_fu_1263_p2);
    carry_fu_1257_p2 <= (tmp_50_fu_1243_p3 or not_Result_9_i_i_fu_1251_p2);
    col_assign_6_t_fu_790_p2 <= (ap_reg_pp0_iter1_tmp_45_reg_1464 xor ap_const_lv2_3);
        col_assign_cast_fu_762_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_1459),32));

    col_buf_0_val_0_0_fu_807_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_pp0_iter1_brmerge_reg_1469(0) = '1') else 
        tmp_28_fu_795_p5;
    col_buf_0_val_1_0_fu_826_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_pp0_iter1_brmerge_reg_1469(0) = '1') else 
        tmp_30_fu_814_p5;
    col_buf_0_val_2_0_fu_845_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_pp0_iter1_brmerge_reg_1469(0) = '1') else 
        tmp_31_fu_833_p5;
    exitcond388_i_fu_608_p2 <= "1" when (t_V_2_reg_299 = ap_const_lv11_502) else "0";
    exitcond389_i_fu_314_p2 <= "1" when (t_V_reg_288 = ap_const_lv10_2D2) else "0";
    grp_fu_1289_p0 <= grp_fu_1289_p00(8 - 1 downto 0);
    grp_fu_1289_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_5_fu_188),9));
    grp_fu_1289_p1 <= grp_fu_1289_p10(8 - 1 downto 0);
    grp_fu_1289_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_8_reg_1510),9));
    grp_fu_1289_p2 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1289_p3 <= grp_fu_1289_p30(24 - 1 downto 0);
    grp_fu_1289_p30 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_10_0_1_cast_fu_1006_p1),25));
    grp_fu_1299_p0 <= grp_fu_1299_p00(8 - 1 downto 0);
    grp_fu_1299_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_1_fu_172),19));
    grp_fu_1299_p1 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1307_p0 <= grp_fu_1307_p00(8 - 1 downto 0);
    grp_fu_1307_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter3_src_kernel_win_0_va_6_reg_1498),19));
    grp_fu_1307_p1 <= ap_const_lv19_3A8(11 - 1 downto 0);
    grp_fu_1307_p2 <= grp_fu_1307_p20(24 - 1 downto 0);
    grp_fu_1307_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_10_2_1_cast_fu_1180_p1),25));
    i_V_fu_320_p2 <= std_logic_vector(unsigned(t_V_reg_288) + unsigned(ap_const_lv10_1));
    icmp1_fu_630_p2 <= "0" when (tmp_42_fu_620_p4 = ap_const_lv10_0) else "1";
    icmp_fu_348_p2 <= "0" when (tmp_7_fu_338_p4 = ap_const_lv9_0) else "1";
    j_V_fu_614_p2 <= std_logic_vector(unsigned(t_V_2_reg_299) + unsigned(ap_const_lv11_1));
    k_buf_0_val_3_address0 <= tmp_26_fu_765_p1(11 - 1 downto 0);

    k_buf_0_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_2_reg_1416, ap_predicate_op160_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1416 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op160_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_3_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_2_reg_1416, ap_predicate_op160_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1416 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op160_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_26_fu_765_p1(11 - 1 downto 0);

    k_buf_0_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_645_1_reg_1420, ap_predicate_op160_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_645_1_reg_1420 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op160_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_4_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op160_read_state5, k_buf_0_val_3_q0, ap_condition_348)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op160_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_q0;
            elsif ((ap_const_boolean_1 = ap_condition_348)) then 
                k_buf_0_val_4_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_4_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_645_1_reg_1420, ap_predicate_op160_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_645_1_reg_1420 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op160_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_26_fu_765_p1(11 - 1 downto 0);

    k_buf_0_val_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_ce1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_2_reg_1416, ap_predicate_op160_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1416 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op160_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    k_buf_0_val_5_d1_assign_proc : process(p_src_data_stream_V_dout, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_predicate_op160_read_state5, k_buf_0_val_4_q0, ap_condition_342)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
            if ((ap_predicate_op160_read_state5 = ap_const_boolean_1)) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_q0;
            elsif ((ap_const_boolean_1 = ap_condition_342)) then 
                k_buf_0_val_5_d1 <= p_src_data_stream_V_dout;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    k_buf_0_val_5_we1_assign_proc : process(ap_enable_reg_pp0_iter2, ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_2_reg_1416, ap_predicate_op160_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((tmp_2_reg_1416 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op160_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_Result_9_i_i_fu_1251_p2 <= (tmp_49_fu_1231_p3 xor ap_const_lv1_1);
    or_cond_i424_i_fu_402_p2 <= (tmp_6_fu_396_p2 and rev_fu_390_p2);
    or_cond_i_fu_757_p2 <= (icmp_reg_1411 and icmp1_fu_630_p2);
    or_cond_i_i_fu_666_p2 <= (tmp_22_fu_660_p2 and rev1_fu_654_p2);
    p_Val2_1_fu_1194_p2 <= std_logic_vector(unsigned(tmp5_cast_fu_1191_p1) + unsigned(p_Val2_86_2_cast_fu_1148_p1));
    p_Val2_3_fu_1238_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_1553) + unsigned(tmp_1_i_i_fu_1228_p1));
    p_Val2_86_0_2_cast_fu_1094_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_86_0_2_reg_1538),26));
    p_Val2_86_2_cast_fu_1148_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_86_2_fu_1142_p2),27));
    p_Val2_86_2_fu_1142_p2 <= std_logic_vector(unsigned(tmp3_cast_fu_1139_p1) + unsigned(tmp2_fu_1133_p2));
    p_assign_14_1_fu_454_p2 <= std_logic_vector(signed(ap_const_lv11_7FE) + signed(t_V_cast_fu_310_p1));
    p_assign_14_2_fu_480_p2 <= std_logic_vector(signed(ap_const_lv11_7FD) + signed(t_V_cast_fu_310_p1));
    p_assign_1_fu_444_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_14_fu_434_p1));
    p_assign_3_fu_680_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) - unsigned(t_V_4_cast_fu_604_p1));
    p_assign_4_cast_fu_710_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_assign_4_fu_704_p2),13));
    p_assign_4_fu_704_p2 <= std_logic_vector(signed(ap_const_lv12_9FE) - signed(p_p2_i_i_fu_686_p3));
    p_assign_s_fu_416_p2 <= std_logic_vector(unsigned(ap_const_lv11_1) - unsigned(t_V_cast_fu_310_p1));

    p_dst_data_stream_V_blk_n_assign_proc : process(p_dst_data_stream_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1476)
    begin
        if (((ap_reg_pp0_iter4_or_cond_i_reg_1476 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            p_dst_data_stream_V_blk_n <= p_dst_data_stream_V_full_n;
        else 
            p_dst_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_stream_V_din <= 
        p_Val2_3_fu_1238_p2 when (brmerge_i_i_not_i_i_fu_1268_p2(0) = '1') else 
        ap_const_lv8_FF;

    p_dst_data_stream_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_reg_pp0_iter4_or_cond_i_reg_1476, ap_block_pp0_stage0_11001)
    begin
        if (((ap_reg_pp0_iter4_or_cond_i_reg_1476 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_p2_i425_i_cast_cast_2_fu_506_p3 <= 
        tmp_12_fu_430_p1 when (tmp_8_fu_438_p2(0) = '1') else 
        p_assign_1_fu_444_p2;
    p_p2_i425_i_fu_422_p3 <= 
        p_assign_s_fu_416_p2 when (tmp_11_fu_408_p3(0) = '1') else 
        tmp_4_fu_372_p2;
        p_p2_i_i_cast34_cast_s_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_p2_i_i_fu_686_p3),13));

    p_p2_i_i_fu_686_p3 <= 
        p_assign_3_fu_680_p2 when (tmp_44_fu_672_p3(0) = '1') else 
        ImagLoc_x_fu_636_p2;
    p_shl1_cast_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_976_p3),20));
    p_shl1_fu_976_p3 <= (src_kernel_win_0_va_4_fu_184 & ap_const_lv11_0);
    p_shl2_cast_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_988_p3),20));
    p_shl2_fu_988_p3 <= (src_kernel_win_0_va_4_fu_184 & ap_const_lv2_0);
    p_shl3_cast_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_1097_p3),20));
    p_shl3_fu_1097_p3 <= (src_kernel_win_0_va_12_reg_1532 & ap_const_lv11_0);
    p_shl4_cast_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_1108_p3),20));
    p_shl4_fu_1108_p3 <= (src_kernel_win_0_va_12_reg_1532 & ap_const_lv2_0);
    p_shl5_cast_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_1017_p3),20));
    p_shl5_fu_1017_p3 <= (src_kernel_win_0_va_7_reg_1504 & ap_const_lv11_0);
    p_shl6_cast_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl6_fu_1028_p3),20));
    p_shl6_fu_1028_p3 <= (src_kernel_win_0_va_7_reg_1504 & ap_const_lv2_0);
    p_shl7_cast_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl7_fu_1163_p3),20));
    p_shl7_fu_1163_p3 <= (src_kernel_win_0_va_9_reg_1526 & ap_const_lv2_0);
    p_shl_cast_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_1152_p3),20));
    p_shl_fu_1152_p3 <= (src_kernel_win_0_va_9_reg_1526 & ap_const_lv11_0);

    p_src_data_stream_V_blk_n_assign_proc : process(p_src_data_stream_V_empty_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_reg_pp0_iter1_exitcond388_i_reg_1446, ap_reg_pp0_iter1_or_cond_i_i_reg_1455, icmp_reg_1411, tmp_s_reg_1402)
    begin
        if ((((tmp_s_reg_1402 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_1) and (ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_reg_pp0_iter1_or_cond_i_i_reg_1455 = ap_const_lv1_1) and (icmp_reg_1411 = ap_const_lv1_0) and (ap_reg_pp0_iter1_exitcond388_i_reg_1446 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            p_src_data_stream_V_blk_n <= p_src_data_stream_V_empty_n;
        else 
            p_src_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_data_stream_V_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op149_read_state5, ap_predicate_op160_read_state5, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op160_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op149_read_state5 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

        r_V_10_0_1_cast_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_0_1_fu_1000_p2),24));

    r_V_10_0_1_fu_1000_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_984_p1) - unsigned(p_shl2_cast_fu_996_p1));
    r_V_10_1_1_fu_1283_p0 <= r_V_10_1_1_fu_1283_p00(8 - 1 downto 0);
    r_V_10_1_1_fu_1283_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_kernel_win_0_va_2_fu_176),21));
    r_V_10_1_1_fu_1283_p1 <= ap_const_lv21_1171(14 - 1 downto 0);
        r_V_10_1_2_cast_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_1_2_fu_1039_p2),24));

    r_V_10_1_2_fu_1039_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_1024_p1) - unsigned(p_shl6_cast_fu_1035_p1));
        r_V_10_1_cast_fu_1125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_1_fu_1119_p2),24));

    r_V_10_1_fu_1119_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_1104_p1) - unsigned(p_shl4_cast_fu_1115_p1));
        r_V_10_2_1_cast_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_10_2_1_fu_1174_p2),24));

    r_V_10_2_1_fu_1174_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_1159_p1) - unsigned(p_shl7_cast_fu_1170_p1));
    rev1_fu_654_p2 <= (tmp_43_fu_646_p3 xor ap_const_lv1_1);
    rev_fu_390_p2 <= (tmp_10_fu_382_p3 xor ap_const_lv1_1);
    row_assign_13_1_t_fu_560_p2 <= (tmp_13_fu_552_p3 xor ap_const_lv2_3);
    row_assign_13_2_t_fu_598_p2 <= (tmp_18_fu_590_p3 xor ap_const_lv2_3);
    row_assign_s_fu_522_p2 <= (y_2_fu_514_p3 xor ap_const_lv2_3);
    sel_tmp7_fu_728_p2 <= (tmp_43_fu_646_p3 or tmp_26_not_fu_722_p2);
    sel_tmp8_fu_734_p2 <= (tmp_23_fu_698_p2 and sel_tmp7_fu_728_p2);
    sel_tmp_fu_714_p3 <= 
        ImagLoc_x_cast_cast_s_fu_642_p1 when (or_cond_i_i_fu_666_p2(0) = '1') else 
        p_assign_4_cast_fu_710_p1;
    src_kernel_win_0_va_6_fu_899_p3 <= 
        tmp_32_fu_888_p5 when (tmp_3_reg_1424(0) = '1') else 
        col_buf_0_val_0_0_fu_807_p3;
    src_kernel_win_0_va_7_fu_917_p3 <= 
        tmp_33_fu_906_p5 when (tmp_3_reg_1424(0) = '1') else 
        col_buf_0_val_1_0_fu_826_p3;
    src_kernel_win_0_va_8_fu_935_p3 <= 
        tmp_34_fu_924_p5 when (tmp_3_reg_1424(0) = '1') else 
        col_buf_0_val_2_0_fu_845_p3;
    t_V_4_cast_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_299),12));
    t_V_cast_fu_310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_288),11));
    tmp2_fu_1133_p2 <= std_logic_vector(unsigned(p_Val2_86_0_2_cast_fu_1094_p1) + unsigned(tmp_689_1_cast_fu_1129_p1));
    tmp3_cast_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp3_reg_1543),26));
    tmp3_fu_1060_p2 <= std_logic_vector(unsigned(tmp4_cast_fu_1057_p1) + unsigned(tmp_689_1_2_cast_cas_fu_1049_p1));
    tmp4_cast_fu_1057_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1299_p3),25));
    tmp5_cast_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1307_p3),27));
    tmp_10_fu_382_p3 <= tmp_4_fu_372_p2(10 downto 10);
    tmp_11_fu_408_p3 <= tmp_4_fu_372_p2(10 downto 10);
    tmp_12_fu_430_p1 <= p_p2_i425_i_fu_422_p3(2 - 1 downto 0);
    tmp_13_fu_552_p3 <= 
        tmp_5_fu_544_p3 when (tmp_20_fu_460_p3(0) = '1') else 
        tmp_1_fu_528_p2;
    tmp_14_fu_434_p1 <= p_p2_i425_i_fu_422_p3(2 - 1 downto 0);
    tmp_15_fu_450_p1 <= t_V_reg_288(2 - 1 downto 0);
    tmp_16_fu_566_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(tmp_15_fu_450_p1));
    tmp_17_fu_582_p3 <= 
        tmp_40_fu_572_p2 when (tmp_27_fu_494_p3(0) = '1') else 
        tmp_41_fu_578_p1;
    tmp_18_fu_590_p3 <= 
        tmp_17_fu_582_p3 when (tmp_25_fu_486_p3(0) = '1') else 
        tmp_16_fu_566_p2;
    tmp_1_fu_528_p2 <= (tmp_15_fu_450_p1 xor ap_const_lv2_2);
    tmp_1_i_i_fu_1228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_reg_1558),8));
    tmp_20_fu_460_p3 <= p_assign_14_1_fu_454_p2(10 downto 10);
    tmp_21_fu_468_p3 <= p_assign_14_1_fu_454_p2(10 downto 10);
    tmp_22_fu_660_p2 <= "1" when (signed(ImagLoc_x_fu_636_p2) < signed(ap_const_lv12_500)) else "0";
    tmp_23_fu_698_p2 <= "1" when (signed(p_p2_i_i_fu_686_p3) < signed(ap_const_lv12_500)) else "0";
    tmp_24_fu_476_p1 <= t_V_reg_288(2 - 1 downto 0);
    tmp_25_fu_486_p3 <= p_assign_14_2_fu_480_p2(10 downto 10);
    tmp_26_fu_765_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_assign_cast_fu_762_p1),64));
    tmp_26_not_fu_722_p2 <= (tmp_22_fu_660_p2 xor ap_const_lv1_1);
    tmp_27_fu_494_p3 <= p_assign_14_2_fu_480_p2(10 downto 10);
    tmp_29_fu_502_p1 <= t_V_reg_288(2 - 1 downto 0);
    tmp_2_fu_354_p2 <= "1" when (t_V_reg_288 = ap_const_lv10_1) else "0";
    tmp_38_fu_534_p2 <= std_logic_vector(signed(ap_const_lv2_2) - signed(tmp_24_fu_476_p1));
    tmp_39_fu_540_p1 <= p_assign_14_1_fu_454_p2(2 - 1 downto 0);
    tmp_3_fu_366_p2 <= "1" when (unsigned(t_V_reg_288) > unsigned(ap_const_lv10_2D0)) else "0";
    tmp_40_fu_572_p2 <= (tmp_29_fu_502_p1 xor ap_const_lv2_3);
    tmp_41_fu_578_p1 <= p_assign_14_2_fu_480_p2(2 - 1 downto 0);
    tmp_42_fu_620_p4 <= t_V_2_reg_299(10 downto 1);
    tmp_43_fu_646_p3 <= ImagLoc_x_fu_636_p2(11 downto 11);
    tmp_44_fu_672_p3 <= ImagLoc_x_fu_636_p2(11 downto 11);
    tmp_45_fu_748_p1 <= x_fu_740_p3(2 - 1 downto 0);
    tmp_49_fu_1231_p3 <= p_Val2_1_reg_1548(21 downto 21);
    tmp_4_fu_372_p2 <= std_logic_vector(signed(ap_const_lv11_7FF) + signed(t_V_cast_fu_310_p1));
    tmp_50_fu_1243_p3 <= p_Val2_3_fu_1238_p2(7 downto 7);
    tmp_5_fu_544_p3 <= 
        tmp_38_fu_534_p2 when (tmp_21_fu_468_p3(0) = '1') else 
        tmp_39_fu_540_p1;
    tmp_601_not_fu_332_p2 <= "1" when (unsigned(t_V_reg_288) > unsigned(ap_const_lv10_2CF)) else "0";
    tmp_645_1_fu_360_p2 <= "1" when (t_V_reg_288 = ap_const_lv10_0) else "0";
    tmp_689_1_2_cast_cas_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_10_1_2_cast_fu_1045_p1),25));
    tmp_689_1_cast_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_10_1_cast_fu_1125_p1),26));
    tmp_6_fu_396_p2 <= "1" when (signed(tmp_4_fu_372_p2) < signed(ap_const_lv11_2D0)) else "0";
    tmp_7_fu_338_p4 <= t_V_reg_288(9 downto 1);
    tmp_8_fu_438_p2 <= "1" when (signed(p_p2_i425_i_fu_422_p3) < signed(ap_const_lv11_2D0)) else "0";
    tmp_9_fu_378_p1 <= tmp_4_fu_372_p2(2 - 1 downto 0);
    tmp_s_fu_326_p2 <= "1" when (unsigned(t_V_reg_288) < unsigned(ap_const_lv10_2D0)) else "0";
    x_fu_740_p3 <= 
        p_p2_i_i_cast34_cast_s_fu_694_p1 when (sel_tmp8_fu_734_p2(0) = '1') else 
        sel_tmp_fu_714_p3;
    y_2_fu_514_p3 <= 
        tmp_9_fu_378_p1 when (or_cond_i424_i_fu_402_p2(0) = '1') else 
        p_p2_i425_i_cast_cast_2_fu_506_p3;
end behav;
